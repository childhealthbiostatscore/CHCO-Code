---
title: "Melanie Cree - TEAL Study"
author: "Laura Pyle"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
execute:
  echo: false
  message: false
---

```{r libraries}
#| include: false
library(tidyverse)
library(arsenal)
library(dplyr)
library(labelled)
library(nlme)
library(lme4)
library(emmeans)
library(sjPlot)
library(knitr)
library(car)
```

```{r data import}
#| include: false
source("/Volumes/Peds Endo/Melanie Green/TEAL/Data_raw/190636TEAL_R_2023-12-05_1149.R")
data <- remove_labels(data)

# remove screen fails
data <- data %>% filter(!study_group == 3)
data$study_group.factor <- droplevels(data$study_group.factor)
data$study_group.factor <- factor(data$study_group.factor, levels=c("Diet", "GLP-1"))

# wide dataset with needed variables
keep_wide <- data %>% select(subject_id, study_group.factor, age, bmi_cat.factor, tanner,
                             screen_wt, screen_height, screen_bmi, screen_bmi_percentile, screen_bmi_zscore,
                             baseline_wt, baseline_ht, baseline_bmi, baseline_bmi_perc, baseline_bmi_zscore,
                             mid_wt_2, mid_ht_2, mid_bmi_2, mid_bmi_perc_2, mid_bmi_zscore_2,
                             final_wt_3, final_ht_3, final_bmi_3, final_bmi_perc_3, final_bmi_zscore_3,
                             liver_fat_perc, liver_fat_perc_final,
                             dmets, mid_3dmets, dmets_final,
                             kcals_total, kcals_day_final,
                             t_ahi, t_ahi_final,
                             homa, matsuda, 
                             homa_final, matsuda_final 
                             )
keep_wide <- keep_wide %>% mutate_at(c("screen_wt", "screen_height", "screen_bmi", "screen_bmi_percentile", "screen_bmi_zscore",
                             "baseline_wt", "baseline_ht", "baseline_bmi", "baseline_bmi_perc", 'baseline_bmi_zscore',
                             "mid_wt_2", "mid_ht_2", "mid_bmi_2", "mid_bmi_perc_2", "mid_bmi_zscore_2",
                             "final_wt_3", "final_ht_3", "final_bmi_3", "final_bmi_perc_3", "final_bmi_zscore_3",
                             "liver_fat_perc", "liver_fat_perc_final",
                             "dmets", "mid_3dmets", "dmets_final",
                             "kcals_total", "kcals_day_final",
                             "t_ahi", "t_ahi_final",
                             "homa", "matsuda", 
                             "homa_final", "matsuda_final"), as.numeric)

# rename variables to make it easier to make a long dataset
keep_wide <- keep_wide %>% rename( screen_weight = screen_wt, 
                                   screen_bmipercentile = screen_bmi_percentile, 
                                   screen_bmizscore = screen_bmi_zscore,
                                   baseline_weight = baseline_wt, 
                                   baseline_height = baseline_ht, 
                                   baseline_bmipercentile = baseline_bmi_perc, 
                                   baseline_bmizscore = baseline_bmi_zscore,
                                   week8_weight = mid_wt_2, 
                                   week8_height = mid_ht_2, 
                                   week8_bmi = mid_bmi_2, 
                                   week8_bmipercentile = mid_bmi_perc_2, 
                                   week8_bmizscore = mid_bmi_zscore_2,
                                   week16_weight = final_wt_3, 
                                   week16_height = final_ht_3, 
                                   week16_bmi = final_bmi_3, 
                                   week16_bmipercentile = final_bmi_perc_3, 
                                   week16_bmizscore = final_bmi_zscore_3,
                                   baseline_liverfatperc = liver_fat_perc, 
                                   week16_liverfatperc = liver_fat_perc_final,
                                   baseline_dmets = dmets, 
                                   week8_dmets = mid_3dmets, 
                                   week16_dmets = dmets_final,
                                   baseline_kcals = kcals_total, 
                                   week16_kcals = kcals_day_final,
                                   baseline_tahi = t_ahi, 
                                   week16_tahi = t_ahi_final,
                                   baseline_homa = homa, 
                                   baseline_matsuda =  matsuda, 
                                   week16_homa = homa_final, 
                                   week16_matsuda = matsuda_final)


# calculate absolute weight change (baseline as reference)
keep_wide$week8_abswtchange <- keep_wide$week8_weight - keep_wide$baseline_weight
keep_wide$week16_abswtchange <- keep_wide$week16_weight - keep_wide$baseline_weight

# calculate percent weight change (baseline as reference)
keep_wide$week8_perwtchange <- (keep_wide$week8_abswtchange / keep_wide$baseline_weight ) * 100
keep_wide$week16_perwtchange <- (keep_wide$week16_abswtchange / keep_wide$baseline_weight) * 100
keep_wide$baseline_perwtchange <- 0

# calculate change in percent liver fat
keep_wide$week16_liverfatpercchange <- keep_wide$week16_liverfatperc - keep_wide$baseline_liverfatperc

# create long dataset for mixed models
keep_long <- keep_wide %>% pivot_longer(cols = !c("subject_id", "study_group.factor", "age", "bmi_cat.factor", "tanner"),
                                        names_to = c("visit", ".value"), names_sep = "_", values_drop_na = T)
# create a variable equal to weight at baseline
wtbas <- keep_long %>% filter(visit=="baseline")
wtbas <- wtbas %>% select(subject_id, weight, bmi)
names(wtbas) <- c("subject_id", "baseline_weight", "baseline_bmi")
keep_long <- merge(keep_long, wtbas, by="subject_id", all.x = T, all.y = T)
# create numeric time variable
keep_long$weeks <- ifelse(keep_long$visit == "screen", -4, 
                             ifelse(keep_long$visit == "baseline", 0, 
                                    ifelse(keep_long$visit == "week8", 8, 16)))

# create df without screening and baseline
keep_long_nobase <- keep_long %>% filter(visit == "week8" | visit == "week16")

# create df week 16 only for plotting
keep_long_week16 <- keep_long %>% filter(weeks == 16)
keep_long_week16$perwtchange_group <- ifelse(is.na(keep_long_week16$perwtchange), NA,
                                             ifelse(keep_long_week16$perwtchange>0, "Gain",
                                                    ifelse((keep_long_week16$perwtchange<0 & keep_long_week16$perwtchange>-5), "0 - <5% loss",
                                                           ifelse((keep_long_week16$perwtchange<5 & keep_long_week16$perwtchange>-10), "5 - <10% loss", ">= 10% loss"))))
keep_long_week16$perwtchange_group <- factor(keep_long_week16$perwtchange_group, levels=c("Gain", "0 - <5% loss", "5 - <10% loss", ">= 10% loss"))
```

```{r functions}
# what needs to be done
# fix the function below - getting an error on the model statement
# make sure it's printing the pieces I want (emmeans, pairs) and remove pieces not needed
# create adjusted version of the function

model_and_plot <- function(outcome_name, df, pois = FALSE) {
  # Convert to numeric
  df[, outcome_name] <- as.numeric(df[, outcome_name])
  # Fit a mixed model. Some of these are essentially count data and may require a Poisson model
  if (pois) {
    mod <- lme(as.formula(paste0(outcome_name, " ~ as.factor(weeks) * study_group.factor")), random = ~1 | subject_id, data = df)
  } else {
    mod <- lme(as.formula(paste0(outcome_name, " ~ as.factor(weeks) * study_group.factor")), random = ~1 | subject_id, data = df)
  }
  # ANOVA table
  anova_table <- anova.lme(mod, type = "marginal")
  # Means by timepoint
  means <- emmeans(mod, c("weeks", "study_group.factor"))
  pairs <- as.data.frame(pairs(means,adjust="tukey", simple="study_group.factor"))
  means <- as.data.frame(means)
  means$weeks <- c(-4, 0, 8, 16)
  # Plot
  p <- plot_model(mod, type = "emm", terms = c("weeks", "study_group.factor"), title = "") + 
    geom_line() + 
    labs(x = "Weeks", y = "Weight (kg)", colour = "") 
  # Print plot and model results
  print(p)
  print(kable(anova_table, digits = 3, caption = "Type III ANOVA"))
  print(kable(means, digits = 3, caption = "Model means"))
  print(kable(pairs, digits = 3, caption = "Pairwise comparisons"))
}

model_and_plot_no_screen <- function(outcome_name, df, pois = FALSE) {
  # Convert to numeric
  df <- df %>% filter(!weeks == -4)
  df[, outcome_name] <- as.numeric(df[, outcome_name])
  # Fit a mixed model. Some of these are essentially count data and may require a Poisson model
  if (pois) {
    mod <- lme(as.formula(paste0(outcome_name, " ~ as.factor(weeks) * study_group.factor")), random = ~1 | subject_id, data = df)
  } else {
    mod <- lme(as.formula(paste0(outcome_name, " ~ as.factor(weeks) * study_group.factor")), random = ~1 | subject_id, data = df)
  }
  # ANOVA table
  anova_table <- anova.lme(mod, type = "marginal")
  # Means by timepoint
  means <- emmeans(mod, c("weeks", "study_group.factor"))
  pairs <- as.data.frame(pairs(means,adjust="tukey", simple="study_group.factor"))
  means <- as.data.frame(means)
  means$weeks <- c(0, 8, 16)
  # Plot
  p <- plot_model(mod, type = "emm", terms = c("weeks", "study_group.factor"), title = "") + 
    geom_line() + 
    labs(x = "Weeks", y = "Weight (kg)", colour = "") 
  # Print plot and model results
  print(p)
  print(kable(anova_table, digits = 3, caption = "Type III ANOVA"))
  print(kable(means, digits = 3, caption = "Model means"))
  print(kable(pairs, digits = 3, caption = "Pairwise comparisons"))
}

model_and_plot_adjust <- function(outcome_name, covar, df, pois = FALSE) {
  # Convert to numeric
  df <- df %>% filter(!weeks == -4)
  df[, outcome_name] <- as.numeric(df[, outcome_name])
  # Fit a mixed model. Some of these are essentially count data and may require a Poisson model
  if (pois) {
    mod <- lme(as.formula(paste0(outcome_name, " ~ as.factor(weeks) * study_group.factor + ", covar)), random = ~1 | subject_id, data = df, 
               na.action = na.omit)
  } else {
    mod <- lme(as.formula(paste0(outcome_name, " ~ as.factor(weeks) * study_group.factor + ", covar)), random = ~1 | subject_id, data = df,
               na.action = na.omit)
  }
  # ANOVA table
  anova_table <- anova.lme(mod, type = "marginal")
  # Means by timepoint
  means <- emmeans(mod, c("weeks", "study_group.factor"))
  pairs <- as.data.frame(pairs(means,adjust="tukey", simple="study_group.factor"))
  means <- as.data.frame(means)
  means$weeks <- c(8, 16)
  # Plot
  p <- plot_model(mod, type = "emm", terms = c("weeks", "study_group.factor"), title = "") + 
    geom_line() + 
    labs(x = "Weeks", y = "Weight (kg)", colour = "") 
  # Print plot and model results
  print(p)
  print(kable(anova_table, digits = 3, caption = "Type III ANOVA"))
  print(kable(means, digits = 3, caption = "Model means"))
  print(kable(pairs, digits = 3, caption = "Pairwise comparisons"))
}

```

# Methods

Linear mixed-effects models were used to compare changes in weight and BMI in the two groups. Several versions of the models were considered: unadjusted using all time points, unadjusted models excluding screening, and models adjusted for baseline.

A linear model with an interaction between group and weight loss was used to test whether the relationship between weight loss and change in liver fat differed by group.

# Results

## Weight

### Unadjusted model, all timepoints

The p-value for "as.factor(weeks):study_group.factor" tests whether the weight trajectories differed in the two groups.

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
# unadjusted model - include screen
model_and_plot(outcome_name = "weight", df = keep_long)
```

### Unadjusted model, exclude screen

The p-value for "as.factor(weeks):study_group.factor" tests whether the weight trajectories differed in the two groups.

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
# unadjusted model - exclude screen
model_and_plot_no_screen(outcome_name = "weight", df = keep_long)
```

### Model adjusted for baseline

The p-value for "as.factor(weeks):study_group.factor" tests whether the weight trajectories differed in the two groups.

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
# unadjusted model - exclude screen
model_and_plot_adjust(outcome_name = "weight", df = keep_long_nobase, covar = "baseline_weight")
```

## Percent weight change

The p-value for "as.factor(weeks):study_group.factor" tests whether the weight trajectories differed in the two groups.

### Unadjusted model, no screen

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
# unadjusted model - exclude screen
model_and_plot_no_screen(outcome_name = "perwtchange", df = keep_long)
```

## BMI

### Unadjusted model, all timepoints

The p-value for "as.factor(weeks):study_group.factor" tests whether the weight trajectories differed in the two groups.

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
# unadjusted model - include screen
model_and_plot(outcome_name = "bmi", df = keep_long)
```

### Unadjusted model, exclude screen

The p-value for "as.factor(weeks):study_group.factor" tests whether the weight trajectories differed in the two groups.

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
# unadjusted model - exclude screen
model_and_plot_no_screen(outcome_name = "bmi", df = keep_long)
```

### Model adjusted for baseline

The p-value for "as.factor(weeks):study_group.factor" tests whether the weight trajectories differed in the two groups.

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
# unadjusted model - exclude screen
model_and_plot_adjust(outcome_name = "bmi", df = keep_long_nobase, covar = "baseline_bmi")
```

## Does relationship between weight loss and outcome differ by group?

The p-value for "week16_abswtchange:study_group.factor" tests whether the relationship between weight loss and change in liver fat differed in the two groups.

### Absolute weight loss

```{r message=FALSE,warning=FALSE,include=FALSE}
mod <- lm(week16_liverfatpercchange ~ week16_abswtchange*study_group.factor, data=keep_wide)
anova_table <- car::Anova(mod)
```

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
print(kable(anova_table))
```

### Percent weight loss

The p-value for "week16_perwtchange:study_group.factor" tests whether the relationship between weight loss and change in liver fat differed in the two groups.

```{r message=FALSE,warning=FALSE,include=FALSE}
mod <- lm(week16_liverfatpercchange ~ week16_perwtchange*study_group.factor, data=keep_wide)
anova_table <- car::Anova(mod)
```

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
print(kable(anova_table))
```

## Bar chart of percent weight change by group

```{r message=FALSE,warning=FALSE,include=FALSE}
table <- as.data.frame(table(keep_long_week16$study_group.factor, keep_long_week16$perwtchange_group))
colnames(table) <- c("study_group.factor", "perwtchange_group", "freq")
p <- ggplot(table, aes(fill=study_group.factor, y=freq, x=perwtchange_group)) + 
        geom_bar(position="dodge", stat="identity") + labs(x="", y="Count of participants") + labs(fill="")
```

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
p
```

## Waterfall plot of percent weight change for GLP-1

```{r message=FALSE,warning=FALSE,include=FALSE}
w_glp1 <- keep_long_week16 %>% filter(study_group.factor == "GLP-1") %>% select(perwtchange) %>% arrange(perwtchange)
x <- (1:nrow(w_glp1))
w_glp1 <- cbind(x, w_glp1)

p <- ggplot(w_glp1, aes(x=x, y=perwtchange)) + 
        geom_bar(position="dodge", stat="identity") + labs(x="", y="Percent change in weight from baseline") + labs(fill="")

```

```{r message=FALSE,warning=FALSE,dpi=1200,results='asis'}
p
```