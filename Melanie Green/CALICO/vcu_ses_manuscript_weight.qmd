---
title: "CALICO Health Disparities Analyses"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-width: 12
    fig-height: 9
    page-layout: full
    theme:
      light: flatly
      dark: darkly
editor: source
---

```{r setup}
#| include: false
library(Hmisc)
library(tidyverse)
library(arsenal)
library(gtsummary)
library(performance)
library(ggstats)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/BDC/Janet Snell-Bergeon/CALICO",
  "Linux" = "/home/timvigers/OneDrive/Vigers/BDC/Janet Snell-Bergeon/CALICO"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data import and cleaning}
#| include: false
# Load data
load("./Data_Clean/analysis_data.RData")
# Select columns, remove "Other" and "Military" insurance,
# combine races
df$combined_race[df$combined_race == "Pacific Islander"] <- "Other"
df$combined_race[df$combined_race == "American Indian or Alaska Native"] <-
  "Other"
df$combined_race <- droplevels(df$combined_race)
df$combined_race <- relevel(df$combined_race, ref = "Caucasian")
df$insur_type <- factor(df$insur_type,
  levels = c(
    "Public", "Private", "Military", "None", "Other {insur_other}"
  ),
  labels = c(
    "Public/None/Military/Other", "Private", "Public/None/Military/Other",
    "Public/None/Military/Other", "Public/None/Military/Other"
  )
)
df$insur_type <- relevel(df$insur_type, ref = "Private")
# Labels
label(df$insur_type) <- "Insurance Type"
label(df$combined_race) <- "Race"
```

# Medications by months since diagnosis

- To make the plots below, I created a grid of all possible record IDs and values of `cv_monthssincepcosdx` (rounded to the nearest integer), Then I merged the medication info that we have, to create a detailed grid with lots of missing values. I assumed that people were on a medication until the next visit off the medication (and vice versa), so filled down missing values by record id. I followed the same approach for covariates as well. 

## `cv_medications___1` (Metformin)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___1),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___1, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___1`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___1 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___5` (Estrogen-containing pill)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___5),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___5, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___5`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___5 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___6` (Estrogen-containing patch)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___6),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___6, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___6`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___6 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___7` (Estrogen-containing ring)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___7),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___7, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___7`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___7 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___8` (Cyclic progesterone)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___8),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___8, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___8`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___8 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___9` (Daily progesterone)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___9),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___9, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___9`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___9 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___10` (Progesterone implant)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___10),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___10, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___10`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___10 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___11` (Progesterone IUD)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___11),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___11, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___11`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___11 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___12` (Progesterone injection)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___12),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___12, weight_cat, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___12`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___12 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___17` (Atypical antipsychotic)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___17),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___17, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___17`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___17 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___18` (Antidepressant or anti-anxiety)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___18),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___18, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___18`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___18 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___19` (ADHD medication)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___19),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___19, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___19`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___19 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___25` (Topiramate for weight loss)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___25),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___25, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___25`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___25 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___26` (Phentermine for weight)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___26),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___26, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___26`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___26 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___27` (Topirimate/phentermine for weight loss)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___27),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___27, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___27`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___27 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___28` (Liraglutiade (saxcenda) for weight loss)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___28),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___28, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___28`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___28 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```

## `cv_medications___29` (Semaglutide (Wygovy/Ozempic) for weight loss)

```{r}
med <- expand.grid(
  id = unique(df$record_number),
  cv_monthssincepcosdx = 0:max(round(df$cv_monthssincepcosdx), na.rm = T),
  stringsAsFactors = F
)
med <- left_join(
  med,
  df %>%
    mutate(
      id = as.character(record_number),
      cv_monthssincepcosdx = as.numeric(round(cv_monthssincepcosdx))
    ) %>%
    select(id, cv_monthssincepcosdx, weight_cat, cv_medications___29),
  join_by(id, cv_monthssincepcosdx)
) %>% arrange(id, cv_monthssincepcosdx)
med <- med %>%
  group_by(id) %>%
  fill(cv_medications___29, .direction = "down")
total_n <- length(unique(med$id))
med <- med %>% drop_na()
n_med <- length(unique(med$id))
```

- A total of `r n_med` out of `r total_n` participants had non-missing values for `cv_medications___29`.

```{r}
med %>%
  group_by(cv_monthssincepcosdx, weight_cat) %>%
  summarise(prop = sum(cv_medications___29 == "Checked") / n_med, .groups = "drop") %>%
  ggplot(., aes(x = cv_monthssincepcosdx, y = prop, colour = weight_cat)) +
  geom_line() +
  ylab("Proportion on Medication") +
  xlab("Months Since PCOS Diagnosis") +
  theme_bw() +
  scale_colour_discrete(name = "Insurance") +
  ylim(0, 1)
```
