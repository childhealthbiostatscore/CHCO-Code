---
title: "CALICO Exploratory Data Analysis"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-width: 12
    fig-height: 9
    page-layout: full
    theme:
      light: flatly
      dark: darkly
bibliography: /home/tim/Documents/Miscellaneous/zotero.bib
csl: /home/tim/GitHub/styles/american-medical-association.csl
editor: source
---

```{r setup}
#| include: false
library(redcapAPI)
library(dplyr)
library(tidyr)
library(gtsummary)
library(ggplot2)
library(htmltools)
library(plotly)
```

```{r data import}
#| include: false
# Import from REDCap
unlockREDCap(c(rcon = "CALICO"),
  keyring = "API_KEYs",
  envir = 1,
  url = "https://redcap.ucdenver.edu/api/"
)
demo <- exportReportsTyped(rcon,
  report_id = 126039, validation = skip_validation
)
aim1 <- exportReportsTyped(rcon,
  report_id = 125363, validation = skip_validation
)
nch_chop <- exportReportsTyped(rcon,
  report_id = 127643, validation = skip_validation
)
```

```{r data cleaning}
#| message: false
#| warning: false
# Format race columns
races <- c(
  "Caucasian", "African American", "Asian", "Pacific Islander",
  "American Indian or Alaska Native", "Other", "Unknown"
)
demo$Race <- apply(demo[, grep("race", colnames(demo))], 1, function(r) {
  w <- which(r == "Checked")
  if (length(w) == 0) {
    return("Unknown")
  } else {
    return(paste0(races[w], collapse = "/"))
  }
})
# Select demogrphics columns
demo <- demo %>% select(
  record_number, site, Race, ethnicity, insur_type, pcosdx_irregular_menses,
  pcosdx_age, pcosdx_anxietydx_age
)
# First clinic visit only
aim1 <- aim1 %>%
  group_by(record_number) %>%
  filter(row_number() == 1) %>%
  ungroup()
```

# Demographics

```{r}
#| label: tbl-table-1
#| tbl-cap: Participant demographics
demo %>%
  select(-record_number) %>%
  tbl_summary(missing_text = "(Missing)")
```

# Histograms

```{r results='asis'}
#| message: false
#| warning: false
numeric <- aim1 %>%
  select(record_number, where(is.numeric), -redcap_repeat_instance)
plots=lapply(colnames(numeric)[2:ncol(numeric)], function(v) {
  p <- ggplot(numeric, aes(
    x = !!sym(v), text = paste0("ID: ", record_number)
  )) +
    geom_histogram()
  return(p)
})
ggplotly(plots[[1]])
ggplotly(plots[[2]])
ggplotly(plots[[3]])
ggplotly(plots[[4]])
ggplotly(plots[[5]])
ggplotly(plots[[6]])
ggplotly(plots[[7]])
ggplotly(plots[[8]])
ggplotly(plots[[9]])
ggplotly(plots[[10]])
ggplotly(plots[[11]])
ggplotly(plots[[12]])
ggplotly(plots[[13]])
ggplotly(plots[[14]])
ggplotly(plots[[15]])
ggplotly(plots[[16]])
ggplotly(plots[[17]])
ggplotly(plots[[18]])
ggplotly(plots[[19]])
ggplotly(plots[[20]])
ggplotly(plots[[21]])
ggplotly(plots[[22]])
```
