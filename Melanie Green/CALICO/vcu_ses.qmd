---
title: "CALICO Health Disparities Analyses"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-width: 12
    fig-height: 9
    page-layout: full
    theme:
      light: flatly
      dark: darkly
editor: source
---

```{r setup}
#| include: false
library(Hmisc)
library(tidyverse)
library(arsenal)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/BDC/Janet Snell-Bergeon/CALICO",
  "Windows" = "C:/Users/timvigers/OneDrive - The University of Colorado Denver/Vigers/BDC/Janet Snell-Bergeon/CALICO",
  "Linux" = "/home/timvigers/OneDrive/Vigers/BDC/Janet Snell-Bergeon/CALICO"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data import and cleaning}
#| include: false
# Load data
load("./Data_Clean/analysis_data.RData")
# Select columns
df <- df %>%
  select(
    record_number, redcap_repeat_instance, all_of(demo_vars), combined_race,
    all_of(ses_vars)
  )
# Basic formula for tables
f <- as.formula(paste("~", paste(ses_vars, collapse = "+")))
# Set table options
mycontrols <-
  tableby.control(numeric.stats = c("Nmiss2", "meansd", "medianq1q3", "range"))
# First visit only
cv1 <- df %>%
  group_by(record_number) %>%
  slice_min(redcap_repeat_instance) %>%
  ungroup()
```

# At time of diagnosis/first clinic visit

## Overall

```{r results='asis'}
t1 <- tableby(f, data = cv1, control = mycontrols)
summary(t1, labelTranslations = labels(df), pfootnote = T)
```

## By insurance type

```{r results='asis'}
t2 <- tableby(update(f, insur_type ~ .), data = cv1, control = mycontrols)
summary(t2, labelTranslations = labels(df), pfootnote = T)
```

## By race

```{r results='asis'}
t3 <- tableby(update(f, combined_race ~ .), data = cv1, control = mycontrols)
summary(t3, labelTranslations = labels(df), pfootnote = T)
```

## By ethnicity

```{r results='asis'}
t4 <- tableby(update(f, ethnicity ~ .), data = cv1, control = mycontrols)
summary(t4, labelTranslations = labels(df), pfootnote = T)
```

## By specialty

```{r results='asis'}
t5 <- tableby(update(f, pcosdx_specialty ~ .), data = cv1, control = mycontrols)
summary(t5, labelTranslations = labels(df), pfootnote = T)
```

# Treatments 2 years post-Dx

```{r}
# Treatments used after diagnosis - limit to two years
post_dx_tx <- df %>%
  filter(cv_monthssincepcosdx <= 24) %>%
  group_by(record_number) %>%
  summarise(
    insur_type = insur_type[1], combined_race = combined_race[1],
    ethnicity = ethnicity[1], pcosdx_specialty = pcosdx_specialty[1],
    across(contains("cv_medications"), ~ any(. == "Checked"))
  )
labs <- label(df)[match(colnames(post_dx_tx), colnames(df))]
labs <- sub(
  "Current treatment \\(not prescribed this visit\\)",
  "Treatment post-Dx", labs
)
label(post_dx_tx) <- as.list(labs)
colnames(post_dx_tx)[2:ncol(post_dx_tx)] <-
  paste0(colnames(post_dx_tx)[2:ncol(post_dx_tx)], "_post_dx")
# New basic formula
f <- as.formula(paste("~", paste(c(
  paste0("cv_medications___", 1:30, "_post_dx"),
  "cv_medications___60_post_dx",
  "cv_medications___0_post_dx", "cv_medications___unk_post_dx"
), collapse = "+")))
```

## Overall

```{r results='asis'}
t6 <- tableby(f, data = post_dx_tx, control = mycontrols)
summary(t6, labelTranslations = labels(df), pfootnote = T)
```

## By insurance type

```{r results='asis'}
t7 <- tableby(update(f, insur_type_post_dx ~ .),
  data = post_dx_tx, control = mycontrols
)
summary(t7, labelTranslations = labels(df), pfootnote = T)
```

## By race

```{r results='asis'}
t8 <- tableby(update(f, combined_race_post_dx ~ .),
  data = post_dx_tx, control = mycontrols
)
summary(t8, labelTranslations = labels(df), pfootnote = T)
```

## By ethnicity

```{r results='asis'}
t9 <- tableby(update(f, ethnicity_post_dx ~ .),
  data = post_dx_tx, control = mycontrols
)
summary(t9, labelTranslations = labels(df), pfootnote = T)
```

## By specialty

```{r results='asis'}
t10 <- tableby(update(f, pcosdx_specialty_post_dx ~ .),
  data = post_dx_tx, control = mycontrols
)
summary(t10, labelTranslations = labels(df), pfootnote = T)
```
