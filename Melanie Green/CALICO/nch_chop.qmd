---
title: "CALICO NCH and CHOP Project"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-width: 12
    fig-height: 9
    page-layout: full
    theme:
      light: flatly
      dark: darkly
bibliography: /Users/timvigers/Documents/Miscellaneous/zotero.bib
csl: /Users/timvigers/GitHub/styles/american-medical-association.csl
editor: source
---

```{r setup}
#| include: false
library(tidyverse)
library(gtsummary)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/BDC/Janet Snell-Bergeon/CALICO",
  "Windows" = "C:/Users/timvigers/OneDrive - The University of Colorado Denver/Vigers/BDC/Janet Snell-Bergeon/CALICO",
  "Linux" = "/home/timvigers/OneDrive/Vigers/BDC/Janet Snell-Bergeon/CALICO"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data import}
#| include: false
# Import data
source("/Users/timvigers/GitHub/CHCO-Code/Melanie Green/CALICO/nch_chop_import.r")
```

```{r data cleaning}
#| message: false
#| warning: false
# Label "*.factor" columns
factors <-
  colnames(data)[which(duplicated(sub("\\.factor", "", colnames(data))))]
factor_labels <- sapply(factors, function(c) {
  label(data[, sub("\\.factor", "", c)])
})
label(data[, factors]) <- as.list(factor_labels)
# Convert all "UNK" to NA
data[which(data == "UNK", arr.ind = T)] <- NA
data[which(data == "OTH", arr.ind = T)] <- NA
# Combine therapy variables
data$therapy_yes_no <- apply(
  data[, grep("mentalhealthcounseling___.*\\.factor", colnames(data))], 1,
  function(r) {
    if (all(is.na(r))) {
      return(NA)
    } else if (any(r[1:3] == "Checked")) {
      return("Yes")
    } else if (r[4] == "Checked") {
      return("Documented none")
    } else if (any(r[5:6] == "Checked")) {
      return("Unknown/Not recorded/Not applicable")
    } else if (r[7] == "Checked") {
      return("Other")
    } else if (r[8] == "Checked") {
      return("Premenarchal")
    } else {
      return(NA)
    }
  }
)
label(data$therapy_yes_no) <-
  "Any mental health counseling in the 12 months prior to this visit (Combined)"
# Convert to numeric
num_vars <- c(
  "cv_weight", "cv_height", "cv_bmi_percentile", "cv_bmi_z", "cv_sbp", "cv_dbp",
  "cv_hirsutism_num","cv_ft_uln","cv_tt_uln","cv_a1c"
)
data[, num_vars] <- lapply(data[, num_vars], function(c) {
  mode(c) <- "numeric"
  return(c)
})
```

# Data cleaning

- Values of "UNK" and "OTH" were converted to missing values.

# Baseline

- Baseline visit was defined as each participant's first non-repeating visit (i.e. missing a value for the `redcap_repeat_instrument` variable).

- The table below is also limited to records where the `history_complete` variable is "Complete."

```{r}
#| label: tbl-table-1
#| tbl-cap: Participant characteristics at baseline
data %>%
  filter(
    is.na(redcap_repeat_instrument.factor),
    history_complete.factor == "Complete"
  ) %>%
  select(-c(
    record_number, redcap_repeat_instance, redcap_repeat_instrument.factor,
    history_complete.factor
  ), -all_of(sub("\\.factor", "", factors))) %>%
  select(where(~ sum(!is.na(.x)) > 0)) %>%
  relocate(contains("_other"), .after = last_col()) %>%
  relocate(therapy_yes_no,
    .after = pcosdx_mentalhealthcounseling___pm.factor
  ) %>%
  tbl_summary(missing_text = "(Missing)")
```

# First clinic visit

- First clinic visit was each participant's first repeating visit (i.e. the `redcap_repeat_instance` variable equals 1).

- The table below is also limited to records where the `clinical_visit_complete` variable is "Complete."

```{r}
#| label: tbl-table-2
#| tbl-cap: Participant characteristics at first clinic visit
data %>%
  filter(
    clinical_visit_complete.factor == "Complete",
    redcap_repeat_instance == 1
  ) %>%
  select(-c(
    record_number, redcap_repeat_instance, redcap_repeat_instrument.factor,
    history_complete.factor
  ), -all_of(sub("\\.factor", "", factors))) %>%
  select(where(~ sum(!is.na(.x)) > 0)) %>%
  relocate(contains("_other"), .after = last_col()) %>%
  tbl_summary(missing_text = "(Missing)")
```
