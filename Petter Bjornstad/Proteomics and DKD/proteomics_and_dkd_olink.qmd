---
title: "Proteomics and DKD - Olink correlations"
author: "Laura Pyle, Ye Ji Choi & Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
execute:
  echo: false
  message: false
---

```{r libraries}
#| include: false
library(psych)
library(corrplot)
library(pander)
# Print all pander tables
panderOptions("knitr.auto.asis", FALSE)
```

```{r data import}
#| include: false
# source("~/GitHub/CHCO-Code/Petter Bjornstad/Proteomics and DKD/create_today_dkd_analysis_dataset.R")
load("/Volumes/Peds Endo/Petter Bjornstad/Proteomics and DKD/Data_Cleaned/analysis_dataset.RData")
```

```{r functions}
# Function for converting SOMAScan to Olink
soma_to_olink <- function(soma_ids) {
  ids <- list()
  length(ids) <- length(soma_ids)
  ids <- lapply(soma_ids, function(n) {
    uni <- analytes$UniProt[analytes$AptName == n]
    olink <- olink_map$OlinkID[olink_map$Uniprot.ID == uni]
    return(as.character(na.omit(olink)))
  })
  names(ids) <- soma_ids
  ids <- ids[lapply(ids, length) > 0]
  return(ids)
}
# Plot agreement
soma_olink_corr <- function(top_olink, data) {
  # Correlations
  M <- corr.test(x= data.matrix(data[,names(top_olink)]),
                 y = data.matrix(data[,as.character(top_olink)]), 
                 normal = F, method = "spearman")
  # Print a nice looking table
  r <- data.frame(round(M$r,3))
  emphasize.strong.cells(which(M$p <= 0.05, arr.ind = TRUE))
  cat("\n")
  pander(r, caption = "Coefficients")
  cat("\n")
  # Print p values
  p <- data.frame(M$p)
  p[] <- sapply(round(p,3), format.pval, eps = 0.001)
  cat("\n")
  pander(p, caption = "P values")
  cat("\n")
}
# Correlate Olink with UACR
cor_and_plot_olink <- function(plasma_df = plasma, 
                               urine_df = urine, vars) {
  # Get Olink names
  vars <- as.character(vars)
  # Format matrices
  plasma_df <- plasma_df[
    plasma_df$group == "Type 2 Diabetes",
    c(vars, "acr_u", "map", "gfr_raw_plasma", "gfr_bsa_plasma")
  ]
  urine_df <- urine_df[
    urine_df$group == "Type 2 Diabetes",
    c(vars, "acr_u", "map", "gfr_raw_plasma", "gfr_bsa_plasma")
  ]
  # Gene names
  n <- c(olink_map$Assay[match(vars, olink_map$OlinkID)], "acr_u", "map", 
         "gfr_raw_plasma", "gfr_bsa_plasma")
  n[duplicated(n)] <- paste0(n[duplicated(n)], "(2)")
  names(plasma_df) <- n
  names(urine_df) <- n
  # Plasma correlations
  M_plasma <- corr.test(data.matrix(plasma_df), normal = F, method = "spearman")
  corrplot(M_plasma$r,
           p.mat = M_plasma$p, method = "circle", type = "lower",
           insig = "blank", addCoef.col = "white", diag = FALSE, title = "Plasma"
  )
  # Print nice looking table
  r <- data.frame(M_plasma$r)
  emphasize.strong.cells(which(M_plasma$p <= 0.05, arr.ind = TRUE))
  cat("\n")
  pander(r, caption = "Plasma coefficients")
  cat("\n")
  # Urine correlations
  M_urine <- corr.test(data.matrix(urine_df), normal = F, method = "spearman")
  corrplot(M_urine$r,
           p.mat = M_urine$p, method = "circle", type = "lower",
           insig = "blank", addCoef.col = "white", diag = FALSE, title = "Urine"
  )
  # Print nice looking table
  r <- data.frame(M_urine$r)
  emphasize.strong.cells(which(M_urine$p <= 0.05, arr.ind = TRUE))
  cat("\n")
  pander(r, caption = "Urine coefficients")
  cat("\n")
}
```

# Associations with SOMAScan

## MAC

The proteins with the largest absolute effect size and adjusted p value $\leq 0.05$ for MAC were: `r toString(analytes$TargetFullName[match(top_mac,analytes$AptName)])` (associated with genes `r toString(analytes$EntrezGeneSymbol[match(top_mac,analytes$AptName)])`, respectively).

### Plasma

```{r warning=FALSE,results='asis', dpi=1200}
top_mac_olink <- soma_to_olink(top_mac)
soma_olink_corr(top_olink = top_mac_olink, data = plasma)
```

### Urine

```{r warning=FALSE,results='asis', dpi=1200}
soma_olink_corr(top_olink = top_mac_olink, data = urine)
```

## MIC

The proteins with the largest absolute effect size and adjusted p value $\leq 0.05$ for MIC were: `r toString(analytes$TargetFullName[match(top_mic,analytes$AptName)])` (associated with genes `r toString(analytes$EntrezGeneSymbol[match(top_mic,analytes$AptName)])`, respectively).

### Plasma

```{r warning=FALSE,results='asis', dpi=1200}
top_mic_olink <- soma_to_olink(top_mic)
soma_olink_corr(top_olink = top_mic_olink, data = plasma)
```

### Urine

```{r warning=FALSE,results='asis', dpi=1200}
soma_olink_corr(top_olink = top_mic_olink, data = urine)
```

## HYP

The proteins with the largest absolute effect size and adjusted p value $\leq 0.05$ for hypertension were: `r toString(analytes$TargetFullName[match(top_hyp,analytes$AptName)])` (associated with genes `r toString(analytes$EntrezGeneSymbol[match(top_hyp,analytes$AptName)])`, respectively).

### Plasma

```{r warning=FALSE,results='asis', dpi=1200}
top_hyp_olink <- soma_to_olink(top_hyp)
soma_olink_corr(top_olink = top_hyp_olink, data = plasma)
```

### Urine

```{r warning=FALSE,results='asis', dpi=1200}
soma_olink_corr(top_olink = top_hyp_olink, data = urine)
```

## RAPID

Top proteins from SOMAScan were not available in Olink.

## HTN

The proteins with the largest absolute effect size and adjusted p value $\leq 0.05$ for hypertension (with SBP) were: `r toString(analytes$TargetFullName[match(top_htn_sbp,analytes$AptName)])` (associated with genes `r toString(analytes$EntrezGeneSymbol[match(top_htn_sbp,analytes$AptName)])`, respectively).

### Plasma

```{r warning=FALSE,results='asis', dpi=1200}
top_htn_olink <- soma_to_olink(top_htn)
soma_olink_corr(top_olink = top_htn_olink, data = plasma)
```

### Urine

```{r warning=FALSE,results='asis', dpi=1200}
soma_olink_corr(top_olink = top_htn_olink, data = urine)
```

## HTN with SBP

Top proteins from SOMAScan were not available in Olink.

# Olink associations with UACR

## MAC

The proteins with the largest absolute effect size and adjusted p value $\leq 0.05$ for MAC were: `r toString(analytes$TargetFullName[match(top_mac,analytes$AptName)])` (associated with genes `r toString(analytes$EntrezGeneSymbol[match(top_mac,analytes$AptName)])`, respectively).

```{r results='asis', dpi=1200}
cor_and_plot_olink(vars = top_mac_olink)
```

## MIC

The proteins with the largest absolute effect size and adjusted p value $\leq 0.05$ for MIC were: `r toString(analytes$TargetFullName[match(top_mic,analytes$AptName)])` (associated with genes `r toString(analytes$EntrezGeneSymbol[match(top_mic,analytes$AptName)])`, respectively).

```{r results='asis', dpi=1200}
cor_and_plot_olink(vars = top_mic_olink)
```

## HYP

The proteins with the largest absolute effect size and adjusted p value $\leq 0.05$ for hypertension were: `r toString(analytes$TargetFullName[match(top_hyp,analytes$AptName)])` (associated with genes `r toString(analytes$EntrezGeneSymbol[match(top_hyp,analytes$AptName)])`, respectively).

```{r results='asis', dpi=1200}
cor_and_plot_olink(vars = top_hyp_olink)
```

## HTN

The proteins with the largest absolute effect size and adjusted p value $\leq 0.05$ for hypertension (with SBP) were: `r toString(analytes$TargetFullName[match(top_htn_sbp,analytes$AptName)])` (associated with genes `r toString(analytes$EntrezGeneSymbol[match(top_htn_sbp,analytes$AptName)])`, respectively).

```{r results='asis', dpi=1200}
cor_and_plot_olink(vars = top_htn_olink)
```

## HTN with SBP

Top proteins from SOMAScan were not available in Olink.
