---
title: "Proteomics and DKD"
author: "Tim Vigers"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

Analysis based on tutorials at https://scverse.org/learn/

# Preprocessing

Much of this was likely already done at Michigan.

```{python}
# Read AnnData object
import scanpy as sc
adata = sc.read_h5ad("/Volumes/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/scRNA/Data_Raw/CU_Anschutz_scRNAseq_data/PB_40datasets_soupxcleaned070821_RPC2_Sean_selected.h5ad")
```

Show those genes that yield the highest fraction of counts in each single cell, across all cells.

```{python}
sc.pl.highest_expr_genes(adata, n_top=20, )
```

- Much of the top genes are mitochondrial.

Basic filtering:

```{python}
sc.pp.filter_cells(adata, min_genes=200)
sc.pp.filter_genes(adata, min_cells=3)
```

Mitochondrial genes:

```{python}
# annotate the group of mitochondrial genes as 'mt'
adata.var['mt'] = adata.var_names.str.startswith('MT-') 
# Calculate a bunch of QC metrics
sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True)
# Violin plots
sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'],
             jitter=0.4, multi_panel=True)
```

Remove cells that have too many mitochondrial genes expressed or too many total counts:

```{python}
# Scatter plots
sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt')
sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts')
# Filter the data
adata = adata[adata.obs.n_genes_by_counts < 2500, :]
adata = adata[adata.obs.pct_counts_mt < 5, :]
```

- Do these cutoffs seem reasonable?