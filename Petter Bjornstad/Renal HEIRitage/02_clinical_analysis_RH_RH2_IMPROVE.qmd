---
title: "RH/RH2/IMPROVE"
author: "Ye Ji Choi"
format:
  revealjs:
    embed-resources: true
    scrollable: true
    transition: slide
    controls-layout: bottom-right
    menu: true
    toc: true
    toc-depth: 1
    fontsize: 15
    number-sections: true
    filters:
      - figure-path.lua
---

```{r include = F}
library(jsonlite)
library(aws.s3)
library(knitr)
library(dplyr)
library(kableExtra)
library(tidyverse)
library(lmerTest)
library(emmeans)
library(broom)
library(ggbeeswarm)
library(lemon)
library(quantreg)
library(readxl)
library(growthcleanr)
library(ggbreak)
library(janitor)   # for tabyl/adorn helpers
library(forcats)   # for fct_relevel (optional but nice)

user <- Sys.info()[["user"]]

if (user == "choiyej") {
  root_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/"
  git_path <- "/Users/choiyej/GitHub/CHCO-Code/Petter Bjornstad/"
} else if (user == "pylell") {
  root_path <- "/Users/pylell/Library/CloudStorage/OneDrive-SharedLibraries-UW/Bjornstad/Biostatistics Core Shared Drive/"
  git_path <- "/Users/pylell/Documents/GitHub/CHCO-Code/Petter Bjornstad/"
} else if (user == "hhampson") {
  root_path <- "/Volumes/Peds Endo/"
} else {
  stop("Unknown user: please specify root path for this user.")
}
```

```{r}
source(file.path(git_path, "Resources/YC/R Functions/correlation_function.R"))
source(file.path(git_path, "ATTEMPT/attempt_functions.R"))
source(file.path(git_path, "Renal HEIRitage/RH_RH2_IMPROVE_functions.R"))
```

```{r include = F}
## Create an S3 client
keys <- fromJSON("/Users/choiyej/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Bjornstad Pyle Lab/keys.json")

Sys.setenv(
  "AWS_ACCESS_KEY_ID" = keys$MY_ACCESS_KEY,
  "AWS_SECRET_ACCESS_KEY" = keys$MY_SECRET_KEY,
  "AWS_DEFAULT_REGION" = "",
  "AWS_REGION" = "",
  "AWS_S3_ENDPOINT" = "s3.kopah.uw.edu"
)
```

# Data pull

```{r}
# Pull data from 01_clean_dataset.R
rh_rh2_croc_panther_unique <- read.csv(file.path(root_path, "Renal HERITAGE/Data_Cleaned/rh_rh2_croc_panther_unique.csv"))
rh_rh2_unique <- read.csv(file.path(root_path, "Renal HERITAGE/Data_Cleaned/rh_rh2_unique.csv"))
```

# MRI Parameters

## Tables & Descriptives
```{r echo = F}
rh_rh2_unique %>%
  dplyr::select(avg_c_r2, avg_m_r2, avg_k_r2,
         avg_c_adc, avg_c_fsoc, avg_m_fsoc, avg_k_fsoc, avg_pcascl) %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value") %>%
  ggplot(aes(x = value)) +
  geom_histogram(bins = 100, fill = "steelblue", color = "white") +
  facet_wrap(~ variable, scales = "free") +
  theme_minimal()

summary(arsenal::tableby(uacr_group ~ avg_c_r2 + avg_m_r2 + avg_k_r2 +
                           avg_c_adc + avg_c_fsoc + avg_m_fsoc + avg_k_fsoc + avg_pcascl + avg_c_t1, data=rh_rh2_unique),
        total = F)

summary(arsenal::tableby(uacr_group ~ tkv_combined + htadjtkv_combined + age + sex + kwt(acr_u, "medianq1q3") + eGFR_CKD_epi + bmi + egfr_cat + acr_u_cat3, data=rh_rh2_unique),
        total = T)

summary(arsenal::tableby(bmi_cat ~ avg_c_t1, data=subset(rh_rh2_croc_panther_unique, study == "PANTHER" & bmi_cat != "Overweight")),
        total = F)

summary(arsenal::tableby(group_risk ~ avg_c_t1, data=subset(rh_rh2_croc_panther_unique, study == "PANTHER")),
        total = F)

summary(arsenal::tableby(group ~ record_id + age + sex+ hba1c + bmi + bmip + eGFR_CKD_epi + eGFR_fas_cr + kwt(acr_u, "medianq1q3"), data = subset(rh_rh2_croc_panther_unique, study == "PANTHER" & is.na(group_risk) & !is.na(avg_c_t1))))

summary(arsenal::tableby(group_risk ~ avg_c_r2 + avg_k_r2 +
                           avg_c_adc  + avg_pcascl + avg_c_t1, data=subset(rh_rh2_croc_panther_unique, study == "PANTHER")),
        total = F)
subset(rh_rh2_croc_panther_unique, study == "PANTHER")$avg_c_t1

summary(arsenal::tableby(group ~ dexa_body_fat + dexa_fat_kg + dexa_lean_mass + dexa_lean_kg + dexa_trunk_mass + dexa_trunk_kg + dexa_bone_mineral_density, data = subset(rh_rh2_croc_panther_unique, study == "PANTHER" & is.na(group_risk) & !is.na(avg_c_t1))))

summary(arsenal::tableby(group_risk ~ dexa_body_fat + dexa_fat_kg + dexa_lean_mass + dexa_lean_kg + dexa_trunk_mass + dexa_trunk_kg + dexa_bone_mineral_density, data=subset(rh_rh2_croc_panther_unique, study == "PANTHER")),
        total = F)
subset(rh_rh2_croc_panther_unique, study == "PANTHER" & group_risk == "High" & dexa_body_fat == 18.9)$hba1c
```

```{r}
rh_rh2_unique %>%
  ggplot(aes(x = uacr_group, y = avg_k_r2, color = uacr_group)) +
    # geom_violin() +
  geom_boxplot(size = 1, width = 0.5, outliers = F) +
  geom_jitter(alpha = 0.5) +
  theme_minimal() + 
  theme(text = element_text(size = 15),
        panel.grid = element_blank(),
        legend.position = "none") +
  labs(x = NULL, y = "Kidney R2* (1/s)") +
  scale_y_break(c(25, 45), scales = "fixed", space = 0.5) +
  scale_color_manual(values = c("#003049", "#e07a5f"))

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/Renal HERITAGE/Results/Figures/uacr_boxplots.png")

summary(arsenal::tableby(uacr_group ~ kwt(acr_u, "medianq1q3", digits = 2) + eGFR_fas_cr + eGFR_CKD_epi, 
                         data = rh_rh2_unique, test = F, total = F))

# ok.. can you also report proportions in the table of the following eGFR >=90, <90-60, <60, and for UACR, >= 30, UACR 30-300 mg, UACR >=300 mg/g

rh_rh2_unique <- rh_rh2_unique %>%
  mutate(
    # eGFR categories
    eGFR_cat = case_when(
      eGFR_CKD_epi < 60                      ~ "<60",
      eGFR_CKD_epi >= 60 & eGFR_CKD_epi < 90 ~ "60–<90",
      eGFR_CKD_epi >= 90                     ~ "≥90",
      TRUE ~ NA_character_
    ),
    # ACR/UACR 3-level categories (non-overlapping)
    acr_u_cat3 = case_when(
      acr_u < 30                 ~ "<30",
      acr_u >= 30 & acr_u < 300  ~ "30–<300",
      acr_u >= 300               ~ "≥300",
      TRUE ~ NA_character_
    ),
    # Binary acr_u ≥30
    acr_u_ge30 = case_when(
      is.na(acr_u) ~ NA_integer_,
      acr_u >= 30  ~ 1L,
      TRUE         ~ 0L
    ),
    # ---- Set the display order (critical) ----
    eGFR_cat    = factor(eGFR_cat,    levels = c("<60", "60–<90", "≥90")),
    acr_u_cat3  = factor(acr_u_cat3,  levels = c("<30", "30–<300", "≥300"))
  )

# ---- Proportion tables (will follow the factor order) ----
egfr_tab <- rh_rh2_unique %>%
  tabyl(eGFR_cat) %>%
  adorn_totals("row") %>%
  adorn_pct_formatting(digits = 1)

uacr_tab3 <- rh_rh2_unique %>%
  tabyl(acr_u_cat3) %>%
  adorn_totals("row") %>%
  adorn_pct_formatting(digits = 1)

uacr_ge30_tab <- rh_rh2_unique %>%
  mutate(acr_u_ge30_cat = factor(
    if_else(is.na(acr_u_ge30), "Missing", if_else(acr_u_ge30 == 1L, "≥30", "<30")),
    levels = c("<30", "≥30", "Missing")
  )) %>%
  tabyl(acr_u_ge30_cat) %>%
  adorn_totals("row") %>%
  adorn_pct_formatting(digits = 1)

# Combined tidy table (keeps the chosen order)
combined_props <- bind_rows(
  egfr_tab %>% mutate(measure = "eGFR category") %>% dplyr::rename(level = eGFR_cat),
  uacr_tab3 %>% mutate(measure = "acr_u category (3-level)") %>% dplyr::rename(level = acr_u_cat3),
  uacr_ge30_tab %>% mutate(measure = "acr_u ≥30 vs <30") %>% dplyr::rename(level = acr_u_ge30_cat)
) %>%
  dplyr::select(measure, level, n, percent)


# BY GROUP
egfr_tab_by_group <- rh_rh2_unique %>%
  tabyl(uacr_group, eGFR_cat) %>%
  adorn_percentages("row") %>%       # proportions within each group
  adorn_pct_formatting(digits = 1)

# acr_u proportions split by uacr_group
acr_tab3_by_group <- rh_rh2_unique %>%
  tabyl(uacr_group, acr_u_cat3) %>%
  adorn_percentages("row") %>%
  adorn_pct_formatting(digits = 1)

acr_ge30_by_group <- rh_rh2_unique %>%
  mutate(acr_u_ge30_cat = factor(
    if_else(is.na(acr_u_ge30), "Missing", if_else(acr_u_ge30 == 1L, "≥30", "<30")),
    levels = c("<30", "≥30", "Missing")
  )) %>%
  tabyl(uacr_group, acr_u_ge30_cat) %>%
  adorn_percentages("row") %>%
  adorn_pct_formatting(digits = 1)

# View tables
egfr_tab_by_group
acr_tab3_by_group
acr_ge30_by_group

```

## Adjusting for other vars

```{r}
# one more request once we have this done for all of you that I think will be important... can we look at ASL, R2* and ADC in 3 groups lean, overweight and obese while controlling for diabetes status, eGFR and UACR...
fit_fas <- fit_models_emm(
  outcomes = c("avg_pcascl", "avg_k_r2", "avg_c_r2", "avg_c_adc",
               "avg_c_t1", "tkv_combined", "htadjtkv_combined"),
  formula_rhs = "~ bmi_cat + group + eGFR_fas_cr + log(acr_u)",
  emm_var = "bmi_cat",
  data = rh_rh2_croc_panther_unique
)

fit_fas$emm_table
fit_fas$contrast_table
```

```{r}
plot_emms_with_brackets(
  emm_table = fit_fas$emm_table,
  contrast_table = fit_fas$contrast_table,
  outcome_var = "avg_k_r2",
  y_label = "Estimated marginal mean\nof kidney R2*"
)
```

```{r}
# one more request once we have this done for all of you that I think will be important... can we look at ASL, R2* and ADC in 3 groups lean, overweight and obese while controlling for diabetes status, eGFR and UACR...
fit_ckd <- fit_models_emm(
  outcomes = c("avg_pcascl", "avg_k_r2", "avg_c_r2", "avg_c_adc",
               "avg_c_t1", "tkv_combined", "htadjtkv_combined"),
  formula_rhs = "~ bmi_cat + group + eGFR_CKD_epi + log(acr_u)",
  emm_var = "bmi_cat",
  data = rh_rh2_croc_panther_unique
)

fit_ckd$emm_table
fit_ckd$contrast_table

plot_emms_with_brackets(
  emm_table = fit_ckd$emm_table,
  contrast_table = fit_ckd$contrast_table,
  outcome_var = "avg_k_r2",
  y_label = "Estimated marginal mean\nof kidney R2*"
)
```

```{r}
# one more request once we have this done for all of you that I think will be important... can we look at ASL, R2* and ADC in 3 groups lean, overweight and obese while controlling for diabetes status, eGFR and UACR...
fit_age <- fit_models_emm(
  outcomes = c("avg_pcascl", "avg_k_r2", "avg_c_r2", "avg_c_adc",
               "avg_c_t1", "tkv_combined", "htadjtkv_combined"),
  formula_rhs = "~ bmi_cat + group + eGFR_fas_cr + log(acr_u) + age",
  emm_var = "bmi_cat",
  data = rh_rh2_croc_panther_unique
)

summary(rh_rh2_croc_panther_unique$age)
summary(arsenal::tableby(bmi_cat ~ age, rh_rh2_croc_panther_unique))

fit_age$emm_table
fit_age$contrast_table

plot_emms_with_brackets(
  emm_table = fit_age$emm_table,
  contrast_table = fit_age$contrast_table,
  outcome_var = "avg_k_r2",
  y_label = "Estimated marginal mean\nof kidney R2*"
)
```

```{r}
# one more request once we have this done for all of you that I think will be important... can we look at ASL, R2* and ADC in 3 groups lean, overweight and obese while controlling for diabetes status, eGFR and UACR...
fit_panther <- fit_models_emm(
  outcomes = c("avg_c_t1", "tkv_combined", "htadjtkv_combined"),
  formula_rhs = "~ bmi_cat + group + eGFR_fas_cr + log(acr_u) + age",
  emm_var = "bmi_cat",
  data = subset(rh_rh2_croc_panther_unique, study == "PANTHER")
)

fit_panther$emm_table
fit_panther$contrast_table

plot_emms_with_brackets(
  emm_table = fit_panther$emm_table,
  contrast_table = fit_panther$contrast_table,
  outcome_var = "avg_c_t1",
  y_label = "Estimated marginal mean\nof kidney R2*"
)
```

```{r}
subset(rh_rh2_croc_panther_unique, study == "PANTHER") %>% 
  filter(!is.na(group_risk)) %>%
  ggplot(aes(x = factor(group_risk, levels = c("Low", "High")), y = avg_c_t1, fill = group_risk)) +
  geom_boxplot(size = 1.5, width = 0.8, outlier.shape = NA) +
  labs(x = NULL, y = "Avg cortical T1") +
  scale_fill_manual(values = c("#e29578", "#babd8d")) +
  theme(legend.position = "none",
        text = element_text(size = 30),
        axis.text.x = element_text(size = 30),
        axis.text.y = element_text(size = 28)) +
  theme_transparent + 
  stat_compare_means(
    comparisons = list(c("Low", "High")),
    method = "t.test",
    size = 15,
    label = "p.signif") +
   scale_y_continuous(limits = c(NA, 1550))
```
