---
title: "PANDA RPPR 2024"
author: "Ye Ji Choi"
format: docx
date: "`r lubridate::today()`"
---

```{r, include = F}
library(dplyr)
library(tidyr)
library(table1)
library(arsenal)
library(Hmisc)
library(purrr)
library(REDCapR)
```

```{r, include = F}
dat <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/Data Harmonization/Data Clean/harmonized_dataset.csv", na.strings = c(" ", "", "-9999",-9999))
dict <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/Data Harmonization/data_dictionary_master.csv", na.strings = c(" ", "", "-9999",-9999)) %>%
  dplyr::select(variable_name, label)

# REDCap tokens
api_tok <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/Data Harmonization/api_tokens.csv")

panda_tok <- api_tok[api_tok$Study == "PANDA",]$Token
croc_tok <- api_tok[api_tok$Study == "CROCODILE",]$Token
attempt_tok <- api_tok[api_tok$Study == "ATTEMPT",]$Token

# Extract MRNs for matching
PANDA_rc <- redcap_read(redcap_uri = "https://redcap.ucdenver.edu/api/",
                        token = panda_tok)$data
CROC_rc <- redcap_read(redcap_uri = "https://redcap.ucdenver.edu/api/",
                        token = croc_tok)$data
ATTEMPT_rc <- redcap_read(redcap_uri = "https://redcap.ucdenver.edu/api/",
                        token = attempt_tok)$data

PANDA_mrn <- PANDA_rc %>% select(record_id, mrn, name_last, name_first) %>% distinct(record_id, .keep_all = T) 
CROC_mrn <- CROC_rc %>% select(record_id, mrn, name_last, name_first) %>% distinct(record_id, .keep_all = T) %>%
  mutate(record_id = case_when(record_id <10 ~ paste0("CRC-0", record_id),
                             record_id >= 10 ~ paste0("CRC-", record_id)))
ATTEMPT_mrn <- ATTEMPT_rc %>%
  dplyr::select(subject_id, mrn, name_last, name_first) %>% 
  distinct(subject_id, .keep_all = T) %>%
  dplyr::rename("record_id" = "subject_id")
ATTEMPT_mrn$record_id <- as.character(ATTEMPT_mrn$record_id)


combined_mrn <- bind_rows(PANDA_mrn, CROC_mrn, ATTEMPT_mrn) %>%
  mutate(co_enroll_study = case_when(startsWith(record_id, "PNDA-1") & (mrn %in% CROC_mrn$mrn) ~ "CO_CROC (Follow up)",
                                     startsWith(record_id, "CRC") & (mrn %in% PANDA_mrn$mrn) ~ "CO_CROC (Initial visit)",
                                     startsWith(record_id, "PNDA-1") & (mrn %in% ATTEMPT_mrn$mrn) ~ "CO_ATTEMPT",
                                     startsWith(record_id, "PNDA-1") ~ "CO_De Novo",
                                     startsWith(record_id, "PNDA-2") | startsWith(record_id, "PNDA 2") ~ "UW_De Novo")) %>%
  filter(!is.na(co_enroll_study)) 

dat <- dat %>%
  filter(study == "PANDA"|study == "CROCODILE") %>%
  right_join(combined_mrn) %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
            across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
            .by = c(record_id, visit)) %>%
  group_by(mrn) %>%
  fill(hba1c) %>% fill(acr_u) %>% ungroup() %>%
  filter(participation_status != "Removed"|is.na(participation_status)) %>%
  filter(!is.na(kidney_side)|!is.na(kit_id)) %>%
  mutate(race_ethnicity_condensed = case_when(race == "White" & 
                                                ethnicity == "Not Hispanic or Latino" ~ "Not Hispanic or Latino White",
                                              race == "Black or African American" & 
                                                ethnicity == "Not Hispanic or Latino" ~ "Not Hispanic or Latino Black",
                                              ethnicity == "Hispanic or Latino" ~ "Hispanic or Latino",
                                              T ~ "Not Hispanic or Latino Other"),
         race = case_when(race == "Black/African American & White" ~ "More than one", T ~ race), 
         obtained_lm_em = if_else(core_diagnostic == 1, "Yes", "No"),
         obtained_cryo_hypotherm = if_else(core_hypo_cryo == 1, "Yes", "No"),
         obtained_oct = if_else(core_oct == 1, "Yes", "No"),
         obtained_rnalater = if_else(core_rna == 1, "Yes", "No"),
         hba1c_group = case_when(hba1c < 7 ~ "<7%",
                                 hba1c < 9 ~ "7-<9%",
                                 hba1c >= 9 ~ ">=9%"),
         egfr_cat = case_when(eGFR_CKD_epi < 45 ~ "<45 mL/min/1.73m2",
                              eGFR_CKD_epi < 60 ~ "45-<60 mL/min/1.73m2",
                              eGFR_CKD_epi < 90 ~ "60-<90 mL/min/1.73m2",
                              eGFR_CKD_epi >=90  ~ ">=90 mL/min/1.73m2"),
         t1d_duration_category = case_when(diabetes_duration < 10 ~ "<10",
                                           diabetes_duration < 15 ~ "10-<15",
                                           diabetes_duration < 20 ~ "15-<20",
                                           diabetes_duration < 25 ~ "20-<25",
                                           diabetes_duration < 30 ~ "25-<30",
                                           diabetes_duration >= 30 ~ ">=30"))

dat$co_enroll_study <- factor(dat$co_enroll_study, 
                              levels = c("UW_De Novo", "CO_De Novo", "CO_CROC (Initial visit)", "CO_CROC (Follow up)", "CO_ATTEMPT"))
dat$sex <- factor(dat$sex, levels = c("Male", "Female"))
dat$hba1c_group <- factor(dat$hba1c_group, levels = c("<7%", "7-<9%", ">=9%"))
dat$race <- factor(dat$race, levels = c("Asian", "Black or African American", "White", "More than one", "Other", "Unknown"))
dat$egfr_cat <- factor(dat$egfr_cat, levels = c("<45 mL/min/1.73m2",
                                                "45-<60 mL/min/1.73m2",
                                                "60-<90 mL/min/1.73m2",
                                                ">=90 mL/min/1.73m2"))
dat$t1d_duration_category <- factor(dat$t1d_duration_category, 
                                    levels = c("<10","10-<15","15-<20","20-<25","25-<30", ">=30"))

serum_creatinine_dat <- dat %>%
  filter(is.na(creatinine_s)) %>%
  dplyr::select(record_id, name_last, name_first, dob) 
# write.csv(serum_creatinine_dat, "/Volumes/Peds Endo/Petter Bjornstad/PANDA/missing_s_creatinine.csv", row.names = F)

uacr_dat <- dat %>%
  filter(is.na(acr_u)) %>%
  filter(co_enroll_study == "CO_ATTEMPT") %>%
  dplyr::select(record_id, name_last, name_first, dob) 
# write.csv(uacr_dat, "/Volumes/Peds Endo/Petter Bjornstad/PANDA/missing_acr_u.csv", row.names = F)
```

Table 1. Characteristics of enrolled participants (those who have undergone biopsy)

```{r echo=F, results='asis'}
summary(tableby(co_enroll_study ~ age + sex + race + ethnicity + diabetes_duration + hx_cv + hx_htn + insulin_injections_timepoint + insulin_pump_timepoint + cgm_yn + sglti_timepoint + glp1_agonist_timepoint + metformin_timepoint + raasi_timepoint + statin + bmi + sbp + dbp + hba1c + hba1c_group + kwt(acr_u, "Nmiss", "median", "q1q3", "range") + albuminuria_cat + eGFR_CKD_epi + egfr_cat + obtained_lm_em + obtained_cryo_hypotherm + obtained_oct + obtained_rnalater, data = dat, total.pos = "before"), test = F)
```

Table 2. Distribution of age and T1D duration of enrolled participants (have undergone biopsy). (Contents are N enrolled in each group.)

```{r echo=F, results='asis'}
summary(tableby(t1d_duration_category ~ sex, data = dat, cat.stats = c("count", "N")), test = F)
```

# IER (Individual enrollment records)

```{r}
ier <- dat %>%
  dplyr::select(race, ethnicity, sex, age) %>%
  mutate(age = floor(age), 
         "Age Unit" = "Years") %>%
  dplyr::rename("Race" = "race",
                "Ethnicity" = "ethnicity",
                "Gender" = "sex",
                "Age" = "age")

ier_filtered <- dat %>%
  filter(co_enroll_study != "CO_CROC (Follow up)") %>%
  dplyr::select(race, ethnicity, sex, age) %>%
  mutate(age = floor(age), 
         "Age Unit" = "Years") %>%
  dplyr::rename("Race" = "race",
                "Ethnicity" = "ethnicity",
                "Gender" = "sex",
                "Age" = "age")
  
# write.csv(ier, "/Volumes/Peds Endo/Petter Bjornstad/PANDA/2024_ier.csv", row.names = F)
write.csv(ier_filtered, "/Volumes/Peds Endo/Petter Bjornstad/PANDA/2025_ier_no_crcfu.csv", row.names = F)
write.csv(ier, "/Volumes/Peds Endo/Petter Bjornstad/PANDA/2025_ier_all.csv", row.names = F)

```
