---
title: "KNIGHT Proteomics"
author: "Laura Pyle"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
execute:
  echo: false
  message: false
---

```{r libraries}
#| include: false
library(limma)
library(clusterProfiler)
library(ReactomePA)
library(enrichplot)
library(Hmisc)
library(knitr)
library(tidyverse)
library(gtsummary)
library(ggpubr)
library(lmerTest)
library(parallel)
library(emmeans)
library(RColorBrewer)
library(VennDiagram)
library(broom.mixed)
library(readxl)
library(dplyr)
library(stringr)
```

```{r, include=F}
# read processed SomaScan data
load("/Volumes/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/KNIGHT/Somalogic data/knight_soma.RData")
load("/Volumes/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/KNIGHT/Somalogic data/analytes.RData")

# read in linkage file for Natalie's studies
link <- read.csv("/Volumes/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/KNIGHT/Somalogic data/BCF-23-091 Linker File 10.05.2023.csv")
link$Study.ID <- link$Sequence.Number
redcap <- read.csv("/Volumes/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/KNIGHT/Somalogic data/200572DataKNIGHT_DATA_LABELS_2023-12-10_1551.csv")
redcap <- redcap %>% filter(Event.Name == "Screening")
redcap <- redcap %>% select(Study.ID, Sex.assigned.at.birth)
link <- merge(link, redcap, by="Study.ID", all.x = T, all.y = F)
link$SampleDescription <- link$Barcode
link <- link %>% select(SampleDescription, Study.ID, Timepoint.Label, Sex.assigned.at.birth)
knight_soma <- full_join(knight_soma, link, by="SampleDescription")

# read in linkage file for Netherlands samples
# actually, not sure I need these...there is a field called TimePoint
#nethlink <- read.csv("/Volumes/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/KNIGHT/Somalogic data/sample ID and visit labels SOMAscan WUS-23-004.csv")
#nethlink <- nethlink %>% filter(str_detect(SampleId, "KGHT"))
#nethlink <- nethlink %>% select(GTAC_ID, TimePoint)
#knight_soma$GTAC_ID <- str_sub(knight_soma$SampleId, 1, 10)
#knight_soma <- merge(knight_soma, nethlink, by="GTAC_ID", all.x = T, all.y = T)

# create new variable for harmonized time point
knight_soma$time <-  
  case_when(
  knight_soma$TimePoint == "V1" ~ 1,
  knight_soma$TimePoint == "V2" ~ 2,
  knight_soma$Timepoint.Label == "Baseline" ~ 1,
  knight_soma$Timepoint.Label == "M3" ~ 2,
  .default = NA
)

knight_soma$group <-  
  case_when(
  str_sub(knight_soma$SampleDescription, 1, 2) == "MV" ~ "MTF",
  str_sub(knight_soma$SampleDescription, 1, 2) == "VM" ~ "FTM",
  knight_soma$Sex.assigned.at.birth == "Male" ~ "MTF",
  knight_soma$Sex.assigned.at.birth == "Female" ~ "FTM",
  .default = NA
)

knight_soma$Study.ID <- ifelse(is.na(knight_soma$Study.ID), knight_soma$SampleDescription, knight_soma$Study.ID)

```

```{r, include=FALSE}
#| label: tbl-characteristics
#| tbl-cap: Participant characteristics
#df %>%
#  dplyr::select(
#    SEX, age, ETHN, RACE, SURG, diab, diab_resolved, sbp, dbp, hrate, bfat, bmi,
#    weight, height, UACRATIO, albuminuria, CYSC, visit
#  ) %>%
#  tbl_summary(by = visit, missing_text = "Missing") %>%
#  modify_header(label = "**Visit**") %>%
#  bold_labels() %>%
#  as_kable_extra()
```

# Univariable analyses 

## Male to Female

```{r, include=FALSE}
# Calculate change in each protein
df_diff <- knight_soma %>%
  arrange(Study.ID, time) %>%
  group_by(Study.ID, group) %>%
  reframe(across(contains("seq"), ~ diff(as.numeric(.x))))

# First MTF
# Limma setup
# Y needs "genes" in rows
y <- df_diff %>%
  filter(group == "MTF") %>%
  dplyr::select(contains("seq")) %>%
  t()
# Design matrix
design_mat <- model.matrix(~1, data = df_diff[df_diff$group == "MTF",])
# Fit
fit <- lmFit(y, design_mat)
fit <- eBayes(fit)
res <- topTable(fit, coef = 1, number = dim(y)[1], sort.by = "p")
res$Target <- analytes$Target[match(rownames(res), analytes$AptName)]
res$TargetFullName <- analytes$TargetFullName[match(rownames(res), analytes$AptName)]
write.csv(res, file = "/Volumes/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/KNIGHT/Results/limma_MTF_results.csv", row.names = F)
# Write results for online enrichment
res_for_enrichment <- topTable(fit, coef = 1, number = dim(y)[1], sort.by = "p")
res_for_enrichment <- res_for_enrichment[order(res_for_enrichment$logFC, decreasing = T), ]
res_for_enrichment$UniProt <- analytes$UniProt[match(rownames(res_for_enrichment), analytes$AptName)]
res_for_enrichment <- res_for_enrichment[, c("UniProt", "AveExpr")]
#write.csv(res_for_enrichment, file = "/Volumes/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/Teen Labs/Results/limma_intercept_only_results.csv", row.names = F)
# Table
#kable(res[1:10, ], digits = 3, row.names = F)
```

There were `r nrow(res[res$adj.P.Val < 0.05,])` proteins significantly different after p value adjustment. Of these, `r sum(res[res$adj.P.Val < 0.05,]$logFC>0)` were higher on average at the second visit compared to the first, and `r sum(res[res$adj.P.Val < 0.05,]$logFC<0)` were lower. See separate output file for univariate results.

### Gene set enrichment analysis (GSEA) with Reactome

#### Dotplot

```{r, include=FALSE}
res$EntrezGeneID <- analytes$EntrezGeneID[match(rownames(res), analytes$AptName)]
de <- res$logFC
names(de) <- res$EntrezGeneID
de <- de[names(de) != ""]
de <- de[!duplicated(names(de))]
de <- sort(de, decreasing = T)
all_prots_gse <- gsePathway(de,
  pvalueCutoff = 0.05,
  pAdjustMethod = "BH",
  verbose = FALSE
)
```

```{r, echo=FALSE, warning=FALSE}
dotplot(all_prots_gse)
```

#### Ridge plot

```{r, echo=FALSE, warning=FALSE}
ridgeplot(all_prots_gse)
```

#### Network plot

```{r, include=FALSE}
all_prots_gse_net <- setReadable(all_prots_gse, "org.Hs.eg.db", "ENTREZID")
```

```{r, echo=FALSE, warning=FALSE}
cnetplot(all_prots_gse_net, foldChange = de, circular = T, colorEdge = T)
```

## Female to Male

```{r, include=FALSE}
# First MTF
# Limma setup
# Y needs "genes" in rows
y <- df_diff %>%
  filter(group == "FTM") %>%
  dplyr::select(contains("seq")) %>%
  t()
# Design matrix
design_mat <- model.matrix(~1, data = df_diff[df_diff$group == "FTM",])
# Fit
fit <- lmFit(y, design_mat)
fit <- eBayes(fit)
res <- topTable(fit, coef = 1, number = dim(y)[1], sort.by = "p")
res$Target <- analytes$Target[match(rownames(res), analytes$AptName)]
res$TargetFullName <- analytes$TargetFullName[match(rownames(res), analytes$AptName)]
write.csv(res, file = "/Volumes/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/KNIGHT/Results/limma_FTM_results.csv", row.names = F)
# Write results for online enrichment
res_for_enrichment <- topTable(fit, coef = 1, number = dim(y)[1], sort.by = "p")
res_for_enrichment <- res_for_enrichment[order(res_for_enrichment$logFC, decreasing = T), ]
res_for_enrichment$UniProt <- analytes$UniProt[match(rownames(res_for_enrichment), analytes$AptName)]
res_for_enrichment <- res_for_enrichment[, c("UniProt", "AveExpr")]
#write.csv(res_for_enrichment, file = "/Volumes/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/Teen Labs/Results/limma_intercept_only_results.csv", row.names = F)
# Table
#kable(res[1:10, ], digits = 3, row.names = F)
```

There were `r nrow(res[res$adj.P.Val < 0.05,])` proteins significantly different after p value adjustment. Of these, `r sum(res[res$adj.P.Val < 0.05,]$logFC>0)` were higher on average at the second visit compared to the first, and `r sum(res[res$adj.P.Val < 0.05,]$logFC<0)` were lower. See separate output file for univariate results.

### Gene set enrichment analysis (GSEA) with Reactome

#### Dotplot

```{r, include=FALSE}
res$EntrezGeneID <- analytes$EntrezGeneID[match(rownames(res), analytes$AptName)]
de <- res$logFC
names(de) <- res$EntrezGeneID
de <- de[names(de) != ""]
de <- de[!duplicated(names(de))]
de <- sort(de, decreasing = T)
all_prots_gse <- gsePathway(de,
  pvalueCutoff = 0.05,
  pAdjustMethod = "BH",
  verbose = FALSE
)
```

```{r, echo=FALSE, warning=FALSE}
dotplot(all_prots_gse)
```

#### Ridge plot

```{r, echo=FALSE, warning=FALSE}
ridgeplot(all_prots_gse)
```

#### Network plot

```{r, include=FALSE}
all_prots_gse_net <- setReadable(all_prots_gse, "org.Hs.eg.db", "ENTREZID")
```

```{r, echo=FALSE, warning=FALSE}
cnetplot(all_prots_gse_net, foldChange = de, circular = T, colorEdge = T)
```

#### GSEA scores

```{r, echo=FALSE, warning=FALSE}
gseaplot2(all_prots_gse, geneSetID = 1:7, subplots = 1:2)
```




