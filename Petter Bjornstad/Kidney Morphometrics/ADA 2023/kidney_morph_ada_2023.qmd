---
title: "Kidney Morphometrics (ADA 2023)"
author: "Tim Vigers"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

```{r}
#| include: false
library(knitr)
library(pander)
library(dplyr)
library(arsenal)
library(psych)
library(corrplot)
library(ggpubr)
library(ggplot2)
library(hrbrthemes)
library(viridis)
library(limma)
library(clusterProfiler)
library(ReactomePA)
```

# Full Cohort

```{r}
# Import
df <- read.csv("~/Documents/Work/Petter Bjornstad/Data Harmonization/Data Clean/harmonized_dataset.csv", na.strings = "")
df_dict <- read.csv("~/Documents/Work/Petter Bjornstad/Data Harmonization/data_dictionary_master.csv", na.strings = "")
# Get latest value, filter DF
df <- df %>%
  arrange(record_id, date) %>%
  select(
    record_id, co_enroll_id, visit, procedure, group, age,
    diabetes_duration, hba1c, bmi, acr_u, sex, sbp, dbp, hdl, ldl,
    cholesterol, triglycerides, eGFR_fas_cr,
    gfr_raw_plasma, gfr_bsa_plasma,
    cgm_yn, insulin_pump_timepoint, insulin_injections_timepoint, 
    insulin_med_timepoint,
    metformin_timepoint, sglti_timepoint, raasi_timepoint,
    glp1_agonist_timepoint, statin, 
    glom_nuc_count:glom_volume_wiggins,
    mes_index:mes_volume_wiggins, -mes_nuc_count
  ) %>%
  group_by(record_id, visit) %>%
  summarise_all(~ first(na.omit(.x))) %>%
  filter(
    !is.na(glom_tuft_area), is.na(co_enroll_id),
    visit == "baseline", group != "Lean Control"
  ) %>%
  ungroup()
labels <- df_dict$label[df_dict$variable_name %in% colnames(df)]
names(labels) <- df_dict$variable_name[match(labels, df_dict$label)]
# Import SOMAScan data
load("~/Documents/Work/Petter Bjornstad/Renal HERITAGE/Somalogic data/analytes.Rdata")
load("~/Documents/Work/Petter Bjornstad/CROCODILE/Somalogic data/croc_soma.Rdata")
load("~/Documents/Work/Petter Bjornstad/Renal HERITAGE/Somalogic data/rh_soma.Rdata")
load("~/Documents/Work/Petter Bjornstad/IMPROVE T2D/Somalogic data/improve_soma.Rdata")
# Delete unnecessary columns
croc_soma = croc_soma %>% 
  select(SampleDescription,contains("seq")) %>% 
  rename(record_id = SampleDescription)
rh_soma = rh_soma %>%
  select(SampleDescription,contains("seq")) %>% 
  rename(record_id = SampleDescription)
improve_soma = improve_soma %>%
  mutate(SampleDescription = sub("2D-","_",SampleDescription)) %>%
  filter(TimePoint == "BL") %>%
  select(SampleDescription,contains("seq")) %>% 
  rename(record_id = SampleDescription)
soma = do.call(rbind,list(croc_soma,improve_soma,rh_soma))
# Join
prots = df %>% select(record_id,group)
prots = left_join(prots,soma,by = join_by(record_id))
```

```{r results='asis'}
#| label: tbl-t1
#| tbl-cap: Comparisons by Group
t1 <- tableby(
  group ~ age + bmi + diabetes_duration + hba1c + sex + sbp + dbp +
    hdl + ldl + cholesterol + triglycerides +
    kwt(eGFR_fas_cr, "Nmiss", "median", "q1q3", "range") +
    gfr_raw_plasma + gfr_bsa_plasma + 
    fe(insulin_med_timepoint) +
    fe(metformin_timepoint) + fe(sglti_timepoint) + fe(raasi_timepoint) + fe(statin) + 
    kwt(acr_u, "Nmiss", "median", "q1q3", "range") +
    glom_tuft_area + glom_volume_weibel + glom_volume_wiggins +
    glom_volume_con + mes_matrix_area + mes_index +
    mes_volume_weibel + mes_volume_wiggins +
    mes_volume_con + glom_nuc_count,
  data = df
)
summary(t1, pfootnote = T, labelTranslations = labels)
```

```{r results='asis'}
#| label: fig-1
#| fig-cap: Spearman Correlation Matrix
# Calculate correlation matrix with nice labels
clin <- df %>% select(
  acr_u, hba1c, bmi, sbp, eGFR_fas_cr, gfr_raw_plasma,
  gfr_bsa_plasma, hdl, ldl, cholesterol, triglycerides
)
colnames(clin) <- df_dict$label[match(colnames(clin), df_dict$variable_name)]
clin <- as.data.frame(clin, check.names = F)

morpho <- df %>% select(glom_nuc_count:mes_volume_wiggins)
colnames(morpho) <- df_dict$label[match(colnames(morpho), df_dict$variable_name)]
morpho <- as.data.frame(morpho, check.names = F)

M <- corr.test(x = clin, y = morpho, method = "spearman")
# Plot
corrplot(M$r,
  method = "circle", type = "lower", diag = FALSE,
  p.mat = M$p, insig = "blank"
)
```

```{r results='asis'}
#| label: tbl-t2
#| tbl-cap: Spearman Correlation Matrix
# Print a nice looking table
r <- data.frame(round(M$r, 3), check.names = F)
emphasize.strong.cells(which(M$p <= 0.05, arr.ind = TRUE))
pander(r)
```

# T1D

```{r results='asis'}
#| label: fig-2
#| fig-cap: Spearman Correlation Matrix (T1D Only)
# Calculate correlation matrix with nice labels
clin <- df %>%
  filter(group == "Type 1 Diabetes") %>%
  select(
    acr_u, hba1c, bmi, sbp, eGFR_fas_cr, gfr_raw_plasma,
    gfr_bsa_plasma, hdl, ldl, cholesterol, triglycerides
  )
colnames(clin) <- df_dict$label[match(colnames(clin), df_dict$variable_name)]
clin <- as.data.frame(clin, check.names = F)

morpho <- df %>%
  filter(group == "Type 1 Diabetes") %>%
  select(glom_nuc_count:mes_volume_wiggins)
colnames(morpho) <- df_dict$label[match(colnames(morpho), df_dict$variable_name)]
morpho <- as.data.frame(morpho, check.names = F)

M <- corr.test(x = clin, y = morpho, method = "spearman")
# Plot
corrplot(M$r,
  method = "circle", type = "lower", diag = FALSE,
  p.mat = M$p, insig = "blank"
)
```

```{r results='asis'}
#| label: tbl-t3
#| tbl-cap: Spearman Correlation Matrix (T1D Only)
# Print a nice looking table
r <- data.frame(round(M$r, 3), check.names = F)
emphasize.strong.cells(which(M$p <= 0.05, arr.ind = TRUE))
pander(r)
```

# T2D

```{r results='asis'}
#| label: fig-3
#| fig-cap: Spearman Correlation Matrix (T2D Only)
# Calculate correlation matrix with nice labels
clin <- df %>%
  filter(group == "Type 2 Diabetes") %>%
  select(
    acr_u, hba1c, bmi, sbp, eGFR_fas_cr, gfr_raw_plasma,
    gfr_bsa_plasma, hdl, ldl, cholesterol, triglycerides
  )
colnames(clin) <- df_dict$label[match(colnames(clin), df_dict$variable_name)]
clin <- as.data.frame(clin, check.names = F)

morpho <- df %>%
  filter(group == "Type 2 Diabetes") %>%
  select(glom_nuc_count:mes_volume_wiggins)
colnames(morpho) <- df_dict$label[match(colnames(morpho), df_dict$variable_name)]
morpho <- as.data.frame(morpho, check.names = F)

M <- corr.test(x = clin, y = morpho, method = "spearman")
# Plot
corrplot(M$r,
  method = "circle", type = "lower", diag = FALSE,
  p.mat = M$p, insig = "blank"
)
```

```{r results='asis'}
#| label: tbl-t4
#| tbl-cap: Spearman Correlation Matrix (T2D Only)
# Print a nice looking table
r <- data.frame(round(M$r, 3), check.names = F)
emphasize.strong.cells(which(M$p <= 0.05, arr.ind = TRUE))
pander(r)
```

P values were not adjusted for multiple comparisons. Bold correlation coefficients in tables were significant at a nominal p $\leq$ 0.05 level.

# Box plots
```{r layout="[[2,2]]", warning=F}
df_dict <- df_dict %>% select(variable_name, label)
df_dict <- setNames(data.frame(t(df_dict[ , - 1])), df_dict[ , 1])
df_dict <- df_dict[intersect(names(df), names(df_dict))]
df_dict[setdiff(names(df), names(df_dict))] <- ""
Hmisc::label(df) = df_dict[match(names(df), names(df_dict))]

df %>%
  ggplot(aes(x=group, y=glom_tuft_area, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["glom_tuft_area"])) +
  ggtitle(Hmisc::label(df["glom_tuft_area"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=glom_volume_weibel, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["glom_volume_weibel"])) +
  ggtitle(Hmisc::label(df["glom_volume_weibel"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=glom_volume_wiggins, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["glom_volume_wiggins"])) +
  ggtitle(Hmisc::label(df["glom_volume_wiggins"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=glom_volume_con, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["glom_volume_con"])) +
  ggtitle(Hmisc::label(df["glom_volume_con"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=mes_matrix_area, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["mes_matrix_area"])) +
  ggtitle(Hmisc::label(df["mes_matrix_area"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=mes_index, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["mes_index"])) +
  ggtitle(Hmisc::label(df["mes_index"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=mes_volume_weibel, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["mes_volume_weibel"])) +
  ggtitle(Hmisc::label(df["mes_volume_weibel"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=mes_volume_wiggins, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["mes_volume_wiggins"])) +
  ggtitle(Hmisc::label(df["mes_volume_wiggins"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=mes_volume_con, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["mes_volume_con"])) +
  ggtitle(Hmisc::label(df["mes_volume_con"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")

df %>%
  ggplot(aes(x=group, y=glom_nuc_count, fill=group)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      axis.title.y = element_text(size=14, hjust=0.5),
      axis.text.x = element_text(size=14),
      plot.title = element_text(size=14, hjust=0.5)
    ) +
  geom_jitter() +
  ylab(Hmisc::label(df["glom_nuc_count"])) +
  ggtitle(Hmisc::label(df["glom_nuc_count"])) +
  xlab("") +
  stat_compare_means(method = "anova",   label.x.npc = "center")
```

# SOMAScan Comparison

SOMAScan proteins were compared between T1D and T2D using `limma` empirical Bayes with constant prior variance. T1D was the reference group, so logFC is in T2D relative to T1D.

```{r}
# Model matrix
df$group = factor(df$group)
df$group = relevel(df$group,ref="Type 1 Diabetes")
des = model.matrix(~group,df)
# Log 2 transformed outcome
out = prots %>% select(contains("seq")) %>% t(.)
out = log2(out)
# Fit and results
fit = lmFit(out,des)
fit <- eBayes(fit)
res = topTable(fit, coef=ncol(des),adjust.method = "holm",number = nrow(out))
res = res[res$adj.P.Val <= 0.05,]
res$adj.P.Val = format.pval(res$adj.P.Val,digits = 3,eps = 0.001)
res$P.Value = format.pval(res$P.Value,digits = 3,eps = 0.001)
res$Target = analytes$Target[match(rownames(res),analytes$AptName)]
res$TargetFullName = analytes$TargetFullName[match(rownames(res),analytes$AptName)]
res$EntrezGeneSymbol = analytes$EntrezGeneSymbol[match(rownames(res),analytes$AptName)]
kable(res,digits = 3)
```

There were `r nrow(res)` proteins significantly different between the two groups after Holm p-value adjustment.

## Pathway analysis

```{r fig.width=12,fig.height=12}
#| message: false
gl = res$logFC
names(gl) = analytes$EntrezGeneID[match(rownames(res),analytes$AptName)]
gl = sort(gl,decreasing = T)
gl = gl[!duplicated(names(gl))]
path <- gsePathway(gl, 
                pvalueCutoff = 1,
                pAdjustMethod = "BH", 
                verbose = FALSE)
ridgeplot(path)
```
