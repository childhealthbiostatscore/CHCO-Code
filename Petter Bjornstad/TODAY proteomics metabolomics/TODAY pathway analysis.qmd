---
title: "TODAY Somalogic Pathway Analyses"
author: "Tim Vigers"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    self-contained: true
    code-fold: true
editor: visual
---

```{r include=FALSE}
library(readxl)
library(clusterProfiler)
library(ReactomePA)
library(enrichplot)
f = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/CHCO/Petter Bjornstad/TODAY subaward/Results/TODAY proteomics moderated adjusted linear models.xlsx"
```

# Enrichment

Enrichment analyses were performed on nominally significant proteins using the R package `clusterProfiler` and a gene set ranked by log FC. Entrez gene IDs were used for all annotation. All genes in the `org.Hs.eg.db` were used as background for GO enrichment analysis.

## TODAY proteomics moderated adjusted linear models

```{r}
# Make a funciton for pathway analysis
# Need a genelist in the format used by clusterProfiler, with names in UniProt form
pathway_analysis = function(de_genes){
  # GSEA with KEGG
  gseaKEGG = gseKEGG(geneList = de_genes[unique(names(de_genes))],
                     keyType = 'uniprot',pvalueCutoff = 1)
  gsea_upset = upsetplot(gseaKEGG) + ggtitle("GSEA Upset Plot")
  ridge = ridgeplot(gseaKEGG) + ggtitle("GSEA Ridge Plot")
  gseap = gseaplot2(gseaKEGG,geneSetID = 1:nrow(gseaKEGG@result)) + 
     ggtitle("GSEA Plot")
  # Convert to gene names (some won't match unfortunately)
  eg = bitr(names(de_genes), fromType="UNIPROT", toType="ENTREZID", OrgDb="org.Hs.eg.db")
  de_genes = de_genes[which(names(de_genes) %in% eg$UNIPROT)]
  names(de_genes) = eg$ENTREZID[match(names(de_genes),eg$UNIPROT)]
  # GO enrichment
  ego = enrichGO(names(de_genes),OrgDb = 'org.Hs.eg.db')
  bar = barplot(ego,showCategory=20) + ggtitle("GO Enrichment Bar Plot")
  dot = dotplot(ego,showCategory=20) + ggtitle("GO Enrichment Dot Plot")
  # Convert to gene symbols
  egox = setReadable(ego, 'org.Hs.eg.db', 'ENTREZID')
  # More plots!
  cnet = cnetplot(egox, foldChange=de_genes) + ggtitle("GO Enrichment Network Plot")
  circos = cnetplot(egox, foldChange=de_genes, circular = TRUE, colorEdge = TRUE) + 
    ggtitle("GO Enrichment Circos Plot")
  heat = heatplot(egox, foldChange=de_genes) + ggtitle("GO Enrichment Heatmap")
  egop = pairwise_termsim(ego)
  emap = emapplot(egop) + ggtitle("GO Enrichment Map")
  upset = upsetplot(egop) + ggtitle("GO Enrichment Upset Plot")
  # Return those beautiful plots
  return(list("gsea_upset" = gsea_upset,"ridge" = ridge,"gseap" = gseap,
              "bar" = bar,"dot" = dot,"cnet" = cnet,"circos" = circos,
              "heat" = heat,"emap" = emap,"upset" = upset))
}
```

### MAC

```{r warning=FALSE,message=FALSE}
# Prepare gene list
mac = read_excel(f,sheet = "MAC_moderated_FDR")
mac = mac[mac$P.Value <= 0.05,]
de_genes = mac$logFC
names(de_genes) = mac$UniProt
de_genes = sort(de_genes, decreasing = TRUE)
# Pathway analysis
mac_p = pathway_analysis(de_genes)
```

#### Gene ontology (GO) enrichment analysis

```{r echo=FALSE,warning=FALSE,message=FALSE}
mac_p$bar
mac_p$dot
mac_p$cnet
mac_p$circos
mac_p$heat
mac_p$emap
mac_p$upset
```

#### Gene set enrichment analysis (GSEA) with KEGG

```{r echo=FALSE,warning=FALSE,message=FALSE}
mac_p$gsea_upset
mac_p$ridge
mac_p$gseap
```
