---
title: "TODAY CKM Hierarchical Composite Endpoint analysis"
author: "Laura Pyle"
date: "r lubridate::today()`"
format:
  revealjs:
    embed-resources: true
    scrollable: true
    transition: slide
    controls-layout: bottom-right
    menu: true
    toc: true
    toc-depth: 1
    fontsize: 20
---

```{r include = F}
library(jsonlite)
library(hce)
library(dplyr)
library(knitr)

# specify user for paths
user <- Sys.info()[["user"]]
if (user == "laurapyle") {
  data_path <- "/Users/laurapyle/Library/CloudStorage/OneDrive-UW/Bjornstad/Biostatistics Core Shared Drive/TODAY subaward"
  github_path <- "/Users/laurapyle/Documents/GitHub/CHCO-Code/Petter Bjornstad"
} else if (user == "lpyle") {
  data_path <- "/Users/lpyle/Library/CloudStorage/OneDrive-UW/Bjornstad/Biostatistics Core Shared Drive/TODAY subaward"
  github_path <- "/Users/lpyle/Documents/GitHub/CHCO-Code/Petter Bjornstad"
} else {
  stop("Unknown user: please specify root path for this user.")
}
```

```{r include = F}
setwd(data_path)
# Read in CKM outcome file
filename <- "/CKM/Results/CKM stage summary.csv"
full_path <- file.path(data_path, filename)
ckm <- read.csv(full_path)

# I think I need to restructure the dataset further
# Build hierarchy from most to least severe
ckm_hce <- hce(
  GROUP = ckm_progression_data$treatment,
  
  # Layer 1: CV death
  EVENT1 = ckm_progression_data$cv_death,
  EVENTTIME1 = ckm_progression_data$cv_death_time,
  TYPE1 = "tte",
  
  # Layer 2: Progression to Stage 4 (most severe)
  EVENT2 = ifelse(!is.na(ckm_progression_data$time_to_stage4), 1, 0),
  EVENTTIME2 = ifelse(!is.na(ckm_progression_data$time_to_stage4),
                      ckm_progression_data$time_to_stage4,
                      ckm_progression_data$followup_time),
  TYPE2 = "tte",
  
  # Layer 3: Progression by 2+ stages
  EVENT3 = ifelse(!is.na(ckm_progression_data$time_to_2stage_prog), 1, 0),
  EVENTTIME3 = ifelse(!is.na(ckm_progression_data$time_to_2stage_prog),
                      ckm_progression_data$time_to_2stage_prog,
                      ckm_progression_data$followup_time),
  TYPE3 = "tte",
  
  # Layer 4: Any progression
  EVENT4 = ifelse(!is.na(ckm_progression_data$time_to_first_prog), 1, 0),
  EVENTTIME4 = ifelse(!is.na(ckm_progression_data$time_to_first_prog),
                      ckm_progression_data$time_to_first_prog,
                      ckm_progression_data$followup_time),
  TYPE4 = "tte"
)
```

# New Heading

Create bullet points using "* ". 

* Remember to have a space ("# ", "* ", etc.) following your hashtags and asterisks so that your title is properly rendered as a new section header or a bullet point.

* Also add an **empty line** following your headers and bullets.

```{r echo = T}
# You can have code chunks like this and code as usual .qmd or markdown files
```

## Subheading

# Read in RDS from Kopah

```{r echo = T, eval = F}
# Read RDS files directly from Kopah using code like this:
exampleRDS <- s3readRDS("folder1/examplefile.rds", "bucketname", region = "") # region must be left blank
```

# Kable

```{r echo = T, results='asis'}
# When printing knitr::kable, make sure to have results = 'asis' in the chunk opener

set.seed(123)
# Create dummy data
df <- data.frame(
  x1 = rnorm(100, mean = 50, sd = 10),
  x2 = rnorm(100, mean = 0, sd = 1),
  x3 = runif(100, min = 0, max = 1),
  y = sample(c("A", "B", "C"), 100, replace = TRUE)
)

kable(summary(arsenal::tableby(y ~ x1 + x2 + x3, data = df), digits = 1))
```


---

To create a new page without a new header/subheader, break the page using "---" (3 dashes). **Again, remember to keep a space before and after "---".**

# Manual table

Create tables like this:

| Column 1  | Column 2  |
|-----------|-----------|
| content 1 | content 2 |
| content 3 | content 4 |

[Resource](https://www.tablesgenerator.com/markdown_tables)

# Figures

![](/Users/choiyej/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Bjornstad Pyle Lab/BjornstadPyleTommerdahlLogo.png){width=50%}

You can use a for loop to pull multiple figures if they have similar names:

```{r echo = T, eval = F}
#| layout-ncol: 2 # <- add this if you want to put figures side by side from a chunk
# example code
celltype_list <- c("pt", "tal", "pc", "immune",  "immune_myeloid", "immune_lymphoid", "ic", "ec", "fibvsmc")

for (cells in celltype_list) {
  cat("#### ", toupper(cells), "\n\n") 

  cat(paste0("![](/Folder1/Folder2/", cells, "_common_file_name_suffix.jpeg){width=100%}\n\n"))
}
```


---

Put two figures side-by-side when calling figures with html format (see above for how to do it in a chunk):

::: columns
::: column
![](/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/Ye Ji Choi/Figures for Templates/kidneyl.jpg){width=100%}
:::

::: column
![](/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/Ye Ji Choi/Figures for Templates/kidneyr.jpg){width=100%}
:::
:::