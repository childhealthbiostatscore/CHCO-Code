---
title: "CKM in TODAY"
author: "Laura Pyle"
format: html
editor: visual
---

```{r}
library(dplyr)
```

```{r}
# read in COMORB adjudicated endpoints
comorb <- read.csv("/Users/pylell/Library/CloudStorage/OneDrive-SharedLibraries-UW/Bjornstad/Biostatistics Core Shared Drive/TODAY subaward/Clinical data/COMORB.csv")
# get fup time from visit dates - the problem is that these are not granular enough 
load("/Users/pylell/Library/CloudStorage/OneDrive-SharedLibraries-UW/Bjornstad/Biostatistics Core Shared Drive/TODAY subaward/Clinical data/TODAY/clinical_data_long.Rdata")

long$RELEASEID <- long$releaseid
fup <- long %>% select(releaseid, )

# in comorb, figure out length of follow-up by choosing number of days for an event the participant did not have
comorb$fup_time <- ifelse(comorb$HTN == 0, comorb$DAYSTOHTN, 
                          ifelse(comorb$LDLDLP == 0, comorb$DAYSTOLDL,
                                 ifelse(comorb$NEURO == 0, comorb$DAYSTONEURO, 
                                        ifelse(comorb$DNE == 0, comorb$DAYSTODNE, 
                                               ifelse(comorb$FILAM == 0, comorb$DAYSTOFILAM, 
                                                     ifelse(comorb$RETINO == 0, comorb$DAYSTORETINO, 
                                                            ifelse(comorb$TGDLP == 0, comorb$DAYSTOTG, 
                                                                   ifelse(comorb$NEPHRO == 0, comorb$DAYSTONEPHRO, 
                                                                          ifelse(comorb$HYP ==0, comorb$DAYSTOHYP, NA)))))))))
# one person () has every outcome, so fup_time is missing

# read in adjudicated medical event dataset
ame <- read.csv('/Users/pylell/Library/CloudStorage/OneDrive-SharedLibraries-UW/Bjornstad/Biostatistics Core Shared Drive/TODAY subaward/Clinical data/TODAY2/AME.csv')

# reformat ame database so it's in the same format as COMORB (i.e., variable for event at baseline, variable for event during followup, and days to event)
# note that some people have multiple events of the same type (e.g., CAD) - will take the first
cad <- ame %>% filter(AMENAME == 2) %>% select(releaseid, DAYSTOAME)
cad <- cad %>% arrange(releaseid, DAYSTOAME) %>% group_by(releaseid) %>% filter(row_number() == 1)
colnames(cad) <- c("RELEASEID", "DAYSTOCAD")
cad$CAD <- 1
comorb <- full_join(comorb, cad, by = "RELEASEID")

```

```         
```

## Background
