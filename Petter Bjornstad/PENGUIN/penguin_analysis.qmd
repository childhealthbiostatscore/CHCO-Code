---
title: "PENGUIN Analysis"
author: "Tim Vigers"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    page-layout: full
    toc: true
    toc-depth: 5
    toc-float: true
    self-contained: true
    code-fold: true
editor: visual
---

```{python}
import pandas as pd
import numpy as np
# Import data and variable names
df = pd.read_csv("/Volumes/Work/CHCO/Petter Bjornstad/Data Harmonization/Data Clean/harmonized_dataset.csv",low_memory=False)
var_names = pd.read_csv("/Volumes/Work/CHCO/Petter Bjornstad/Data Harmonization/data_dictionary_master.csv",low_memory=False)
# Subset to CROCODILE and PENGUIN
df = df.loc[df["study"].isin(["CROCODILE","PENGUIN"])]
df = df.loc[df["group"] != "Type 1 Diabetes"]
# Get last values for each visit
df = df.groupby(by=["record_id", "visit"]).agg("last").reset_index()
```

```{python}
t1_vars = ["sex","race","age","height","weight","bmi","sbp","dbp","pulse","creatinine_s","eGFR_CKD_epi","acr_u","ace_inhibitor","angiotensin_receptor_blocker","beta_blocker","ca_channel_blocker","diuretic","statin"]
#| label: t1-histograms
import seaborn as sns
import matplotlib.pyplot as plt
hist_vars = df[list(var_names.keys())[3:]].select_dtypes(include=np.number).columns.tolist()
for v in hist_vars:
  ax = sns.displot(df, x=v, hue="group", element="step")
  ax.set(xlabel=var_names[v])
  plt.show()
```

```{python}
#| label: tbl-1
#| tbl-cap: Participant Characteristics
from tableone import TableOne
cat = ["sex","race","ace_inhibitor","angiotensin_receptor_blocker","beta_blocker","ca_channel_blocker","diuretic","statin"]
groupby = "group"
nn = ["acr_u", "creatinine_s", "dbp"]
t1 = TableOne(df,t1_vars, cat, groupby=groupby,nonnormal=nn,
pval=True,dip_test=True, normal_test=True, tukey_test=True,decimals=3)
t1
```

```{python}
dxa_vars = ["body_fat","fat_kg","trunk_kg","lean_kg","p1_raw_m","p1_raw_leanm","p1_gc_m","p1_gc_leanm","p2_raw_m","p2_raw_leanm","p2_gc_m","p2_gc_leanm"]
```

```{python}
mri_vars = ["total_kidney_volume_ml","right_kidney_volume_ml","left_kidney_volume_ml","height_adj_total_kidney_volume","height_adj_right_kidney_volume","height_adj_left_kidney_volume","total_liver_volume_ml","total_cyst_volume_ml","total_number_of_cysts","lc_f","lc_k1","lc_k2","lc_vb","rc_f","rc_k1","rc_k2","rc_vb","lm_f","lm_k1","lm_k2","lm_vb","rm_f","rm_k1","rm_k2","rm_vb"]
# Height-adjusted
df["height_adj_total_kidney_volume"] = df["total_kidney_volume_ml"] / (df["height"] / 100)
df["height_adj_right_kidney_volume"] = df["right_kidney_volume_ml"] / (df["height"] / 100)
df["height_adj_left_kidney_volume"] = df["left_kidney_volume_ml"] / (df["height"] / 100)
```

```{python}
#| label: t2-histograms
hist_vars = list(mri_vars.keys())[3:]
for v in hist_vars:
  ax = sns.displot(df, x=v, hue="group", element="step")
  ax.set(xlabel=mri_vars[v])
  plt.show()
```

```{python}
#| label: tbl-2
#| tbl-cap: PET and MRI
#| warning: false
# Table
t2 = TableOne(df,list(mri_vars.keys())[3:],groupby=groupby,
pval=True,dip_test=True, normal_test=True, tukey_test=True,decimals=3)
t2
```

# Questions for Petter
