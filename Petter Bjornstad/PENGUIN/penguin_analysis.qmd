---
title: PENGUIN Analysis
author: Tim Vigers, Ye Ji Choi
date: "`r lubridate::today()`"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    theme: default
editor: visual
---

```{r setup, include=F}
library(dplyr)
library(reticulate)
library(corrplot)
library(knitr)
library(Hmisc)
library(tidyverse)
library(scales)
library(kableExtra)
library(gtools)
library(superheat)
library(emmeans)
library(ggpubr)
library(table1)
library(RColorBrewer)
use_python("/usr/bin/python3", required = TRUE)
```

```{python, include=F}
import pandas as pd
import numpy as np
import statistics
import rpy2
import rpy2.robjects as ro
import seaborn as sns
import matplotlib.pyplot as plt
from tableone import TableOne
from rpy2.robjects.packages import importr
from rpy2.robjects import pandas2ri
from scipy.stats import mannwhitneyu

# Import data and variable names
df = pd.read_csv("/Volumes/Peds Endo/Petter Bjornstad/Data Harmonization/Data Clean/harmonized_dataset.csv", low_memory=False)
var_names = pd.read_csv("/Volumes/Peds Endo/Petter Bjornstad/Data Harmonization/data_dictionary_master.csv", low_memory=False)
vw = pd.read_csv("/Volumes/Peds Endo/Petter Bjornstad/PENGUIN/Background/voxelwise_means_combined.csv", low_memory=False)
coenroll_id = pd.read_csv("/Users/choiyej/GitHub/YC_CHCO/RH2/coenrolled_ids.csv")
# Create dictionary of variable names
var_dict = var_names.set_index('variable_name')['label'].to_dict()
# Merge voxelwise analysis means
df = pd.merge(df, vw, on = "record_id", how = "outer")
# Subset to CROCODILE and PENGUIN
df = df.loc[df["study"].isin(["CROCODILE","PENGUIN","RENAL-HEIRitage"])]
df = df.loc[df["group"] != "Type 1 Diabetes"]
df = df.loc[df["group"] != "Type 2 Diabetes"]
df = df.loc[df["visit"] == "baseline"]
df = df[(df['study'] != 'RENAL-HEIRitage') | (df['group'] != 'Lean Control')]
# Get last values for each visit
df = df.groupby(by=["record_id", "visit"]).agg("last").reset_index()
# Exclude any removed participants
df = df.loc[df["participation_status"] != "Removed"]
# Create FFA suppression variables
df = df.assign(ffa_suppression_1 = (df.baseline_ffa - df[['ffa_70', 'ffa_80', 'ffa_90']].mean(axis=1))/df.baseline_ffa*100, ffa_suppression_2 = (df.baseline_ffa -  df[['ffa_250', 'ffa_260', 'ffa_270']].mean(axis=1))/df.baseline_ffa * 100)
# Create urine albumin excretion variable (general 24 hrs)
df = df.assign(aer_24 = (df.u24_mab * df.u24_vl) / 1440)
# Create urine albumin excretion variable (specific to collection time)
df = df.assign(aer_24_coltime = (df.u24_mab * df.u24_vl) / (df.u24_hrs * 60))
# Group adpkd_classification grouping (ABC vs. DE)
df['adpkd_grp'] = np.where((df['adpkd_classification'] == 1) | (df['adpkd_classification'] == 2) | (df['adpkd_classification'] == 3), "1ABC", 
                           np.where((df['adpkd_classification'] == 4) | (df['adpkd_classification'] == 5), "1DE", np.nan))
# ADPKD classification relevel
df["adpkd_classification"].replace({1: "1A", 2: "1B", 3: "1C", 4: "1D", 5: "1E"}, inplace=True)
# Height-adjusted
df["height_adj_total_kidney_volume"] = df["total_kidney_volume_ml"] / (df["height"] / 100)
df["height_adj_right_kidney_volume"] = df["right_kidney_volume_ml"] / (df["height"] / 100)
df["height_adj_left_kidney_volume"] = df["left_kidney_volume_ml"] / (df["height"] / 100)
# Average left/right cortex
df["avg_f"] = df[["lc_f", "rc_f"]].mean(axis=1)
df["avg_k1"] = df[["lc_k1", "rc_k1"]].mean(axis=1)
df["avg_k2"] = df[["lc_k2", "rc_k2"]].mean(axis=1)
df["avg_vb"] = df[["lc_vb", "rc_vb"]].mean(axis=1)
df["avg_k1_w_cyst"] = df[["ltot_k1_w_cyst", "rtot_k1_w_cyst"]].mean(axis=1)
df["avg_k2_w_cyst"] = df[["ltot_k2_w_cyst", "rtot_k2_w_cyst"]].mean(axis=1)
df["avg_k1_wo_cyst"] = df[["ltot_k1_wo_cyst", "rtot_k1_wo_cyst"]].mean(axis=1)
df["avg_k2_wo_cyst"] = df[["ltot_k2_wo_cyst", "rtot_k2_wo_cyst"]].mean(axis=1)
# Calculate k2 ratios
df["k2_f"] = df["avg_k2"] / df["avg_f"]
df["k2_k1"] = df["avg_k2"] / df["avg_k1"]
# Calculate adjusted body weight and BMI
df["adjusted_weight"] = df["weight"] - (df["total_kidney_volume_ml"]/1000)
df["adjusted_bmi"] = df["adjusted_weight"] / ((df["height"]/100) ** 2)
# Calculate M/I (in phase 2)
df["m_i"] = df["p2_raw_leanm"] / df["p2_steady_state_insulin"]
# Subset data with PET data
df = df.loc[pd.notnull(df["avg_k2_w_cyst"])]
# Categorical variables
cat = ["sex","race","statin", "angiotensin_receptor_blocker", "ace_inhibitor","adpkd_classification", "adpkd_grp"]
groupby = "group"
# All
df_all = df
# Subset data with OC
df_OC = df.loc[df["group"] != "Lean Control"]
# Subset data with LC
df = df.loc[df["group"] != "Obese Control"]
```

```{python, include=F}
t1_vars = ["age", "sex","race","height","weight", "adjusted_bmi", "bmi","sbp","dbp","pulse","creatinine_s","eGFR_CKD_epi","acr_u","aer_24", "aer_24_coltime","statin", "angiotensin_receptor_blocker","ace_inhibitor","adpkd_classification", "adpkd_grp", "m_i", "gfr_bsa_plasma", "erpf_bsa_plasma", "gfr_bsa_plasma_urine", "erpf_bsa_plasma_urine"]

# t1-histograms
hist_vars1 = df[list(t1_vars)].select_dtypes(include=np.number).columns.tolist()
for v in hist_vars1:
  ax = sns.displot(df, x=v, hue="group", element="step")
  ax.set(xlabel=v)
  plt.show()
  
# t1-non-normal
t1nn = ["adjusted_bmi", "acr_u", "creatinine_s", "sbp", "dbp", "bmi", "aer_24", "aer_24_col_time"]
```

```{python, include=F}
mri_vars = ["total_kidney_volume_ml","height_adj_total_kidney_volume","right_kidney_volume_ml","height_adj_right_kidney_volume","left_kidney_volume_ml","height_adj_left_kidney_volume","total_liver_volume_ml","total_cyst_volume_ml","total_number_of_cysts","lc_f","rc_f", "lc_k1", "rc_k1", "lc_k2", "rc_k2", "lc_vb","rc_vb", "rtot_k1_w_cyst",	"rtot_k1_wo_cyst",	"ltot_k1_w_cyst",	"ltot_k1_wo_cyst",	"rtot_k2_w_cyst",	"rtot_k2_wo_cyst",	"ltot_k2_w_cyst",	"ltot_k2_wo_cyst", "avg_f", "avg_k1", "avg_k2", "avg_vb",  "avg_k1_w_cyst",	"avg_k1_wo_cyst",		"avg_k2_w_cyst",	"avg_k2_wo_cyst", "k2_f", "k2_k1"]

# t2-histograms
hist_vars2 = df[list(mri_vars)].select_dtypes(include=np.number).columns.tolist()
for v in hist_vars2:
   ax = sns.displot(df, x=v, hue="group", element="step")
   ax.set(xlabel=v)
   plt.show()
   
# t2-non-normal
t2nn = ["total_cyst_volume_ml", "total_number_of_cysts", "lc_f", "rc_f", "lc_k1", "rc_k1", "lc_vb", "rc_vb", "rtot_k1_w_cyst",	"rtot_k1_wo_cyst",	"ltot_k1_w_cyst",	"ltot_k1_wo_cyst",	"rtot_k2_w_cyst",	"rtot_k2_wo_cyst",	"ltot_k2_w_cyst",	"ltot_k2_wo_cyst", "avg_f", "avg_k1", "avg_vb",  "avg_k1_w_cyst",	"avg_k1_wo_cyst",		"avg_k2_w_cyst",	"avg_k2_wo_cyst", "k2_f", "k2_k1"]
```

```{python, include=F}
dxa_vars = ["dexa_body_fat","dexa_fat_kg","dexa_lean_kg","dexa_trunk_kg","dexa_est_vat", "p1_raw_m","p1_raw_leanm","p2_raw_m","p2_raw_leanm", "ffa_suppression_1", "ffa_suppression_2"]
mri_dxa_vars = mri_vars + dxa_vars
all_vars = t1_vars + mri_vars + dxa_vars

# t3-histograms
hist_vars3 = df[list(dxa_vars)].select_dtypes(include=np.number).columns.tolist()
for v in hist_vars3:
   ax = sns.displot(df, x=v, hue="group", element="step")
   ax.set(xlabel=v)
   plt.show()
   
# t3-non-normal
t3nn = ["ffa_suppression_1", "ffa_suppression_2"]
t4nn = t2nn + t3nn
```

```{python, include=F}
# Missing variables check
missing = df.groupby(['group'])[all_vars].apply(lambda x: x.isnull().sum())
missing = np.transpose(missing)
# Create descriptive tables
t1 = TableOne(df,t1_vars, cat, groupby=groupby, nonnormal=t1nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
t2 = TableOne(df,mri_vars, groupby=groupby, nonnormal=t2nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
t3 = TableOne(df,dxa_vars, groupby=groupby, nonnormal=t3nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)

# Create descriptive tables with OC
t1_OC = TableOne(df_OC ,t1_vars, cat, groupby=groupby, nonnormal=t1nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
t2_OC = TableOne(df_OC ,mri_vars, groupby=groupby, nonnormal=t2nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
t3_OC = TableOne(df_OC ,dxa_vars, groupby=groupby, nonnormal=t3nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)

```

# Descriptive Tables

## Demographics, anthropometrics and vital signs

```{python}
#| label: tbl-1
#| tbl-cap: Participant Characteristics
t1
t1.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t1.csv")
```

## DEXA

```{python}
#| label: tbl-2
#| tbl-cap: PET and MRI
t2
t2.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t2.csv")
```

## MRI kidney and liver volumes, MRI cyst volume and numbers, ^11^C-acetate PET derived kidney energetics and function

```{python}
#| label: tbl-3
#| tbl-cap: DXA
t3
t3.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t3.csv")
```

### Supplemental Obese Control

## Demographics, anthropometrics and vital signs

```{python}
#| label: tbl-1-OC
#| tbl-cap: Participant Characteristics
t1_OC
t1_OC.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t1_OC.csv")
```

## DEXA

```{python}
#| label: tbl-2-OC
#| tbl-cap: PET and MRI
t2_OC
t2_OC.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t2_OC.csv")
```

## MRI kidney and liver volumes, MRI cyst volume and numbers, ^11^C-acetate PET derived kidney energetics and function

```{python}
#| label: tbl-3-OC
#| tbl-cap: DXA
t3_OC
t3_OC.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t3_OC.csv")
```

# Supplemental by ADPKD class

```{python, include=F}
df_pkd = df.loc[df["group"] == "PKD"]
df_pkd = df_pkd.loc[df_pkd["adpkd_grp"] != "nan"]
cyst_vars = ["total_cyst_volume_ml", "total_number_of_cysts"]

hist_vars1 = df[list(cyst_vars)].select_dtypes(include=np.number).columns.tolist()
for v in hist_vars1:
  ax = sns.displot(df, x=v, hue="adpkd_grp", element="step")
  ax.set(xlabel=v)
  plt.show()

adpkd_grp_desc = TableOne(df_pkd,cyst_vars, nonnormal=cyst_vars, groupby="adpkd_grp", pval=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
## Cyst burden by ADPKD group (grouped by 1A/1B/1C and 1D/1E)
adpkd_grp_desc

t1_adpkd_vars = ["age", "sex","race","height","weight",
"adjusted_bmi", "bmi","sbp","dbp","pulse","creatinine_s","eGFR_CKD_epi","acr_u","aer_24", "aer_24_coltime","statin", "angiotensin_receptor_blocker","ace_inhibitor", "dexa_est_vat", "m_i"]

hist_vars1 = df_pkd[list(t1_adpkd_vars)].select_dtypes(include=np.number).columns.tolist()
for v in hist_vars1:
  ax = sns.displot(df_pkd, x=v, hue="adpkd_grp", element="step")
  ax.set(xlabel=v)
  plt.show()

# t1-adpkd-non-normal
t1_adpkd_nn = ["adjusted_bmi", "bmi", "creatinine_s", "acr_u", "aer_24", "aer_24_col_time"]

adpkd_grp_t1 = TableOne(df_pkd,t1_adpkd_vars, nonnormal=t1_adpkd_nn, groupby="adpkd_grp", pval=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)

adpkd_grp_t2 = TableOne(df_pkd,mri_dxa_vars, groupby="adpkd_grp", nonnormal=t4nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
```

```{python}
#| label: tbl-1-adpkd
#| tbl-cap: Participant Characteristics by ADPKD
adpkd_grp_t1
adpkd_grp_t1.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/adpkd_grp_t1.csv")
```

```{python}
#| label: tbl-2-adpkd
#| tbl-cap: PET and MRI by ADPKD
adpkd_grp_t2
adpkd_grp_t2.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/adpkd_grp_t2.csv")
```

```{r, include=F}
# Make python version of df into R version df
df_R <- py$df
df_R_OC <- py$df_OC
df_R_all <- py$df_all
df_R <- df_R %>% mutate(group = case_when(group == "Lean Control" ~ "Lean",
                                   group == "PKD" ~ "PKD",
                                   group == "Obese Control" ~ "Obese"))
df_R_OC <- df_R_OC %>% mutate(group = case_when(group == "Lean Control" ~ "Lean",
                                   group == "PKD" ~ "PKD",
                                   group == "Obese Control" ~ "Obese"))
df_R_all <- df_R_all %>% mutate(group = case_when(group == "Lean Control" ~ "2 Lean",
                                   group == "PKD" ~ "3 PKD",
                                   group == "Obese Control" ~ "1 Obese"))
```

```{r}
table1(~ age +  sex + race + height + weight +  adjusted_bmi +  bmi + sbp + dbp + pulse + creatinine_s + eGFR_CKD_epi + acr_u + aer_24 +  aer_24_coltime  +   m_i | group, data=subset(df_R_OC))

table1(~ total_kidney_volume_ml + height_adj_total_kidney_volume + right_kidney_volume_ml + height_adj_right_kidney_volume + left_kidney_volume_ml + height_adj_left_kidney_volume + total_liver_volume_ml + total_cyst_volume_ml + total_number_of_cysts + lc_f + rc_f +  lc_k1 +  rc_k1 +  lc_k2 +  rc_k2 +  lc_vb + rc_vb +  rtot_k1_w_cyst + 	rtot_k1_wo_cyst + 	ltot_k1_w_cyst + 	ltot_k1_wo_cyst + 	rtot_k2_w_cyst + 	rtot_k2_wo_cyst + 	ltot_k2_w_cyst + 	ltot_k2_wo_cyst +  avg_f +  avg_k1 +  avg_k2 +  avg_vb +   avg_k1_w_cyst + 	avg_k1_wo_cyst + 		avg_k2_w_cyst + 	avg_k2_wo_cyst +  k2_f +  k2_k1 | group,  data=subset(df_R_OC))
```

# Correlation

```{r, include=FALSE}
# Select relevant variables for the correlation matrix
df_R_correlation <- df_R %>%
  mutate(p2_raw_leanm_row = p2_raw_leanm, 
         m_i_row = m_i,
         dexa_fat_kg_row = dexa_fat_kg, 
         dexa_lean_kg_row = dexa_lean_kg,
         dexa_est_vat_row = dexa_est_vat,
         ffa_suppression_1_row = ffa_suppression_1,
         ffa_suppression_2_row = ffa_suppression_2) %>%
  select(p2_raw_leanm, 
         m_i, 
         dexa_fat_kg, 
         dexa_lean_kg, 
         dexa_est_vat, 
         height_adj_total_kidney_volume, 
         right_kidney_volume_ml, 
         height_adj_right_kidney_volume, 
         left_kidney_volume_ml, 
         height_adj_left_kidney_volume, 
         total_liver_volume_ml, 
         total_cyst_volume_ml, 
         total_number_of_cysts, 
         ffa_suppression_1, 
         ffa_suppression_2,  
         p2_raw_leanm_row, 
         m_i_row, 
         dexa_fat_kg_row, 
         dexa_lean_kg_row, 
         dexa_est_vat_row, 
         lc_f, 
         rc_f,
         lc_vb, 
         rc_vb, 
         lc_k1, 
         rc_k1, 
         lc_k2, 
         rc_k2,
         ltot_k1_w_cyst,	
         ltot_k1_wo_cyst,
         rtot_k1_w_cyst,	
         rtot_k1_wo_cyst,	
         ltot_k2_w_cyst,	
         ltot_k2_wo_cyst, 
         rtot_k2_w_cyst,
         rtot_k2_wo_cyst, 
         avg_f, 
         avg_k1, 
         avg_k2_w_cyst, 
         avg_k2_wo_cyst, 
         k2_f, 
         k2_k1, 
         ffa_suppression_1_row, 
         ffa_suppression_2_row
         )

# Correlation matrix in table format
M_table <- as.data.frame(cor(y = df_R_correlation[,1:15],
                             x=df_R_correlation[,16:ncol(df_R_correlation)], 
                             use = "pairwise.complete.obs")) %>%
  select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat,
         height_adj_total_kidney_volume, right_kidney_volume_ml,
         height_adj_right_kidney_volume, left_kidney_volume_ml,
         height_adj_left_kidney_volume, total_liver_volume_ml, 
         total_cyst_volume_ml, total_number_of_cysts, 
         ffa_suppression_1, ffa_suppression_2)

# Compute p-values to add to matrix table
res2 <- rcorr(as.matrix(df_R_correlation))
corr_pval <- as.data.frame(res2$P) %>%
  select(starts_with("p")|
           starts_with("m_i")|
           starts_with("ffa")|
           starts_with("dexa")|
           starts_with("total")|
           starts_with("height")|
           starts_with("right")|
           starts_with("left")) %>%
  sapply(pvalue) 
corr_pval <- as.data.frame(corr_pval) %>% 
  select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat, 
         height_adj_total_kidney_volume, right_kidney_volume_ml, 
         height_adj_right_kidney_volume, left_kidney_volume_ml, 
         height_adj_left_kidney_volume, total_liver_volume_ml, 
         total_cyst_volume_ml, total_number_of_cysts, 
         ffa_suppression_1, ffa_suppression_2)
colnames(corr_pval) <- rep("p_value", ncol(corr_pval))

# Add p-values to matrix table
corr_pval = corr_pval[16:nrow(corr_pval),]
M_table_p <- bind_cols(M_table, corr_pval) %>%
  relocate(map(1:ncol(M_table), ~ c(.x, .x + ncol(M_table))) %>% unlist())
```

```{r include=F}
# Label variables
var_R <- as.data.frame(py$var_dict)
var_R <- var_R %>%  
  mutate(height_adj_total_kidney_volume = "Height Adjusted Total Kidney Volume") %>%
  mutate(height_adj_left_kidney_volume = "Height Adjusted Left Kidney Volume") %>%
  mutate(height_adj_right_kidney_volume = "Height Adjusted Right Kidney Volume") %>%
  mutate(m_i = paste0("M/I")) %>%
  mutate(ffa_suppression_1 = "FFA Suppression P1") %>%
  mutate(ffa_suppression_2 = "FFA Suppression P2")
var_R <- var_R[intersect(names(M_table_p), names(var_R))]
var_R[setdiff(names(M_table_p), names(var_R))] <- "p-value"
Hmisc::label(M_table_p) = var_R[match(names(M_table_p), names(var_R))]
var_R <- as.data.frame(py$var_dict)
var_R %<>%
  mutate(m_i_row = paste0("M/I")) %>%
  mutate(p2_raw_leanm_row = p2_raw_leanm) %>%
  mutate(dexa_fat_kg_row = dexa_fat_kg) %>%
  mutate(dexa_lean_kg_row = dexa_lean_kg) %>%
  mutate(dexa_est_vat_row = dexa_est_vat) %>%
  mutate(ltot_k1_w_cyst = paste0("Left Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k2_w_cyst = paste0("Left Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k1_wo_cyst = paste0("Left Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k2_wo_cyst = paste0("Left Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k1_w_cyst = paste0("Right Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k2_w_cyst = paste0("Right Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k1_wo_cyst = paste0("Right Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k2_wo_cyst = paste0("Right Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
  mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
  mutate(avg_k1 = paste0("Average cortex tracer uptake (k1)")) %>%
  mutate(avg_k2 = paste0("Average cortex oxidation (k2)")) %>%
  mutate(avg_vb = paste0("Average cortex vb")) %>%
  mutate(avg_k1_w_cyst = paste0("Average cortex perfusion with cyst (K1)")) %>%
  mutate(avg_k1_wo_cyst = paste0("Average cortex perfusion w/o cyst(K1)")) %>%
  mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (K2)")) %>%
  mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
  mutate(k2_f = "k2/f") %>%
  mutate(k2_k1 = "k2/k1") %>%
  mutate(ffa_suppression_1_row = "FFA Suppression P1") %>%
  mutate(ffa_suppression_2_row = "FFA Suppression P2")

row.names(M_table_p) <- var_R[match(row.names(M_table_p), names(var_R))]
correlation_1 <- M_table_p 
write.csv(correlation_1, "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/correlation_1.csv", row.names = T)
```

## Correlation matrix (table)

```{r fig.height=10}
# Matrix table with p-values
kable(M_table_p, 
      col.names = rep(c("Correlation", "p-value"), ncol(M_table_p)/2), 
      caption = "Correlation", 
      digits = c(1,4),
      align = rep("r", ncol(M_table_p))) %>%
  kable_styling(bootstrap_options = c("hover"),
            full_width = F, 
            fixed_thead = T) %>%
  add_header_above(header = c(" "=1, 
                     setNames(2, Hmisc::label(M_table_p)[1]), 
                     setNames(2, Hmisc::label(M_table_p)[3]), 
                     setNames(2, Hmisc::label(M_table_p)[5]), 
                     setNames(2, Hmisc::label(M_table_p)[7]), 
                     setNames(2, Hmisc::label(M_table_p)[9]), 
                     setNames(2, Hmisc::label(M_table_p)[11]), 
                     setNames(2, Hmisc::label(M_table_p)[13]), 
                     setNames(2, Hmisc::label(M_table_p)[15]), 
                     setNames(2, Hmisc::label(M_table_p)[17]), 
                     setNames(2, Hmisc::label(M_table_p)[19]), 
                     setNames(2, Hmisc::label(M_table_p)[21]), 
                     setNames(2, Hmisc::label(M_table_p)[23]),
                     setNames(2, Hmisc::label(M_table_p)[25]),
                     setNames(2, Hmisc::label(M_table_p)[27]),
                     setNames(2, Hmisc::label(M_table_p)[29]))) %>%
  column_spec(1, width_min = "5in", border_right=T, bold = T) %>%
  column_spec(3, border_right=T) %>%
  column_spec(5, border_right=T) %>%
  column_spec(7, border_right=T) %>%
  column_spec(9, border_right=T) %>%
  column_spec(11, border_right=T) %>%
  column_spec(13, border_right=T) %>%
  column_spec(15, border_right=T) %>%
  column_spec(17, border_right=T) %>%
  column_spec(19, border_right=T) %>%
  column_spec(21, border_right=T) %>%
  column_spec(23, border_right=T) %>%
  column_spec(25, border_right=T) %>%
  column_spec(27, border_right=T) %>%
  column_spec(29, border_right=T)  
```

## Correlation matrix (plot)

```{r fig.height=15,fig.width=15}
# Plot correlation matrix
M = cor(df_R_correlation[,1:ncol(df_R_correlation)], use = "pairwise.complete.obs") 
testRes = cor.mtest(df_R_correlation[,1:ncol(df_R_correlation)]) 
corrplot(M, p.mat = testRes$p, method = 'circle', type = 'lower', insig='blank', addCoef.col ='white', order = 'AOE', diag=FALSE, number.cex = 0.8)
```

```{r include=F}
# Correlation matrix by PKD
df_PKD <- df_R %>%
  filter(group == "PKD")

# Select relevant variables for the correlation matrix
df_R_correlation <- df_PKD %>%
  mutate(p2_raw_leanm_row = p2_raw_leanm, 
         m_i_row = m_i,
         dexa_fat_kg_row = dexa_fat_kg, 
         dexa_lean_kg_row = dexa_lean_kg,
         dexa_est_vat_row = dexa_est_vat,
         ffa_suppression_1_row = ffa_suppression_1,
         ffa_suppression_2_row = ffa_suppression_2) %>%
  select(p2_raw_leanm, 
         m_i, 
         dexa_fat_kg, 
         dexa_lean_kg, 
         dexa_est_vat, 
         height_adj_total_kidney_volume, 
         right_kidney_volume_ml, 
         height_adj_right_kidney_volume, 
         left_kidney_volume_ml, 
         height_adj_left_kidney_volume, 
         total_liver_volume_ml, 
         total_cyst_volume_ml, 
         total_number_of_cysts, 
         ffa_suppression_1, 
         ffa_suppression_2,  
         p2_raw_leanm_row, 
         m_i_row, 
         dexa_fat_kg_row, 
         dexa_lean_kg_row, 
         dexa_est_vat_row, 
         lc_f, 
         rc_f,
         lc_vb, 
         rc_vb, 
         lc_k1, 
         rc_k1, 
         lc_k2, 
         rc_k2,
         ltot_k1_w_cyst,	
         ltot_k1_wo_cyst,
         rtot_k1_w_cyst,	
         rtot_k1_wo_cyst,	
         ltot_k2_w_cyst,	
         ltot_k2_wo_cyst, 
         rtot_k2_w_cyst,
         rtot_k2_wo_cyst, 
         avg_f, 
         avg_k1, 
         avg_k2_w_cyst, 
         avg_k2_wo_cyst, 
         k2_f, 
         k2_k1, 
         ffa_suppression_1_row, 
         ffa_suppression_2_row
         )

# Correlation matrix in table format
M_table <- as.data.frame(cor(y = df_R_correlation[,1:15],
                             x=df_R_correlation[,16:ncol(df_R_correlation)], 
                             use = "pairwise.complete.obs")) %>%
  select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat,
         height_adj_total_kidney_volume, right_kidney_volume_ml,
         height_adj_right_kidney_volume, left_kidney_volume_ml,
         height_adj_left_kidney_volume, total_liver_volume_ml, 
         total_cyst_volume_ml, total_number_of_cysts, 
         ffa_suppression_1, ffa_suppression_2)

# Compute p-values to add to matrix table
res2 <- rcorr(as.matrix(df_R_correlation))
corr_pval <- as.data.frame(res2$P) %>%
  select(starts_with("p")|
           starts_with("m_i")|
           starts_with("ffa")|
           starts_with("dexa")|
           starts_with("total")|
           starts_with("height")|
           starts_with("right")|
           starts_with("left")) %>%
  sapply(pvalue) 
corr_pval <- as.data.frame(corr_pval) %>% 
  select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat, 
         height_adj_total_kidney_volume, right_kidney_volume_ml, 
         height_adj_right_kidney_volume, left_kidney_volume_ml, 
         height_adj_left_kidney_volume, total_liver_volume_ml, 
         total_cyst_volume_ml, total_number_of_cysts, 
         ffa_suppression_1, ffa_suppression_2)
colnames(corr_pval) <- rep("p_value", ncol(corr_pval))

# Add p-values to matrix table
corr_pval = corr_pval[16:nrow(corr_pval),]
M_table_p <- bind_cols(M_table, corr_pval) %>%
  relocate(map(1:ncol(M_table), ~ c(.x, .x + ncol(M_table))) %>% unlist())

# Label variables
var_R <- as.data.frame(py$var_dict)
var_R <- var_R %>%  
  mutate(height_adj_total_kidney_volume = "Height Adjusted Total Kidney Volume") %>%
  mutate(height_adj_left_kidney_volume = "Height Adjusted Left Kidney Volume") %>%
  mutate(height_adj_right_kidney_volume = "Height Adjusted Right Kidney Volume") %>%
  mutate(m_i = paste0("M/I")) %>%
  mutate(ffa_suppression_1 = "FFA Suppression P1") %>%
  mutate(ffa_suppression_2 = "FFA Suppression P2")
var_R <- var_R[intersect(names(M_table_p), names(var_R))]
var_R[setdiff(names(M_table_p), names(var_R))] <- "p-value"
Hmisc::label(M_table_p) = var_R[match(names(M_table_p), names(var_R))]
var_R <- as.data.frame(py$var_dict)
var_R %<>%
  mutate(m_i_row = paste0("M/I")) %>%
  mutate(p2_raw_leanm_row = p2_raw_leanm) %>%
  mutate(dexa_fat_kg_row = dexa_fat_kg) %>%
  mutate(dexa_lean_kg_row = dexa_lean_kg) %>%
  mutate(dexa_est_vat_row = dexa_est_vat) %>%
  mutate(ltot_k1_w_cyst = paste0("Left Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k2_w_cyst = paste0("Left Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k1_wo_cyst = paste0("Left Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k2_wo_cyst = paste0("Left Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k1_w_cyst = paste0("Right Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k2_w_cyst = paste0("Right Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k1_wo_cyst = paste0("Right Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k2_wo_cyst = paste0("Right Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
  mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
  mutate(avg_k1 = paste0("Average cortex tracer uptake (k1)")) %>%
  mutate(avg_k2 = paste0("Average cortex oxidation (k2)")) %>%
  mutate(avg_vb = paste0("Average cortex vb")) %>%
  mutate(avg_k1_w_cyst = paste0("Average cortex perfusion with cyst (K1)")) %>%
  mutate(avg_k1_wo_cyst = paste0("Average cortex perfusion w/o cyst(K1)")) %>%
  mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (K2)")) %>%
  mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
  mutate(k2_f = "k2/f") %>%
  mutate(k2_k1 = "k2/k1") %>%
  mutate(ffa_suppression_1_row = "FFA Suppression P1") %>%
  mutate(ffa_suppression_2_row = "FFA Suppression P2")

row.names(M_table_p) <- var_R[match(row.names(M_table_p), names(var_R))]
correlation_2 <- M_table_p 
write.csv(correlation_2, "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/correlation_2.csv", row.names = T)
```

# Correlation matrix by PKD

```{r}
# Matrix table with p-values
kable(M_table_p, 
      col.names = rep(c("Correlation", "p-value"), ncol(M_table_p)/2), 
      caption = "Correlation", 
      digits = c(1,4),
      align = rep("r", ncol(M_table_p))) %>%
  kable_styling(bootstrap_options = c("hover"),
            full_width = F, 
            fixed_thead = T) %>%
  add_header_above(header = c(" "=1, 
                     setNames(2, Hmisc::label(M_table_p)[1]), 
                     setNames(2, Hmisc::label(M_table_p)[3]), 
                     setNames(2, Hmisc::label(M_table_p)[5]), 
                     setNames(2, Hmisc::label(M_table_p)[7]), 
                     setNames(2, Hmisc::label(M_table_p)[9]), 
                     setNames(2, Hmisc::label(M_table_p)[11]), 
                     setNames(2, Hmisc::label(M_table_p)[13]), 
                     setNames(2, Hmisc::label(M_table_p)[15]), 
                     setNames(2, Hmisc::label(M_table_p)[17]), 
                     setNames(2, Hmisc::label(M_table_p)[19]), 
                     setNames(2, Hmisc::label(M_table_p)[21]), 
                     setNames(2, Hmisc::label(M_table_p)[23]),
                     setNames(2, Hmisc::label(M_table_p)[25]),
                     setNames(2, Hmisc::label(M_table_p)[27]),
                     setNames(2, Hmisc::label(M_table_p)[29]))) %>%
  column_spec(1, width_min = "5in", border_right=T, bold = T) %>%
  column_spec(3, border_right=T) %>%
  column_spec(5, border_right=T) %>%
  column_spec(7, border_right=T) %>%
  column_spec(9, border_right=T) %>%
  column_spec(11, border_right=T) %>%
  column_spec(13, border_right=T) %>%
  column_spec(15, border_right=T) %>%
  column_spec(17, border_right=T) %>%
  column_spec(19, border_right=T) %>%
  column_spec(21, border_right=T) %>%
  column_spec(23, border_right=T) %>%
  column_spec(25, border_right=T) %>%
  column_spec(27, border_right=T) %>%
  column_spec(29, border_right=T)  
```

```{r include=F}
# Correlation matrix by HC
df_HC <- df_R %>%
  filter(group == "HC")

# Select relevant variables for the correlation matrix
df_R_correlation <- df_HC %>%
  mutate(p2_raw_leanm_row = p2_raw_leanm, 
         m_i_row = m_i,
         dexa_fat_kg_row = dexa_fat_kg, 
         dexa_lean_kg_row = dexa_lean_kg,
         dexa_est_vat_row = dexa_est_vat,
         ffa_suppression_1_row = ffa_suppression_1,
         ffa_suppression_2_row = ffa_suppression_2) %>%
  select(p2_raw_leanm, 
         m_i, 
         dexa_fat_kg, 
         dexa_lean_kg, 
         dexa_est_vat, 
         height_adj_total_kidney_volume, 
         right_kidney_volume_ml, 
         height_adj_right_kidney_volume, 
         left_kidney_volume_ml, 
         height_adj_left_kidney_volume, 
         total_liver_volume_ml, 
         total_cyst_volume_ml, 
         total_number_of_cysts, 
         ffa_suppression_1, 
         ffa_suppression_2,  
         p2_raw_leanm_row, 
         m_i_row, 
         dexa_fat_kg_row, 
         dexa_lean_kg_row, 
         dexa_est_vat_row, 
         lc_f, 
         rc_f,
         lc_vb, 
         rc_vb, 
         lc_k1, 
         rc_k1, 
         lc_k2, 
         rc_k2,
         ltot_k1_w_cyst,	
         ltot_k1_wo_cyst,
         rtot_k1_w_cyst,	
         rtot_k1_wo_cyst,	
         ltot_k2_w_cyst,	
         ltot_k2_wo_cyst, 
         rtot_k2_w_cyst,
         rtot_k2_wo_cyst, 
         avg_f, 
         avg_k1, 
         avg_k2_w_cyst, 
         avg_k2_wo_cyst, 
         k2_f, 
         k2_k1, 
         ffa_suppression_1_row, 
         ffa_suppression_2_row
         )

# Correlation matrix in table format
M_table <- as.data.frame(cor(y = df_R_correlation[,1:15],
                             x=df_R_correlation[,16:ncol(df_R_correlation)], 
                             use = "pairwise.complete.obs")) %>%
  select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat,
         height_adj_total_kidney_volume, right_kidney_volume_ml,
         height_adj_right_kidney_volume, left_kidney_volume_ml,
         height_adj_left_kidney_volume, total_liver_volume_ml, 
         total_cyst_volume_ml, total_number_of_cysts, 
         ffa_suppression_1, ffa_suppression_2)

# Compute p-values to add to matrix table
res2 <- rcorr(as.matrix(df_R_correlation))
corr_pval <- as.data.frame(res2$P) %>%
  select(starts_with("p")|
           starts_with("m_i")|
           starts_with("ffa")|
           starts_with("dexa")|
           starts_with("total")|
           starts_with("height")|
           starts_with("right")|
           starts_with("left")) %>%
  sapply(pvalue) 
corr_pval <- as.data.frame(corr_pval) %>% 
  select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat, 
         height_adj_total_kidney_volume, right_kidney_volume_ml, 
         height_adj_right_kidney_volume, left_kidney_volume_ml, 
         height_adj_left_kidney_volume, total_liver_volume_ml, 
         total_cyst_volume_ml, total_number_of_cysts, 
         ffa_suppression_1, ffa_suppression_2)
colnames(corr_pval) <- rep("p_value", ncol(corr_pval))

# Add p-values to matrix table
corr_pval = corr_pval[16:nrow(corr_pval),]
M_table_p <- bind_cols(M_table, corr_pval) %>%
  relocate(map(1:ncol(M_table), ~ c(.x, .x + ncol(M_table))) %>% unlist())

# Label variables
var_R <- as.data.frame(py$var_dict)
var_R <- var_R %>%  
  mutate(height_adj_total_kidney_volume = "Height Adjusted Total Kidney Volume") %>%
  mutate(height_adj_left_kidney_volume = "Height Adjusted Left Kidney Volume") %>%
  mutate(height_adj_right_kidney_volume = "Height Adjusted Right Kidney Volume") %>%
  mutate(m_i = paste0("M/I")) %>%
  mutate(ffa_suppression_1 = "FFA Suppression P1") %>%
  mutate(ffa_suppression_2 = "FFA Suppression P2")
var_R <- var_R[intersect(names(M_table_p), names(var_R))]
var_R[setdiff(names(M_table_p), names(var_R))] <- "p-value"
Hmisc::label(M_table_p) = var_R[match(names(M_table_p), names(var_R))]
var_R <- as.data.frame(py$var_dict)
var_R %<>%
  mutate(m_i_row = paste0("M/I")) %>%
  mutate(p2_raw_leanm_row = p2_raw_leanm) %>%
  mutate(dexa_fat_kg_row = dexa_fat_kg) %>%
  mutate(dexa_lean_kg_row = dexa_lean_kg) %>%
  mutate(dexa_est_vat_row = dexa_est_vat) %>%
  mutate(ltot_k1_w_cyst = paste0("Left Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k2_w_cyst = paste0("Left Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k1_wo_cyst = paste0("Left Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
  mutate(ltot_k2_wo_cyst = paste0("Left Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k1_w_cyst = paste0("Right Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k2_w_cyst = paste0("Right Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k1_wo_cyst = paste0("Right Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
  mutate(rtot_k2_wo_cyst = paste0("Right Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
  mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
  mutate(avg_k1 = paste0("Average cortex tracer uptake (k1)")) %>%
  mutate(avg_k2 = paste0("Average cortex oxidation (k2)")) %>%
  mutate(avg_vb = paste0("Average cortex vb")) %>%
  mutate(avg_k1_w_cyst = paste0("Average cortex perfusion with cyst (K1)")) %>%
  mutate(avg_k1_wo_cyst = paste0("Average cortex perfusion w/o cyst(K1)")) %>%
  mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (K2)")) %>%
  mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
  mutate(k2_f = "k2/f") %>%
  mutate(k2_k1 = "k2/k1") %>%
  mutate(ffa_suppression_1_row = "FFA Suppression P1") %>%
  mutate(ffa_suppression_2_row = "FFA Suppression P2")

row.names(M_table_p) <- var_R[match(row.names(M_table_p), names(var_R))]
correlation_3 <- M_table_p 
write.csv(correlation_3, "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/correlation_3.csv", row.names = T)
```

# Correlation matrix by HC

```{r}
# Matrix table with p-values
kable(M_table_p, 
      col.names = rep(c("Correlation", "p-value"), ncol(M_table_p)/2), 
      caption = "Correlation", 
      digits = c(1,4),
      align = rep("r", ncol(M_table_p))) %>%
  kable_styling(bootstrap_options = c("hover"),
            full_width = F, 
            fixed_thead = T) %>%
  add_header_above(header = c(" "=1, 
                     setNames(2, Hmisc::label(M_table_p)[1]), 
                     setNames(2, Hmisc::label(M_table_p)[3]), 
                     setNames(2, Hmisc::label(M_table_p)[5]), 
                     setNames(2, Hmisc::label(M_table_p)[7]), 
                     setNames(2, Hmisc::label(M_table_p)[9]), 
                     setNames(2, Hmisc::label(M_table_p)[11]), 
                     setNames(2, Hmisc::label(M_table_p)[13]), 
                     setNames(2, Hmisc::label(M_table_p)[15]), 
                     setNames(2, Hmisc::label(M_table_p)[17]), 
                     setNames(2, Hmisc::label(M_table_p)[19]), 
                     setNames(2, Hmisc::label(M_table_p)[21]), 
                     setNames(2, Hmisc::label(M_table_p)[23]),
                     setNames(2, Hmisc::label(M_table_p)[25]),
                     setNames(2, Hmisc::label(M_table_p)[27]),
                     setNames(2, Hmisc::label(M_table_p)[29]))) %>%
  column_spec(1, width_min = "5in", border_right=T, bold = T) %>%
  column_spec(3, border_right=T) %>%
  column_spec(5, border_right=T) %>%
  column_spec(7, border_right=T) %>%
  column_spec(9, border_right=T) %>%
  column_spec(11, border_right=T) %>%
  column_spec(13, border_right=T) %>%
  column_spec(15, border_right=T) %>%
  column_spec(17, border_right=T) %>%
  column_spec(19, border_right=T) %>%
  column_spec(21, border_right=T) %>%
  column_spec(23, border_right=T) %>%
  column_spec(25, border_right=T) %>%
  column_spec(27, border_right=T) %>%
  column_spec(29, border_right=T)  
```

# Correlation matrix for PET

```{r include=F}
# Select relevant variables for the correlation matrix
df_R_correlation <- df_R %>%
  filter(group != "HC") %>%
  mutate(avg_f_row = avg_f, 
         avg_k1_row = avg_k1,
         avg_k2_w_cyst_row = avg_k2_w_cyst, 
         avg_k2_wo_cyst_row = avg_k2_wo_cyst,
         k2_f_row = k2_f,
         k2_k1_row = k2_k1) %>%
  select(
         avg_f, 
         avg_k1, 
         avg_k2_w_cyst, 
         avg_k2_wo_cyst, 
         k2_f, 
         k2_k1,
         avg_f_row, 
         avg_k1_row, 
         avg_k2_w_cyst_row, 
         avg_k2_wo_cyst_row, 
         k2_f_row, 
         k2_k1_row
         )

# Correlation matrix in table format
M_table <- as.data.frame(cor(y = df_R_correlation[,1:6],
                             x=df_R_correlation[,7:ncol(df_R_correlation)], 
                             use = "pairwise.complete.obs")) %>%
  select(avg_f, 
         avg_k1, 
         avg_k2_w_cyst, 
         avg_k2_wo_cyst, 
         k2_f, 
         k2_k1)

# Compute p-values to add to matrix table
res2 <- rcorr(as.matrix(df_R_correlation))
corr_pval <- as.data.frame(res2$P) %>%
  select(avg_f, 
         avg_k1, 
         avg_k2_w_cyst, 
         avg_k2_wo_cyst, 
         k2_f, 
         k2_k1) %>%
  sapply(pvalue) 
corr_pval <- as.data.frame(corr_pval) %>% 
  select(avg_f, 
         avg_k1, 
         avg_k2_w_cyst, 
         avg_k2_wo_cyst, 
         k2_f, 
         k2_k1)
colnames(corr_pval) <- rep("p_value", ncol(corr_pval))

# Add p-values to matrix table
corr_pval = corr_pval[7:nrow(corr_pval),]
M_table_p <- bind_cols(M_table, corr_pval) %>%
  relocate(map(1:ncol(M_table), ~ c(.x, .x + ncol(M_table))) %>% unlist())

# Label variables
var_R <- as.data.frame(py$var_dict)
var_R %<>%
  mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
  mutate(avg_k1 = paste0("Average cortex tracer uptake (k1)")) %>%
  mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (K2)")) %>%
  mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
  mutate(k2_f = "k2/f") %>%
  mutate(k2_k1 = "k2/k1") 
var_R <- var_R[intersect(names(M_table_p), names(var_R))]
var_R[setdiff(names(M_table_p), names(var_R))] <- "p-value"
Hmisc::label(M_table_p) = var_R[match(names(M_table_p), names(var_R))]
var_R <- as.data.frame(py$var_dict)
var_R %<>%
  mutate(avg_f_row = paste0("Average cortex perfusion (F)")) %>%
  mutate(avg_k1_row = paste0("Average cortex tracer uptake (k1)")) %>%
  mutate(avg_k2_w_cyst_row = paste0("Average cortex perfusion with cyst (K2)")) %>%
  mutate(avg_k2_wo_cyst_row = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
  mutate(k2_f_row = "k2/f") %>%
  mutate(k2_k1_row = "k2/k1")
row.names(M_table_p) <- var_R[match(row.names(M_table_p), names(var_R))]
correlation_3 <- M_table_p 
write.csv(correlation_3, "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/correlation_3.csv", row.names = T)
```

```{r}
# Matrix table with p-values
kable(M_table_p, 
      col.names = rep(c("Correlation", "p-value"), ncol(M_table_p)/2), 
      caption = "Correlation", 
      digits = c(1,4),
      align = rep("r", ncol(M_table_p))) %>%
  kable_styling(bootstrap_options = c("hover"),
            full_width = F, 
            fixed_thead = T) %>%
  add_header_above(header = c(" "=1, 
                     setNames(2, Hmisc::label(M_table_p)[1]), 
                     setNames(2, Hmisc::label(M_table_p)[3]), 
                     setNames(2, Hmisc::label(M_table_p)[5]), 
                     setNames(2, Hmisc::label(M_table_p)[7]), 
                     setNames(2, Hmisc::label(M_table_p)[9]), 
                     setNames(2, Hmisc::label(M_table_p)[11]))) %>%
  column_spec(1, width_min = "5in", border_right=T, bold = T) %>%
  column_spec(3, border_right=T) %>%
  column_spec(5, border_right=T) %>%
  column_spec(7, border_right=T) %>%
  column_spec(9, border_right=T) %>%
  column_spec(11, border_right=T) 
```

# Correlation Scatter Plots

## Body Fat

```{r warning=F}
# Body Fat vs. Avg Cortex F
ggplot(df_R, aes(dexa_fat_kg, avg_f)) +
  ggtitle("Body fat vs. avg cortex F (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) + 
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

ggplot(df_HC, aes(dexa_fat_kg, avg_f)) +
  ggtitle("Body fat vs. avg cortex F (HC only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='deeppink')

ggplot(df_PKD, aes(dexa_fat_kg, avg_f)) +
  ggtitle("Body fat vs. avg cortex F (PKD only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='steelblue')

# Body Fat vs. Avg Cortex k1
ggplot(df_R, aes(dexa_fat_kg, avg_k1)) +
  ggtitle("Body fat vs. avg cortex k1 (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

ggplot(df_HC, aes(dexa_fat_kg, avg_k1)) +
  ggtitle("Body fat vs. avg cortex k1 (HC only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='deeppink')

ggplot(df_PKD, aes(dexa_fat_kg, avg_k1)) +
  ggtitle("Body fat vs. avg cortex k1 (PKD only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='steelblue')

# Body Fat vs. k2/f
ggplot(df_R, aes(dexa_fat_kg, k2_f)) +
  ggtitle("Body fat vs. k2/f (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

ggplot(df_HC, aes(dexa_fat_kg, k2_f)) +
  ggtitle("Body fat vs. k2/f (HC only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='deeppink')

ggplot(df_PKD, aes(dexa_fat_kg, k2_f)) +
  ggtitle("Body fat vs. k2/f (PKD only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='steelblue')
```

## Body Fat

```{r warning=F}
# Body Fat vs. Avg Cortex F
ggplot(df_R, aes(dexa_est_vat, avg_f)) +
  ggtitle("Estimated VAT vs. avg cortex F (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) + 
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

ggplot(df_HC, aes(dexa_est_vat, avg_f)) +
  ggtitle("Estimated VAT vs. avg cortex F (HC only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='deeppink')

ggplot(df_PKD, aes(dexa_est_vat, avg_f)) +
  ggtitle("Estimated VAT vs. avg cortex F (PKD only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='steelblue')

# Body Fat vs. Avg Cortex k1
ggplot(df_R, aes(dexa_est_vat, avg_k1)) +
  ggtitle("Estimated VAT vs. avg cortex k1 (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

ggplot(df_HC, aes(dexa_est_vat, avg_k1)) +
  ggtitle("Estimated VAT vs. avg cortex k1 (HC only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='deeppink')

ggplot(df_PKD, aes(dexa_est_vat, avg_k1)) +
  ggtitle("Estimated VAT vs. avg cortex k1 (PKD only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='steelblue')

# Body Fat vs. k2/f
ggplot(df_R, aes(dexa_est_vat, k2_f)) +
  ggtitle("Estimated VAT vs. k2/f (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

ggplot(df_HC, aes(dexa_est_vat, k2_f)) +
  ggtitle("Estimated VAT vs. k2/f (HC only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='deeppink')

ggplot(df_PKD, aes(dexa_est_vat, k2_f)) +
  ggtitle("Estimated VAT vs. k2/f (PKD only)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values='steelblue')
```

# Voxelwise Activity Analysis

*Missing excluded*

## K1 activity

```{r layout="[[1,1]]"}
# Data subset of voxelwise for heatmap
vw_df <- df_R_all %>%
  rowwise() %>%
  mutate(avg_k1_w_cyst_low = mean(c(rtot_k1_w_cyst_percent_low, ltot_k1_w_cyst_percent_low), na.rm = T)) %>%
  mutate(avg_k1_w_cyst_avg = mean(c(rtot_k1_w_cyst_percent_avg, ltot_k1_w_cyst_percent_avg), na.rm = T)) %>%
  mutate(avg_k1_w_cyst_high = mean(c(rtot_k1_w_cyst_percent_high, ltot_k1_w_cyst_percent_high), na.rm = T)) %>%
  mutate(avg_k1_wo_cyst_low = mean(c(rtot_k1_wo_cyst_percent_low, ltot_k1_wo_cyst_percent_low), na.rm = T)) %>%
  mutate(avg_k1_wo_cyst_avg = mean(c(rtot_k1_wo_cyst_percent_avg, ltot_k1_wo_cyst_percent_avg), na.rm = T)) %>%
  mutate(avg_k1_wo_cyst_high = mean(c(rtot_k1_wo_cyst_percent_high, ltot_k1_wo_cyst_percent_high), na.rm = T)) %>%
  mutate(avg_k2_w_cyst_low = mean(c(rtot_k2_w_cyst_percent_low, ltot_k2_w_cyst_percent_low), na.rm = T)) %>%
  mutate(avg_k2_w_cyst_avg = mean(c(rtot_k2_w_cyst_percent_avg, ltot_k2_w_cyst_percent_avg), na.rm = T)) %>%
  mutate(avg_k2_w_cyst_high = mean(c(rtot_k2_w_cyst_percent_high, ltot_k2_w_cyst_percent_high), na.rm = T)) %>%
  mutate(avg_k2_wo_cyst_low = mean(c(rtot_k2_wo_cyst_percent_low, ltot_k2_wo_cyst_percent_low), na.rm = T)) %>%
  mutate(avg_k2_wo_cyst_avg = mean(c(rtot_k2_wo_cyst_percent_avg, ltot_k2_wo_cyst_percent_avg), na.rm = T)) %>%
  mutate(avg_k2_wo_cyst_high = mean(c(rtot_k2_wo_cyst_percent_high, ltot_k2_wo_cyst_percent_high), na.rm = T)) %>%
  select(record_id, group, avg_k1_w_cyst_low,	avg_k1_w_cyst_avg,	avg_k1_w_cyst_high,
         avg_k1_wo_cyst_low,	avg_k1_wo_cyst_avg,	avg_k1_wo_cyst_high,
         avg_k2_w_cyst_low,	avg_k2_w_cyst_avg,	avg_k2_w_cyst_high,
         avg_k2_wo_cyst_low,	avg_k2_wo_cyst_avg,	avg_k2_wo_cyst_high) %>%
  mutate(avg_k1_w_cyst_ratio = avg_k1_w_cyst_low / avg_k1_w_cyst_avg) %>%
  mutate(avg_k1_wo_cyst_ratio = avg_k1_wo_cyst_low / avg_k1_wo_cyst_avg) %>%
  mutate(avg_k2_w_cyst_ratio = avg_k2_w_cyst_low / avg_k2_w_cyst_avg) %>%
  mutate(avg_k2_wo_cyst_ratio = avg_k2_wo_cyst_low / avg_k2_wo_cyst_avg)

# Subset of Average Total Kidney K1 w cyst
vw_df <- vw_df %>%
  arrange(avg_k1_w_cyst_low)

vw_df_k1_w_cyst <- vw_df %>%
  select(avg_k1_w_cyst_low,	avg_k1_w_cyst_avg,	avg_k1_w_cyst_high) %>%
  filter(!is.na(avg_k1_w_cyst_low)) %>%
  rename("Low" = "avg_k1_w_cyst_low",
           "Average" = "avg_k1_w_cyst_avg",
         "High" = "avg_k1_w_cyst_high")

# Heatmap of voxelwise
png("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/superheat1.png", height = 500, width = 800)
superheat(vw_df_k1_w_cyst, 
          title = "Average Total Kidney K1 Activity (Including Cysts)",
          scale = F,
          membership.rows = vw_df$group[!is.na(vw_df$avg_k1_w_cyst_low)],
          heat.na.col = "white",
          heat.pal = c("#fdfbfb", "#cc0000"),
          heat.pal.values = c(0, 1),
          grid.hline.col = "black",
          grid.vline.col = "black",
          left.label.col = c("white","white"),
          bottom.label.col = c("white","white", "white"),
          left.label.text.size = 4,
          bottom.label.text.size = 4,
          grid.hline = T,
          grid.vline = T,
          )
dev.off()

# Subset of Average Total Kidney K1 wo cyst
vw_df <- vw_df %>%
  arrange(avg_k1_wo_cyst_low)

vw_df_k1_wo_cyst <- vw_df %>%
  select(avg_k1_wo_cyst_low,	avg_k1_wo_cyst_avg,	avg_k1_wo_cyst_high) %>%
  filter(!is.na(avg_k1_wo_cyst_low)) %>%
  rename("Low" = "avg_k1_wo_cyst_low",
           "Average" = "avg_k1_wo_cyst_avg",
         "High" = "avg_k1_wo_cyst_high")

# Heatmap of voxelwise
png("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/superheat2.png", height = 500, width = 800)
superheat(vw_df_k1_wo_cyst, 
          title = "Average Total Kidney K1 Activity (Excluding Cysts)",
          scale = F,
          membership.rows = vw_df$group[!is.na(vw_df$avg_k1_wo_cyst_low)],
          heat.na.col = "white",
          heat.pal = c("#fdfbfb", "#cc0000"),
          heat.pal.values = c(0, 1),
          grid.hline.col = "black",
          grid.vline.col = "black",
          left.label.col = c("white","white"),
          bottom.label.col = c("white","white", "white"),
          left.label.text.size = 4,
          bottom.label.text.size = 4,
          grid.hline = T,
          grid.vline = T
          )
dev.off()
```

## K2 activity

```{r layout="[[1,1]]"}
# Subset of Average Total Kidney K2 w cyst
vw_df <- vw_df %>%
  arrange(avg_k2_w_cyst_low)

vw_df_k2_w_cyst <- vw_df %>%
  select(avg_k2_w_cyst_low,	avg_k2_w_cyst_avg,	avg_k2_w_cyst_high) %>%
  filter(!is.na(avg_k2_w_cyst_low)) %>%
  rename("Low" = "avg_k2_w_cyst_low",
           "Average" = "avg_k2_w_cyst_avg",
         "High" = "avg_k2_w_cyst_high")

# Heatmap of voxelwise
png("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/superheat3.png", height = 500, width = 800)
superheat(vw_df_k2_w_cyst, 
          title = "Average Total Kidney K2 Activity (Including Cysts)",
          scale = F,
          membership.rows = vw_df$group[!is.na(vw_df$avg_k2_w_cyst_low)],
          heat.na.col = "white",
          heat.pal = c("#fdfbfb", "#cc0000"),
          heat.pal.values = c(0, 1),
          grid.hline.col = "black",
          grid.vline.col = "black",
          left.label.col = c("white","white"),
          bottom.label.col = c("white","white", "white"),
          left.label.text.size = 4,
          bottom.label.text.size = 4,
          grid.hline = T,
          grid.vline = T
          )
dev.off()

# Subset of Average Total Kidney K2 wo cyst
vw_df <- vw_df %>%
  arrange(avg_k2_wo_cyst_low)

vw_df_k2_wo_cyst <- vw_df %>%
  select(avg_k2_wo_cyst_low,	avg_k2_wo_cyst_avg,	avg_k2_wo_cyst_high) %>%
  filter(!is.na(avg_k2_wo_cyst_low)) %>%
  rename("Low" = "avg_k2_wo_cyst_low",
           "Average" = "avg_k2_wo_cyst_avg",
         "High" = "avg_k2_wo_cyst_high")

# Heatmap of voxelwise
png("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/superheat4.png", height = 500, width = 800)
superheat(vw_df_k2_wo_cyst, 
          title = "Average Total Kidney K2 Activity (Excluding Cysts)",
          scale = F,
          membership.rows = vw_df$group[!is.na(vw_df$avg_k2_wo_cyst_low)],
          heat.na.col = "white",
          heat.pal = c("#fdfbfb", "#cc0000"),
          heat.pal.values = c(0, 1),
          grid.hline.col = "black",
          grid.vline.col = "black",
          left.label.col = c("white","white"),
          bottom.label.col = c("white","white", "white"),
          left.label.text.size = 4,
          bottom.label.text.size = 4,
          grid.hline = T,
          grid.vline = T
          )
dev.off()
```

```{r}
############ RATIO ############
write.csv(vw_df, "./penguin_voxelwise_clean.csv", row.names=F)
# Subset of Average Total Kidney K1 w cyst
vw_df <- vw_df %>%
  arrange(avg_k1_w_cyst_ratio)

vw_df_k1_w_cyst_ratio <- vw_df %>%
  select(avg_k1_w_cyst_ratio,	avg_k1_w_cyst_avg,	avg_k1_w_cyst_high) %>%
  filter(!is.na(avg_k1_w_cyst_ratio)) %>%
  rename("Low_Ratio" = "avg_k1_w_cyst_ratio",
           "Average" = "avg_k1_w_cyst_avg",
         "High" = "avg_k1_w_cyst_high")
```

```{r}
# F adjusting for BMI
lm_f_group <- lm(avg_f ~ group + bmi, data = subset(df_R, group != "OC"))
summary(lm_f_group)

# K1 adjusting for BMI
lm_k1_group <- lm(avg_k1 ~ group + bmi, data = subset(df_R, group != "OC"))
summary(lm_k1_group)

# K2 adjusting for BMI
lm_k2_w_cyst_group <- lm(avg_k2_w_cyst ~ group + bmi, data = subset(df_R, group != "OC"))
summary(lm_k2_w_cyst_group)

# K2 adjusting for BMI
lm_k2_wo_cyst_group <- lm(avg_k2_wo_cyst ~ group + bmi, data = subset(df_R, group != "OC"))
summary(lm_k2_wo_cyst_group)

# K2 adjusting for F
lm_f_k2_w_cyst_group <- lm(avg_k2_w_cyst ~ group + avg_f, data = subset(df_R, group != "OC"))
summary(lm_f_k2_w_cyst_group)

# K2 adjusting for F
lm_f_k2_wo_cyst_group <- lm(avg_k2_wo_cyst ~ group + avg_f, data = subset(df_R, group != "OC"))
summary(lm_f_k2_wo_cyst_group)

# K2/F adjusting for BMI
lm_k2_f_group <- lm(k2_f ~ group + bmi, data = subset(df_R, group != "OC"))
summary(lm_k2_f_group)


# Insulin sensitivity adjusting for BMI
lm_result_bmi <- lm(p1_raw_m ~ group + bmi, data = df_R)
lm_result <- lm(p1_raw_m ~ group, data = df_R)

summary(lm_result_bmi)
lsmeans(lm_result_bmi, specs="group", covariate="bmi")

lm_result_2_bmi <- lm(p2_raw_m ~ group + bmi, data = df_R)
lm_result_2 <- lm(p2_raw_m ~ group, data = df_R)
summary(lm_result_2_bmi)
lsmeans(lm_result_2_bmi, specs="group", covariate="bmi")

# F adjusting for BMI
lm_f_VAT <- lm(avg_f ~ dexa_est_vat + bmi, data = df_R)
summary(lm_f_VAT)

# K1 adjusting for BMI
lm_k1_VAT <- lm(avg_k1 ~ dexa_est_vat + bmi, data = df_R)
summary(lm_k1_VAT)

# HtTKV adjusting for BMI
lm_httkv_VAT <- lm(height_adj_total_kidney_volume ~ dexa_est_vat + bmi, data = df_R)
summary(lm_httkv_VAT)

# K2/f adjusting for BMI
lm_k2_f_VAT <- lm(k2_f ~ dexa_est_vat + bmi, data = df_R)
summary(lm_k2_f_VAT)
```

# Dot plots

```{r warning = F}
# Merge OC groups
df_R <- df_R %>%
  rbind(df_R_OC) %>%
  mutate(group = case_when(group=="HC" ~ "LC", T~group))
# kidney tracer uptake, cortical perfusion, cortical k2/F and k2/k1, average kidney oxidation rate
var_R <- as.data.frame(py$var_dict)
var_R %<>% 
  mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
  mutate(avg_k1 = paste0("Average cortex tracer uptake (k1)")) %>%
  mutate(avg_k2 = paste0("Average cortex oxidation (k2)")) %>%
  mutate(avg_vb = paste0("Average cortex vb")) %>%
  mutate(avg_k1_w_cyst = paste0("Average cortex perfusion with cyst (K1)")) %>%
  mutate(avg_k1_wo_cyst = paste0("Average cortex perfusion w/o cyst (K1)")) %>%
  mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (k2)")) %>%
  mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst (k2)")) %>%
  mutate(k2_f = "k2/f") %>%
  mutate(k2_k1 = "k2/k1")

var_R <- var_R[intersect(names(df_R), names(var_R))]
var_R[setdiff(names(df_R), names(var_R))] <- ""
Hmisc::label(df_R) = var_R[match(names(df_R), names(var_R))]

f_dot <- ggplot(df_R, aes(x = avg_f, fill = group)) +
  geom_histogram(stackgroups = T, binpositions = "all", binaxis = "x", stackdir = "up", aes(fill=group),
                 show.legend = F) +
  labs(x=label(df_R$avg_f), y="Count") +
  theme_bw() +
  scale_fill_brewer(palette = "Paired")

k1_dot <- ggplot(df_R, aes(x = avg_k1)) +
  geom_histogram(stackgroups = T, binpositions = "all", binaxis = "x", stackdir = "up", aes(fill=group),
                 show.legend = F) +
  labs(x=label(df_R$avg_k1), y="Count") +
  theme_bw() +
  scale_fill_brewer(palette = "Paired")

k2_dot <- ggplot(df_R, aes(x = avg_k2)) +
  geom_histogram(stackgroups = T, binpositions = "all", binaxis = "x", stackdir = "up", aes(fill=group),
                 show.legend = F) +
  labs(x=label(df_R$avg_k2), y="Count") +
  theme_bw() +
  scale_fill_brewer(palette = "Paired")

k2_wo_cyst_dot <- ggplot(df_R, aes(x = avg_k2_wo_cyst)) +
  geom_histogram(stackgroups = T, binpositions = "all", binaxis = "x", stackdir = "up", aes(fill=group),
                 show.legend = F) +
  labs(x=label(df_R$avg_k2_wo_cyst), y="Count") +
  theme_bw() +
  scale_fill_brewer(palette = "Paired")

k2_f_dot <- ggplot(df_R, aes(x = k2_f))  + 
  geom_histogram(stackgroups = T, binpositions = "all", binaxis = "x", stackdir = "up", aes(fill=group),
                 show.legend = F) +
  labs(x=label(df_R$k2_f), y="Count") +
  theme_bw() +
  scale_fill_brewer(palette = "Paired")

k2_k1_dot <- ggplot(df_R, aes(x = k2_k1)) +
  geom_histogram(stackgroups = T, binpositions = "all", binaxis = "x", stackdir = "up", aes(fill=group)) +
  labs(x=label(df_R$k2_k1), y="Count") +
  theme_bw()  +
  scale_fill_brewer(palette = "Paired")+
  theme(legend.position = c(0.9, 0.8))

arrange <- ggarrange(f_dot, k1_dot, k2_dot,
                     k2_wo_cyst_dot, k2_f_dot, k2_k1_dot,
                     ncol = 2, nrow = 3, common.legend = T)
ggsave("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/dotplots.png", arrange)
```
