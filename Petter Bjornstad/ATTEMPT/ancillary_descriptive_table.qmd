---
title: "ATTEMPT Ancillary"
author: "Ye Ji Choi"
date: "`r lubridate::today()`"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
---

How many genes upregulated/downregulated placebo pre/post, dapa pre/post (in PT, PT123, PT45)
Top 200 DEGâ€™s
Censor the outlier
Dot plot

```{r libraries, message = F, warning=F}
#| include: false
library(Seurat)
library(future)
library(tidyverse)
library(colorspace)
library(patchwork)
library(ggdendro)
library(cowplot)
library(ggpubr)
library(rstatix)
library(arsenal)
library(Biobase)
library(ReactomeGSA)
library(GSEABase)
library(msigdbr)
library(kableExtra)
library(knitr)
library(slingshot); library(SingleCellExperiment)
library(REDCapR)
library(edgeR)
library(data.table)
```

```{r load-data, echo = F, include = F}
# Load dictionary function and file
source("/home/choiyej/Documents/CHCO-Code/Petter Bjornstad/Resources/YC/R Functions/label_harmonized_function.R")
source("/home/choiyej/Documents/CHCO-Code/Petter Bjornstad/CROCODILE/crocodile_functions.R")
dat <- readRDS(file = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/ATTEMPT/Data Clean/attempt_clinical_data.RDS")
so_attempt_pt <- readRDS(file = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/ATTEMPT/Data Clean/attempt_so_pt.RDS")
all_data <- readRDS(file = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/ATTEMPT/Data Clean/attempt_pb.RDS") %>%
  arrange(treatment, visit)
```

## Descriptive Table

```{r echo = F, results='asis'}
summary(tableby(visit ~ age + sex + race + ethnicity + diabetes_duration + vitals_height + vitals_weight + vitals_bmi + vitals_sbp + vitals_dbp + vitals_pulse + vitals_rr + vitals_temp +  pt + inr + ptt + bun + abo + abo_rh + hgb + hct + plt + creat , data = dat, strata = treatment), test = F, total = F)

summary(tableby(treatment ~ age + sex + race + ethnicity + diabetes_duration + vitals_height + vitals_weight + vitals_bmi + vitals_sbp + vitals_dbp + vitals_pulse + vitals_rr + vitals_temp +  pt + inr + ptt + bun + abo + abo_rh + hgb + hct + plt + creat , data = dat, strata = visit), test = F, total = F)
```

## scRNA Data

```{r echo = F}
## Parallel processing
plan(multisession, workers = 16)
options(future.globals.maxSize=2e9)

so_attempt <- readRDS("/home/choiyej/Documents/Local data/PB_attempt_harmony_rpca_Sept2024.RDS")
so_attempt_meta <- so_attempt@meta.data %>%
  mutate(subject_id = Subject.ID,
         visit = case_when(Visit == "BL" ~ "PRE", 
                           Visit == "4M" ~ "POST"))
so_attempt_meta <- left_join(so_attempt_meta, dat, by = c("subject_id", "visit"))
rownames(so_attempt_meta) <- so_attempt_meta$barcode
so_attempt <- AddMetaData(so_attempt, so_attempt_meta)
so_attempt$celltype_pt <- ifelse(grepl("PT-", so_attempt$celltype),
                         "PT", as.character(so_attempt$celltype))
```

```{r echo = F}
gc()
plan(sequential)
options(future.globals.maxSize = 3000 * 1024^3)
so_attempt <- NormalizeData(so_attempt)
so_attempt <- ScaleData(so_attempt)
ElbowPlot(so_attempt)
so_attempt <- RunPCA(so_attempt, ncomponents = 10, features = VariableFeatures(object = so_attempt))
so_attempt <- FindNeighbors(so_attempt)
so_attempt <- FindClusters(so_attempt)
so_attempt <- RunUMAP(so_attempt, dims = 1:30, reduction.key = "UMAP_")
gc()
so_attempt_pt <- subset(so_attempt, celltype_pt == "PT" & celltype != "PT_lowQuality")
```

### UMAP

```{r echo = F}
# all cell types
DimPlot(object = so_attempt, reduction = "umap", group.by = "celltype", raster = F, alpha = 0.1, label = T)
DimPlot(object = so_attempt, reduction = "umap", group.by = "treatment", raster = F, alpha = 0.4)
DimPlot(object = so_attempt, reduction = "umap", group.by = "visit", raster = F, alpha = 0.4)
remove(so_attempt)
```

```{r echo = F}
# PT only
DimPlot(object = so_attempt_pt, reduction = "umap", group.by = "celltype", raster = F, alpha = 0.5, label = T)
DimPlot(object = so_attempt_pt, reduction = "umap", group.by = "treatment", raster = F, alpha = 0.7)
DimPlot(object = so_attempt_pt, reduction = "umap", group.by = "visit", raster = F, alpha = 0.7)
Idents(so_attempt_pt) <- so_attempt_pt$celltype_pt
```

### Proportions of cells
```{r echo = F}
## calculate counts for each group
grp_count <- function(data, celltype_var = "celltype_pt",
                      cellsubtype_var = "celltype",
                      celltype_filter = "PT", 
                      cellsubtype_exclude = "PT_lowQuality",
                      group_var = "group",
                      group = NULL) {
  
  filtered_data <- data %>%
    filter(!!sym(celltype_var) %in% celltype_filter &
             !!sym(cellsubtype_var) %nin% cellsubtype_exclude &
             !!sym(group_var) == !!group)
  nrow(filtered_data)
}

# function for plotting bar graphs of DEG
plot_de_markers <- function(so, genes, group_column, id1, id2, subset = NULL, suffix = "_plot", min.pct=0.001, latent.vars = NULL, test.use = "wilcox", logfc.threshold = 0.001) {
  ## Perform differential expression analysis
  de_results <- de.markers(so, genes, group_column, id1 = id1, id2 = id2, subset, suffix,
           min.pct = min.pct, logfc.threshold=logfc.threshold)
  de_results_name <- paste0("m", suffix)
  de_results <- get(de_results_name)
  
  ## Add direction column to the results
  de_results <- add_direction(de_results)
  
  ## Plot the results
  de_plot <- de_results %>%
    ggplot(aes(x = rownames(.), y = avg_log2FC, fill = direction)) + 
    geom_col(color = "white") +
    theme_bw() + 
    theme(panel.grid = element_blank(),
          text = element_text(size = 14),
          axis.text.x = element_text(angle = 70, hjust = 1)) +
    labs(x = "Transcripts", 
         y = "Avg Log2FC",
         fill = "Direction") +
    scale_fill_manual(values = c("NS" = "grey", "Upregulated" = "#f28482", "Downregulated" = "#457b9d"))
  
  return(de_plot)
}
```

#### PT-1,-2,-3,-4,-5
```{r echo = F, warning  = F}
so_attempt_pt@meta.data$celltype <- factor(so_attempt_pt@meta.data$celltype, levels = c("PT-1", "PT-2", "PT-3", "PT-4", "PT-5"))

n_placebo_pre <- grp_count(subset(so_attempt_pt@meta.data, treatment == "Placebo"), group_var = "visit", group = "PRE", 
                           cellsubtype_var = "celltype")
n_placebo_post <- grp_count(subset(so_attempt_pt@meta.data, treatment == "Placebo"), group_var = "visit", group = "POST", 
                            cellsubtype_var = "celltype")
n_dapag_pre <- grp_count(subset(so_attempt_pt@meta.data, treatment == "Dapagliflozin"), group_var = "visit", group = "PRE", 
                         cellsubtype_var = "celltype")
n_dapag_post <- grp_count(subset(so_attempt_pt@meta.data, treatment == "Dapagliflozin"), group_var = "visit", group = "POST", 
                          cellsubtype_var = "celltype")

so_attempt_pt_meta <- so_attempt_pt@meta.data %>% 
  mutate(treatment_visit = paste0(visit, " - ", treatment)) 
so_attempt_pt_meta$treatment_visit <- factor(so_attempt_pt_meta$treatment_visit, 
                                          levels = c("PRE - Placebo", "POST - Placebo", 
                                                     "PRE - Dapagliflozin", "POST - Dapagliflozin"))
```

```{r echo = F, warning = F}
## By PT subtypes (by group)
so_attempt_pt_meta %>% 
  dplyr::group_by(treatment, visit, treatment_visit, celltype) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::mutate(n = case_when(treatment == "Placebo" & visit == "PRE" ~ n_placebo_pre, 
                              treatment == "Placebo" & visit == "POST" ~ n_placebo_post,
                              treatment == "Dapagliflozin" & visit == "PRE" ~ n_dapag_pre, 
                              treatment == "Dapagliflozin" & visit == "POST" ~ n_dapag_post),
         ratio = count / n) %>% ungroup() %>%
  group_by(celltype) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  dplyr::select(proportion, treatment_visit, visit, celltype) %>%
  ggplot(aes(x = celltype, y = proportion, fill = treatment_visit)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))

so_attempt_pt_meta %>%
  ggplot(aes(treatment_visit, fill = celltype)) + 
  geom_bar(stat = "count", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Cell type") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))
```

```{r echo = F}
# percentage difference in PT1, 2, 3, 4, 5 in baseline vs. 4 months


```

### DEGs (min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

#### Count of up/downregulated genes

##### in PT
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_pre_trt",
           min.pct = 0.01, logfc.threshold = 0.1)

m_pt_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_post_trt",
           min.pct = 0.01, logfc.threshold = 0.1)

m_pt_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_placebo_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_dapa_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-1,2,3
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_pre_trt",
           min.pct = 0.01, logfc.threshold = 0.1)

m_pt123_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_post_trt",
           min.pct = 0.01, logfc.threshold = 0.1)

m_pt123_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_placebo_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt123_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_dapa_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt123_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-4,5
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_pre_trt",
           min.pct = 0.01, logfc.threshold = 0.1)

m_pt45_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_post_trt",
           min.pct = 0.01, logfc.threshold = 0.1)

m_pt45_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                "POST", "PRE", "PT","_pt45_placebo_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

m_pt45_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                id1 = "POST", id2 = "PRE", "PT","_pt45_dapa_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt45_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

#### TCA

##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_pre",
           min.pct = 0.01, logfc.threshold = 0.1)
kable(m_tca_pre, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.01,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_pre_trt.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```



##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_post",
           min.pct = 0.01, logfc.threshold = 0.1)
kable(m_tca_post, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.01,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_post_trt.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), genes, "visit", 
                "POST", "PRE", "PT","_tca_placebo",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_tca_placebo, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_placebo_prepost.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), genes, "visit", 
                "POST", "PRE", "PT","_tca_dap",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_tca_dap, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_dapa_prepost.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


### Oxphos
##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_pre",
           min.pct = 0.01, logfc.threshold = 0.1)
kable(m_oxphos_pre, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.01,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_pre_trt.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_post",
           min.pct = 0.01, logfc.threshold = 0.1)
kable(m_oxphos_post, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.01,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.01,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_post_trt.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_placebo",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_oxphos_placebo, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_placebo_prepost.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_dap",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_oxphos_dap, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_dapa_prepost.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

### DEGs (min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

#### Count of up/downregulated genes

##### in PT
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_pre_trt",
           min.pct = 0.01,  logfc.threshold = 0.25)

m_pt_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_post_trt",
           min.pct = 0.01,  logfc.threshold = 0.25)

m_pt_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_placebo_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_dapa_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-1,2,3
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_pre_trt",
           min.pct = 0.01,  logfc.threshold = 0.25)

m_pt123_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_post_trt",
           min.pct = 0.01,  logfc.threshold = 0.25)

m_pt123_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_placebo_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt123_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_dapa_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt123_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-4,5
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_pre_trt",
           min.pct = 0.01, logfc.threshold = 0.25)

m_pt45_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_post_trt",
           min.pct = 0.01,  logfc.threshold = 0.25)

m_pt45_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                "POST", "PRE", "PT","_pt45_placebo_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

m_pt45_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                id1 = "POST", id2 = "PRE", "PT","_pt45_dapa_prepost",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt45_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

#### TCA

##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_pre",
           min.pct = 0.01,  logfc.threshold = 0.25)
kable(m_tca_pre, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.01,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.01,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.01,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.01,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.01,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_pre_trt025.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```



##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_post",
           min.pct = 0.01, logfc.threshold = 0.25)
kable(m_tca_post, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.01,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.01, logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.01,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.01,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.01,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_post_trt025.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), genes, "visit", 
                "POST", "PRE", "PT","_tca_placebo",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_tca_placebo, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_placebo_prepost025.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), genes, "visit", 
                "POST", "PRE", "PT","_tca_dap",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_tca_dap, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_dapa_prepost025.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


### Oxphos
##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_pre",
           min.pct = 0.01, logfc.threshold = 0.25)
kable(m_oxphos_pre, digits = 3)
```


##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_post",
           min.pct = 0.01, logfc.threshold = 0.25)
kable(m_oxphos_post, digits = 3)
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_placebo",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_oxphos_placebo, digits = 3)
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit",
                "POST", "PRE", "PT","_oxphos_dap",
           min.pct = 0.01, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_oxphos_dap, digits = 3)
```

### DEGs (min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

#### Count of up/downregulated genes

##### in PT
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_pre_trt",
           min.pct = 0.1, logfc.threshold = 0.1)

m_pt_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_post_trt",
           min.pct = 0.1, logfc.threshold = 0.1)

m_pt_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_placebo_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_dapa_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-1,2,3
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_pre_trt",
           min.pct = 0.1, logfc.threshold = 0.1)

m_pt123_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_post_trt",
           min.pct = 0.1, logfc.threshold = 0.1)

m_pt123_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_placebo_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt123_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_dapa_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt123_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-4,5
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_pre_trt",
           min.pct = 0.1, logfc.threshold = 0.1)

m_pt45_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_post_trt",
           min.pct = 0.1, logfc.threshold = 0.1)

m_pt45_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                "POST", "PRE", "PT","_pt45_placebo_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

m_pt45_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                id1 = "POST", id2 = "PRE", "PT","_pt45_dapa_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt45_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

#### TCA

##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_pre",
           min.pct = 0.1, logfc.threshold = 0.1)
kable(m_tca_pre, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.1,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_pre_trtpct1fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```



##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_post",
           min.pct = 0.1, logfc.threshold = 0.1)
kable(m_tca_post, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.1,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]],  ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_post_trtpct1fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), genes, "visit", 
                "POST", "PRE", "PT","_tca_placebo",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_tca_placebo, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_placebo_prepostpct1fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), genes, "visit", 
                "POST", "PRE", "PT","_tca_dap",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_tca_dap, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_dapa_prepostpct1fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


### Oxphos
##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_pre",
           min.pct = 0.1, logfc.threshold = 0.1)
kable(m_oxphos_pre, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.1, logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.1, logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.1,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_pre_trtpct1fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_post",
           min.pct = 0.1, logfc.threshold = 0.1)
kable(m_oxphos_post, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.1,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.1,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_post_trtpct1fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_placebo",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_oxphos_placebo, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_placebo_prepostpct1fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_dap",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_oxphos_dap, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_dapa_prepostpct1fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


### DEGs (min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

#### Count of up/downregulated genes

##### in PT
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_pre_trt",
           min.pct = 0.1,  logfc.threshold = 0.25)

m_pt_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_post_trt",
           min.pct = 0.1, logfc.threshold = 0.25)

m_pt_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_placebo_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_dapa_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-1,2,3
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_pre_trt",
           min.pct = 0.1, logfc.threshold = 0.25)

m_pt123_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_post_trt",
           min.pct = 0.1, logfc.threshold = 0.25)

m_pt123_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_placebo_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt123_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_dapa_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt123_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-4,5
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_pre_trt",
           min.pct = 0.1,  test.use = "LR", logfc.threshold = 0.25)

m_pt45_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_post_trt",
           min.pct = 0.1,  logfc.threshold = 0.25)

m_pt45_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                "POST", "PRE", "PT","_pt45_placebo_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

m_pt45_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                id1 = "POST", id2 = "PRE", "PT","_pt45_dapa_prepost",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt45_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

#### TCA

##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_pre",
           min.pct = 0.1,  logfc.threshold = 0.25)
kable(m_tca_pre, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.1, logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.1,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_pre_trtpct1fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```



##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_post",
           min.pct = 0.1, logfc.threshold = 0.25)
kable(m_tca_post, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.1,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- NULL
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]],  ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_post_trtpct1fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), genes, "visit", 
                "POST", "PRE", "PT","_tca_placebo",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_tca_placebo, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), genes, "visit",
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- NULL
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_placebo_prepostpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), genes, "visit", 
                "POST", "PRE", "PT","_tca_dap",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_tca_dap, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_dapa_prepostpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


### Oxphos
##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_pre",
           min.pct = 0.1,  logfc.threshold = 0.25)
kable(m_oxphos_pre, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.1,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_pre_trtpct1fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_post",
           min.pct = 0.1,  logfc.threshold = 0.25)
kable(m_oxphos_post, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.1,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.1,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_post_trtpct1fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_placebo",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_oxphos_placebo, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_placebo_prepostpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_dap",
           min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_oxphos_dap, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.1, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_dapa_prepostpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


### DEGs (min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

#### Count of up/downregulated genes

##### in PT
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_pre_trt",
           min.pct = 0.2,  logfc.threshold = 0.1)

m_pt_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_post_trt",
           min.pct = 0.2,  logfc.threshold = 0.1)

m_pt_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_placebo_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_dapa_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-1,2,3
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_pre_trt",
           min.pct = 0.2,  logfc.threshold = 0.1)

m_pt123_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_post_trt",
           min.pct = 0.2,  logfc.threshold = 0.1)

m_pt123_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_placebo_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt123_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_dapa_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt123_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-4,5
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_pre_trt",
           min.pct = 0.2,  logfc.threshold = 0.1)

m_pt45_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_post_trt",
           min.pct = 0.2,  logfc.threshold = 0.1)

m_pt45_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                "POST", "PRE", "PT","_pt45_placebo_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

m_pt45_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                id1 = "POST", id2 = "PRE", "PT","_pt45_dapa_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
m_pt45_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

#### TCA

##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_pre",
           min.pct = 0.2,  logfc.threshold = 0.1)
kable(m_tca_pre, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.2,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_pre_trtpct2fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```



##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_post",
           min.pct = 0.2,  logfc.threshold = 0.1)
kable(m_tca_post, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.2,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]],  ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_post_trtpct2fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), genes, "visit", 
                "POST", "PRE", "PT","_tca_placebo",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_tca_placebo, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_placebo_prepostpct2fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), genes, "visit", 
                "POST", "PRE", "PT","_tca_dap",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_tca_dap, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_dapa_prepostpct2fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


### Oxphos
##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_pre",
           min.pct = 0.2,  logfc.threshold = 0.1)
kable(m_oxphos_pre, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.2,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_pre_trtpct2fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_post",
           min.pct = 0.2,  logfc.threshold = 0.1)
kable(m_oxphos_post, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.2,  logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.2,  logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_post_trtpct2fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_placebo",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_oxphos_placebo, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_placebo_prepostpct2fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_dap",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
kable(m_oxphos_dap, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.1)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_dapa_prepostpct2fc1.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

### DEGs (min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

#### Count of up/downregulated genes

##### in PT
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_pre_trt",
           min.pct = 0.2,  logfc.threshold = 0.25)

m_pt_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST"), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt_post_trt",
           min.pct = 0.2,  logfc.threshold = 0.25)

m_pt_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_placebo_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), NULL, "visit", 
                "POST", "PRE", "PT","_pt_dapa_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-1,2,3
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_pre_trt",
           min.pct = 0.2,  logfc.threshold = 0.25)

m_pt123_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt123_post_trt",
           min.pct = 0.2,  logfc.threshold = 0.25)

m_pt123_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_placebo_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt123_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-1", "PT-2", "PT-3")), NULL, "visit", 
                "POST", "PRE", "PT","_pt123_dapa_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt123_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

##### in PT-4,5
###### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "PRE" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_pre_trt",
           min.pct = 0.2,  logfc.threshold = 0.25)

m_pt45_pre_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```
###### Post treatment placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
de.markers(subset(so_attempt_pt, visit == "POST" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", "_pt45_post_trt",
           min.pct = 0.2,  logfc.threshold = 0.25)

m_pt45_post_trt %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Placebo"& 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                "POST", "PRE", "PT","_pt45_placebo_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

m_pt45_placebo_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

###### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
de.markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg" & 
                    celltype %in% c("PT-4", "PT-5")), NULL, "visit", 
                id1 = "POST", id2 = "PRE", "PT","_pt45_dapa_prepost",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
m_pt45_dapa_prepost %>%
  mutate(direction_pval = case_when(avg_log2FC < 0 & p_val < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val < 0.05 ~ "Upregulated"),
         direction_pvaladj = case_when(avg_log2FC < 0 & p_val_adj < 0.05 ~ "Downregulated",
                               avg_log2FC > 0 & p_val_adj < 0.05 ~ "Upregulated")) %>%
  group_by(direction_pvaladj) %>%
  filter(!is.na(direction_pvaladj)) %>%
  ggplot(aes(x = direction_pvaladj, fill = direction_pvaladj)) +
  geom_bar() + 
  geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  labs(x = "Direction", y = "Count (q<0.05)",
       fill = "Direction")
```

#### TCA

##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_pre",
           min.pct = 0.2,  logfc.threshold = 0.25)
kable(m_tca_pre, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.2,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_pre_trtpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```



##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_tca_post",
           min.pct = 0.2,  logfc.threshold = 0.25)
kable(m_tca_post, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.2,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]],  ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_post_trtpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), genes, "visit", 
                "POST", "PRE", "PT","_tca_placebo",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_tca_placebo, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_placebo_prepostpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), genes, "visit", 
                "POST", "PRE", "PT","_tca_dap",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_tca_dap, digits = 3)
```

###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_tca_dapa_prepostpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


### Oxphos
##### Pre treatment (baseline) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "PRE"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_pre",
           min.pct = 0.2,  logfc.threshold = 0.25)
kable(m_oxphos_pre, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.2,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "PRE"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_pre_trtpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```


##### Post treatment (follow up) placebo vs. Dapagliflozin

Group 1 = "Dapagliflozin 5mg"

Group 2 = "Placebo"

**Negative values** indicate that the transcript has a lower expression in Dapagliflozin group compared to placebo group.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, visit == "POST"), oxy_phos_genes, "treatment", 
                "Dapagliflozin 5mg", "Placebo", "PT","_oxphos_post",
           min.pct = 0.2,  logfc.threshold = 0.25)
kable(m_oxphos_post, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo", "PT", ".1", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".2", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".3", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".4", min.pct = 0.2,  logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"), oxy_phos_genes, "treatment", 
           id1 = "Dapagliflozin 5mg", id2 = "Placebo","PT", ".5", min.pct = 0.2,  logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & visit == "POST"),
  features = oxy_phos_genes,idents = "PT", group.by = "treatment",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:Placebo", "PT-1:Dapagliflozin 5mg",
                                                            "PT-2:Placebo", "PT-2:Dapagliflozin 5mg",
                                                            "PT-3:Placebo", "PT-3:Dapagliflozin 5mg",
                                                            "PT-4:Placebo", "PT-4:Dapagliflozin 5mg",
                                                            "PT-5:Placebo", "PT-5:Dapagliflozin 5mg"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("Dapagliflozin", "Placebo", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_post_trtpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Placebo group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the placebo group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Placebo"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_placebo",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_oxphos_placebo, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Placebo"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_placebo_prepostpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### Dapagliflozin group pre vs. post

Group 1 = "POST"

Group 2 = "PRE"

**Negative values** indicate that the transcript has a lower expression in the Dapagliflozin group post-treatment compared to pre-treatment.

```{r echo = F}
plot_de_markers(subset(so_attempt_pt, treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
                "POST", "PRE", "PT","_oxphos_dap",
           min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
kable(m_oxphos_dap, digits = 3)
```
###### Dot plot

```{r echo = F}
de.markers(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE", "PT", ".1", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".2", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".3", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".4", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)
de.markers(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"), oxy_phos_genes, "visit", 
           id1 = "POST", id2 = "PRE","PT", ".5", min.pct = 0.2, latent.vars = "subject_id", test.use = "LR", logfc.threshold = 0.25)

pt.1 <- DotPlot(subset(so_attempt_pt, celltype == "PT-1" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_attempt_pt, celltype == "PT-2" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_attempt_pt, celltype == "PT-3" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_attempt_pt, celltype == "PT-4" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_attempt_pt, celltype == "PT-5" & treatment == "Dapagliflozin 5mg"),
  features = oxy_phos_genes,idents = "PT", group.by = "visit",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
pt_dot$pt.celltype <- factor(pt_dot$pt.celltype, levels = c("PT-1:PRE", "PT-1:POST",
                                                            "PT-2:PRE", "PT-2:POST",
                                                            "PT-3:PRE", "PT-3:POST",
                                                            "PT-4:PRE", "PT-4:POST",
                                                            "PT-5:PRE", "PT-5:POST"))
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("POST", "PRE", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/778527649/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/ATTEMPT_Dot_PT_subcells_oxphos_dapa_prepostpct2fc25.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

