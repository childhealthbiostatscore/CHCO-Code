---
title: "ATTEMPT scRNA correlations visualization"
author: "Ye Ji Choi"
date: "`r lubridate::today()`"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
---

```{r echo = F, include = F}
library(dplyr)
library(kableExtra)
library(knitr)
library(ggplot2)
library(purrr)
library(tidyr)
library(stats)
library(patchwork)
library(UpSetR)
library(readxl)
library(fgsea)
library(ReactomeGSA)
library(GSEABase)
library(enrichplot)
library(enrichR)
library(ggrepel)
library(forcats)
library(stringr)
library(jsonlite)
library(aws.s3)
library(fgsea)
library(reshape2)
library(simplifyEnrichment)
```

* lipid profiles

* elimiate overlapping pathways

* look for concordance

* use the concordance to do... something

* mediation framework

```{r echo = F}
# Function: Adjacency matrix to list -------------------------
matrix_to_list <- function(pws){
  pws.l <- list()
  for (pw in colnames(pws)) {
    pws.l[[pw]] <- rownames(pws)[as.logical(pws[, pw])]
  }
  return(pws.l)
}
## Function: prepare_gmt --------------------------------------
prepare_gmt <- function(gmt_file, genes_in_data, savefile = FALSE){
  # for debug
  #file <- gmt_files[1]
  #genes_in_data <- df$gene_symbol
  
  # Read in gmt file
  gmt <- gmtPathways(gmt_file)
  hidden <- unique(unlist(gmt))
  
  # Convert gmt file to a matrix with the genes as rows and for each go annotation (columns) the values are 0 or 1
  mat <- matrix(NA, dimnames = list(hidden, names(gmt)),
                nrow = length(hidden), ncol = length(gmt))
  for (i in 1:dim(mat)[2]){
    mat[,i] <- as.numeric(hidden %in% gmt[[i]])
  }
  
  #Subset to the genes that are present in our data to avoid bias
  hidden1 <- intersect(genes_in_data, hidden)
  mat <- mat[hidden1, colnames(mat)[which(colSums(mat[hidden1,])>5)]] # filter for gene sets with more than 5 genes annotated
  # And get the list again
  final_list <- matrix_to_list(mat) # for this we use the function we previously defined
  
  if(savefile){
    saveRDS(final_list, file = paste0(gsub('.gmt', '', gmt_file), '_subset_', format(Sys.time(), '%d%m'), '.RData'))
  }
  
  print('Wohoo! .gmt conversion successfull!:)')
  return(final_list)
}

# List of acronyms to uppercase
acronyms <- c("rna", "dna", "mtor", "foxo", "ppar", "nmd", "fgfr", "robo", 
              "bhl", "cov", "jak", "stat", "wnt", "hiv", "bcl", "mapk",
              "pt", "tal", "pc", "ic", "ec", "fibvsmcp")
special_mixed <- c("rrna", "mrna", "trna", "gtpase", "atpase", "robos", "slits", "fibvsmcp")
special_replacements <- c("rRNA", "mRNA", "tRNA", "GTPase", "ATPase", "ROBOs", "SLITs", "FIB/VSMC/P")

replace_mixed_case <- function(text, from, to) {
  for (i in seq_along(from)) {
    pattern <- paste0("\\b", from[i], "\\b")
    text <- str_replace_all(text, regex(pattern, ignore_case = TRUE), to[i])
  }
  return(text)
}

capitalize_acronyms <- function(text, terms) {
  for (term in terms) {
    pattern <- paste0("\\b", term, "\\b")
    replacement <- toupper(term)
    text <- str_replace_all(text, regex(pattern, ignore_case = TRUE), replacement)
  }
  return(text)
}
```


```{r include = F}
## Create an S3 client
keys <- fromJSON("/Users/choiyej/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Bjornstad Pyle Lab/keys.json")

Sys.setenv(
  "AWS_ACCESS_KEY_ID" = keys$MY_ACCESS_KEY,
  "AWS_SECRET_ACCESS_KEY" = keys$MY_SECRET_KEY,
  "AWS_DEFAULT_REGION" = "",
  "AWS_REGION" = "",
  "AWS_S3_ENDPOINT" = "s3.kopah.uw.edu"
)
```

```{r echo = F}
plot_volcano <- function(data, fc, p_col, title_suffix, x_axis, y_axis, file_suffix, p_thresh = 0.05) {
  set.seed(1)
  top_pos <- data %>%
    dplyr::filter(!!sym(fc) > 0 & !!sym(p_col) < p_thresh) %>%
    dplyr::arrange(!!sym(p_col)) %>%
    slice_head(n=20)

  top_neg <- data %>%
    dplyr::filter(!!sym(fc) < 0 & !!sym(p_col) < p_thresh) %>%
    dplyr::arrange(!!sym(p_col)) %>%
    slice_head(n=20)

  data <- data %>%
    dplyr::mutate(top_color = case_when(Gene %in% top_pos$Gene ~ "#f28482",
                                 Gene %in% top_neg$Gene ~ "#457b9d",
                                 TRUE ~ "#ced4da"),
           top_size = if_else(Gene %in% c(top_pos$Gene, top_neg$Gene), 1.3, 1),
           top_lab  = if_else(Gene %in% c(top_pos$Gene, top_neg$Gene), Gene, ""))

  p <- ggplot(data, aes(x = !!sym(fc), y = -log10(!!sym(p_col)))) +
    geom_hline(yintercept = -log10(p_thresh), linetype = "dashed", color = "darkgrey") +
    geom_point(alpha = 0.5, aes(color = top_color, size = top_size)) +
    geom_text_repel(aes(label = top_lab, color = top_color),
                    size = 3, max.overlaps = Inf,
                    force = 6, segment.alpha = 0.3, segment.size = 0.3) +
    labs(title = paste(title_suffix),
         x = paste(x_axis),
         y = paste(y_axis)) +
    scale_size_continuous(range = c(1, 1.3)) + 
    scale_color_manual(values = c("#457b9d"="#457b9d", "#ced4da"="#ced4da", "#f28482"="#f28482")) +
    theme_minimal() +
    theme(legend.title = element_blank(),
          panel.grid = element_blank(),
          text = element_text(size = 15),
          title = element_text(size = 9)) +
    guides(color = "none", size = "none")

  ggsave(paste0("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Volcano Plots/", file_suffix, ".jpeg"), plot = p, width = 7, height = 5)
  return(p)
}

```


```{r echo = F}
plot_volcano_associations <- function(clin_results, fc, p_col, title_suffix, x_axis, y_axis, file_suffix, p_thresh = 0.05,  treatment_results, treatment_p_col, 
                         positive_text = "Positive with Dapagliflozin", 
                         negative_text = "Negative with Dapagliflozin",
                         formula = "\u0394 treatment", color_by = "treatment_direction",
                         legend_position = c(0.3,0.8)) {
  
  set.seed(1)
  
  # Add treatment effect directions
  treatment_results <- treatment_results %>%
    mutate(treatment_direction = case_when(`p_treatmentDapagliflozin:visitPOST` < 0.05 &
                                             `logFC_treatmentDapagliflozin:visitPOST` > 0 ~ "Up w/ Dapagliflozin",
                                           `p_treatmentDapagliflozin:visitPOST` < 0.05 &
                                             `logFC_treatmentDapagliflozin:visitPOST` < 0 ~ "Down w/ Dapagliflozin",
                                           TRUE ~ "NS"))
  
  # Genes significant in both models
  sig_clin_genes <- clin_results %>%
    filter(!!sym(p_col) < p_thresh) %>%
    pull(Gene)
  
  sig_treat_genes <- treatment_results %>%
    filter(!!sym(treatment_p_col) < p_thresh) %>%
    pull(Gene)
  
  sig_both_genes <- intersect(sig_clin_genes, sig_treat_genes)
  
  # Top 5 left pos / neg and right pos / neg
  top_5_left_pos <- clin_results %>%
    filter(Gene %in% sig_both_genes, !!sym(fc) < 0) %>%
    left_join(treatment_results %>% 
                dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`), by = "Gene") %>%
    filter(`logFC_treatmentDapagliflozin:visitPOST` > 0) %>%
    arrange(!!sym(p_col)) %>%
    slice_head(n = 5) %>%
    pull(Gene)
  
  top_5_left_neg <- clin_results %>%
    filter(Gene %in% sig_both_genes, !!sym(fc) < 0) %>%
    left_join(treatment_results %>% 
                dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`), by = "Gene") %>%
    filter(`logFC_treatmentDapagliflozin:visitPOST` < 0) %>%
    arrange(!!sym(p_col)) %>%
    slice_head(n = 5) %>%
    pull(Gene)
  
  top_5_right_pos <- clin_results %>%
    filter(Gene %in% sig_both_genes, !!sym(fc) > 0) %>%
    left_join(treatment_results %>% 
                dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`), by = "Gene") %>%
    filter(`logFC_treatmentDapagliflozin:visitPOST` > 0) %>%
    arrange(!!sym(p_col)) %>%
    slice_head(n = 5) %>%
    pull(Gene)
  
  top_5_right_neg <- clin_results %>%
    filter(Gene %in% sig_both_genes, !!sym(fc) > 0) %>%
    left_join(treatment_results %>% 
                dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`), by = "Gene") %>%
    filter(`logFC_treatmentDapagliflozin:visitPOST` < 0) %>%
    arrange(!!sym(p_col)) %>%
    slice_head(n = 5) %>%
    pull(Gene)
  
  # Combine for plotting
  top_label_genes <- c(top_5_left_pos, top_5_left_neg, top_5_right_pos, top_5_right_neg)
  
  message("Number of genes significant in both: ", length(sig_both_genes))
  message("Number of labeled genes: ", length(top_label_genes))
  
  clin_results <- clin_results %>%
    mutate(shape_var_plot = case_when(
      Gene %in% sig_both_genes & !!sym(fc) < 0 & treatment_results$treatment_direction[match(Gene, treatment_results$Gene)] == "Up w/ Dapagliflozin" ~ "Left_Pos",
      Gene %in% sig_both_genes & !!sym(fc) < 0 & treatment_results$treatment_direction[match(Gene, treatment_results$Gene)] == "Down w/ Dapagliflozin" ~ "Left_Neg",
      Gene %in% sig_both_genes & !!sym(fc) > 0 & treatment_results$treatment_direction[match(Gene, treatment_results$Gene)] == "Up w/ Dapagliflozin" ~ "Right_Pos",
      Gene %in% sig_both_genes & !!sym(fc) > 0 & treatment_results$treatment_direction[match(Gene, treatment_results$Gene)] == "Down w/ Dapagliflozin" ~ "Right_Neg",
      TRUE ~ "NS"
    ),
    color_var_plot = case_when(
      Gene %in% sig_both_genes ~ treatment_results$treatment_direction[match(Gene, treatment_results$Gene)],
      TRUE ~ "NS"
    ),
    top_lab = if_else(Gene %in% top_label_genes, Gene, "")
    )
  
  clin_results$shape_var_plot <- factor(clin_results$shape_var_plot, 
                                        levels = c("Left_Pos", "Left_Neg", "Right_Pos", "Right_Neg", "NS"))
  
  clin_results$color_var_plot <- factor(clin_results$color_var_plot, 
                                        levels = c("Up w/ Dapagliflozin", "Down w/ Dapagliflozin", "NS"))
  
  # Max and min for annotation arrows
  max_fc <- max(clin_results[[fc]], na.rm = TRUE)
  min_fc <- min(clin_results[[fc]], na.rm = TRUE)
  
  # Plot
  p <- ggplot(clin_results, aes(x = !!sym(fc), y = -log10(!!sym(p_col)))) +
    geom_hline(yintercept = -log10(p_thresh), linetype = "dashed", color = "darkgrey") +
    geom_point(alpha = 0.3, aes(fill = color_var_plot, 
                                color = color_var_plot,
                                shape = shape_var_plot), size = 2) +
    scale_shape_manual(values = c("Left_Pos" = 23, "Left_Neg" = 23, "Right_Pos" = 22, "Right_Neg" = 22, "NS" = 21),
                       labels = c("Left_Pos" = "Left Pos", "Left_Neg" = "Left Neg", 
                                  "Right_Pos" = "Right Pos", "Right_Neg" = "Right Neg", "NS" = "NS")) +
    scale_color_manual(values = c("Up w/ Dapagliflozin" = "#f28482", "Down w/ Dapagliflozin" = "#457b9d", "NS" = "#ced4da")) +
    scale_fill_manual(values = c("Up w/ Dapagliflozin" = "#f28482", "Down w/ Dapagliflozin" = "#457b9d", "NS" = "#ced4da")) +
    guides(color = guide_legend(title = NULL), fill = "none") +
    geom_text_repel(aes(label = top_lab, color = color_var_plot),
                    size = 3, max.overlaps = Inf, force = 10,
                    segment.alpha = 0.5, segment.size = 0.4,
                    min.segment.length = 0, box.padding = 0.6, point.padding = 0.4,
                    segment.color = "#ced4da") +
    labs(title = paste(title_suffix),
         x = paste(x_axis),
         y = paste(y_axis)) +
    theme_minimal() +
    annotate("segment", 
             x=max_fc/8, 
             xend=(max_fc*7)/8, 
             y=-1.5,
             col="darkgrey", arrow=arrow(length=unit(0.2, "cm"))) +
    annotate("text", 
             x=mean(c(max_fc/8, (max_fc*7)/8)), 
             y=-2, 
             label=positive_text,
             size=3, color="#343a40") +
    annotate("segment", 
             x=min_fc/8, 
             xend=(min_fc*7)/8, 
             y=-1.5,
             col="darkgrey", arrow=arrow(length=unit(0.2, "cm"))) +
    annotate("text", 
             x=mean(c(min_fc/8, (min_fc*7)/8)), 
             y=-2, 
             label=negative_text,
             size=3, color="#343a40") +
    annotate("text", 
             x=max_fc * 0.95,
             y=-3.5, 
             hjust = 1,
             label=paste0("Formula: ~ ", formula, " + (1|subject)"),
             size=3, color="#343a40") +
    scale_y_continuous(expand=c(0,0)) +
    coord_cartesian(ylim = c(0, 15), clip="off") +
    theme(legend.title = element_blank(),
          panel.grid = element_blank(),
          text = element_text(size = 9),
          legend.position = legend_position,
          legend.justification = c(1, 1),
          plot.margin = margin(t = 10, r = 20, b = 28, l = 20),
          axis.title.x = element_text(margin = margin(t = 32))) + 
    guides(shape = "none")
  
  # Save
  ggsave(paste0("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Volcano Plots/", file_suffix, ".jpeg"), plot = p, width = 7, height = 5)
  
  return(p)
}
```

```{r echo = F}
filter_redundant_pathways <- function(gsea_result, overlap_pct = 0.3) {
  # Check required columns
  if (!all(c("pathway", "leadingEdge", "padj") %in% colnames(gsea_result))) {
    stop("Input data frame must have 'pathway', 'leadingEdge', and 'padj' columns.")
  }
  
  # Extract leading edge and name them
  leading_edges <- gsea_result$leadingEdge
  names(leading_edges) <- gsea_result$pathway
  
  # Compute Jaccard overlap matrix
  overlap_matrix <- sapply(leading_edges, function(x) 
    sapply(leading_edges, function(y) 
      length(intersect(x, y)) / length(union(x, y))
    )
  )
  
  # Identify pairs with high overlap
  overlap_pairs <- which(overlap_matrix > overlap_pct & lower.tri(overlap_matrix), arr.ind = TRUE)
  
  # If no overlaps found, return original
  if (nrow(overlap_pairs) == 0) {
    message("No redundant pathways found with overlap above threshold.")
    return(gsea_result)
  }
  
  # Create overlap graph
  library(igraph)
  edges <- data.frame(
    from = rownames(overlap_matrix)[overlap_pairs[,1]],
    to   = colnames(overlap_matrix)[overlap_pairs[,2]]
  )
  g <- graph_from_data_frame(edges, directed = FALSE)
  components <- components(g)
  
  # Cluster terms and select representative from each
  redundant_clusters <- split(names(components$membership), components$membership)
  representative_terms <- sapply(redundant_clusters, function(cluster_terms) {
    sub <- gsea_result[gsea_result$pathway %in% cluster_terms, ]
    sub[which.min(sub$padj), "pathway"]
  })
  
  # Keep only representative + non-overlapping terms
  all_overlapping <- unique(unlist(redundant_clusters))
  non_overlapping <- setdiff(gsea_result$pathway, all_overlapping)
  final_terms <- c(non_overlapping, representative_terms)
  
  # Return filtered GSEA result
  gsea_result[gsea_result$pathway %in% final_terms, ]
}
```
# PT
```{r echo = F}
nebula_pt_results_list_reml_pooled <- s3readRDS('PT/nebula/pt_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pt_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_pt_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_pt_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pt_nebula_converged_reml_pooled <- pt_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

pt_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_pt_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_pt_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pt_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pt_nebula_res_combined_reml_pooled <- pt_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

pt_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_pt_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_pt_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

```

## mGFR (Raw)
```{r echo = F}
# Read in nebula results saved to kopah
pt_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/pt_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pt_mgfr_jodal_convergence <- map_dfr(
  names(pt_mgfr_jodal_res),
  function(gene_name) {
    converged <- pt_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pt_mgfr_jodal_converged <- pt_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

pt_mgfr_jodal_res_combined <- map_dfr(
  names(pt_mgfr_jodal_res),
  function(gene_name) {
    df <- pt_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pt_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pt_mgfr_jodal_res_combined <- pt_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

pt_mgfr_jodal_res_combined_disp <- map_dfr(
  names(pt_mgfr_jodal_res),
  function(gene_name) {
    df <- pt_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
```

```{r echo = F}
pt_nebula_res_combined_reml_pooled <- pt_nebula_res_combined_reml_pooled %>%
  mutate(treatment_direction = case_when(`p_treatmentDapagliflozin:visitPOST` < 0.05 &
                                           `logFC_treatmentDapagliflozin:visitPOST` > 0 ~ "Positive",
                                         `p_treatmentDapagliflozin:visitPOST` < 0.05 &
                                           `logFC_treatmentDapagliflozin:visitPOST` > 0 ~ "Negative",
                                         T ~ "NS"),
         treatment_direction_fdr = case_when(`fdr_interaction` < 0.05 & 
                                               `logFC_treatmentDapagliflozin:visitPOST` > 0 ~ "Positive",
                                         `fdr_interaction` < 0.05 & 
                                           `logFC_treatmentDapagliflozin:visitPOST` > 0 ~ "Negative",
                                         T ~ "NS"))
write.csv(pt_mgfr_jodal_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pt_mgfr_jodal.csv", row.names = F)
```

```{r echo = F}
plot_volcano_associations(pt_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "PT Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/pt_mgfr_jodal_trtcolors",
                          treatment_results = pt_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano_associations(pt_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "PT Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/pt_mgfr_jodal_trtcolors_logfc0.3",
                          treatment_results = subset(pt_nebula_res_combined_reml_pooled,
                                                     abs(`logFC_treatmentDapagliflozin:visitPOST`) > 0.3),
                          treatment_p_col = "fdr_interaction",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```
```{r echo = F}
# concordance
pt_mgfr_jodal_clin_pos <- pt_mgfr_jodal_res_combined %>%
  filter(logFC_mgfr_jodal_delta > 0 & p_mgfr_jodal_delta < 0.05) %>%
  pull(Gene)

pt_mgfr_jodal_clin_neg <- pt_mgfr_jodal_res_combined %>%
  filter(logFC_mgfr_jodal_delta < 0 & p_mgfr_jodal_delta < 0.05) %>%
  pull(Gene)

pt_mgfr_jodal_trt_pos <- pt_nebula_res_combined_reml_pooled %>%
  filter(`logFC_treatmentDapagliflozin:visitPOST` > 0 & `p_treatmentDapagliflozin:visitPOST` < 0.05) %>%
  pull(Gene)

pt_mgfr_jodal_trt_neg <- pt_nebula_res_combined_reml_pooled %>%
  filter(`logFC_treatmentDapagliflozin:visitPOST` < 0 & `p_treatmentDapagliflozin:visitPOST` < 0.05) %>%
  pull(Gene)

sum(pt_mgfr_jodal_clin_pos %in% pt_mgfr_jodal_trt_pos)



```

```{r echo =F, eval = F}
plot_volcano(pt_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "PT Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/pt_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(pt_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "PT Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)
```{r echo = F}
plot_fgsea_transpose <- function(fgsea_res,
                       top_n = 30,
                       title = "Top Enriched Pathways",
                       xmin = 0,
                       xmax = 3,
                       xnudge = (xmax - xmin)/100,
                       text1 = 6.5,
                       text2 = 18,
                       text3 = 20) {
  
  fgsea_res <- fgsea_res %>%
    arrange(pval) %>%
    head(top_n) %>%
    mutate(
      direction = case_when((NES < 0 & pval <= 0.05 ~ "Negative"), 
                            (NES > 0 & pval <= 0.05 ~ "Positive"),
                            (NES < 0 & pval > 0.05 ~ "Negative p > 0.05"), 
                            (NES > 0 & pval > 0.05 ~ "Positive p > 0.05")),
      face = case_when((NES < 0 & pval <= 0.05 ~ "bold"), 
                            (NES > 0 & pval <= 0.05 ~ "bold"),
                            (NES < 0 & pval > 0.05 ~ "plain"), 
                            (NES > 0 & pval > 0.05 ~ "plain")),
      pathway_clean = str_remove(pathway, "^KEGG_"), 
      pathway_clean = str_remove(pathway_clean, "^REACTOME_"), 
      pathway_clean = str_remove(pathway_clean, "^GOBP_"), 
      pathway_clean = str_remove(pathway_clean, "^GOMF_"), 
      pathway_clean = str_replace_all(pathway_clean, "_", " "),
      pathway_clean = str_to_sentence(pathway_clean),
      pathway_clean = str_replace_all(pathway_clean, "\\bi\\b", "I"),
      pathway_clean = str_replace_all(pathway_clean, "\\bii\\b", "II"),
      pathway_clean = str_replace_all(pathway_clean, "\\biii\\b", "III"),
      pathway_clean = str_replace_all(pathway_clean, "\\biv\\b", "IV"),
      pathway_clean = str_replace_all(pathway_clean, "\\bv\\b", "V"),
      pathway_clean = str_replace_all(pathway_clean, regex("\\(immune\\)", ignore_case = TRUE), "(IMMUNE)"),
      pathway_clean = capitalize_acronyms(pathway_clean, acronyms),
      pathway_clean = replace_mixed_case(pathway_clean, special_mixed, special_replacements),
      pathway_clean = paste0(pathway_clean, " (", size, ")")
    ) %>%
    arrange(pval)
  
  fgsea_res$pathway_clean <- reorder(fgsea_res$pathway_clean, -abs(fgsea_res$NES))
  
  fgsea_res %>%
    ggplot(aes(x = abs(NES), y = fct_rev(pathway_clean), label = pathway_clean)) +
    geom_point(aes(size = -log10(pval), color = direction, alpha = 0.8)) +
    # geom_vline(xintercept = 2, linetype = "dashed") +
    geom_text(aes(group = pathway_clean, color = direction, fontface = face), 
              hjust = 0, size = text1, nudge_x = xnudge) +
    scale_size_binned() +
    scale_color_manual(values = c("Positive" = "#c75146", "Negative" = "#2c7da0", 
                                  "Positive p > 0.05" = "#e18c80", "Negative p > 0.05" = "#7ab6d1")) +
    scale_x_continuous(limits = c(xmin, xmax), expand = expansion(mult = c(0, 0))) +
    scale_y_discrete(expand = expansion(add = 1)) +
    labs(
      x = "NES",
      y = "Pathways",
      color = "Direction",
      size = "-log(p-value)",
      title = title
    ) +
    guides(alpha = "none") +
    theme_bw() +
    theme(
      axis.text.y = element_blank(),
      panel.grid = element_blank(),
      axis.text.x = element_text(size = text3),
      axis.title = element_text(size = text3),
      axis.ticks.y = element_blank(), 
      legend.position = c(0.9, 0.2),
      legend.background = element_blank(),
      legend.box.background = element_rect(color = "black"),
      legend.title = element_text(size = text2),
      legend.text = element_text(size = text2),
      title = element_text(size = text3)
    )
}
```

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pt_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pt_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pt_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pt_mgfr_jodal <- pt_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_pt_mgfr_jodal) <- pt_mgfr_jodal_res_combined$Gene
rankings_pt_mgfr_jodal <- sort(rankings_pt_mgfr_jodal, decreasing = TRUE)
plot(rankings_pt_mgfr_jodal)
min(rankings_pt_mgfr_jodal)
max(rankings_pt_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pt_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pt_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pt_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_pt_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pt_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_pt_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pt_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pt_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pt_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_pt_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pt_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_pt_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pt_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_pt_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pt_mgfr_jodal_filtered, title = "PT Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pt_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_pt_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pt_mgfr_jodal_filtered, title = "PT Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pt_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_pt_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pt_mgfr_jodal, title = "PT Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
pt_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/pt_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pt_mgfr_jodal_bsa_convergence <- map_dfr(
  names(pt_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- pt_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pt_mgfr_jodal_bsa_converged <- pt_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

pt_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(pt_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- pt_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pt_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pt_mgfr_jodal_bsa_res_combined <- pt_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

pt_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(pt_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- pt_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pt_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pt_mgfr_jodal_bsa.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pt_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "PT \u0394 BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/pt_mgfr_jodal_bsa_trtcolors",
                          treatment_results = pt_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano_associations(pt_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "PT \u0394 BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/pt_mgfr_jodal_bsa_trtcolors_logfc0.3",
                          treatment_results = subset(pt_nebula_res_combined_reml_pooled, 
                                                     abs(`logFC_treatmentDapagliflozin:visitPOST`) > 0.3),
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(pt_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "PT BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/pt_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(pt_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "PT BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)
```{r echo = F}
plot_fgsea_transpose <- function(fgsea_res,
                       top_n = 30,
                       title = "Top Enriched Pathways",
                       xmin = 0,
                       xmax = 3,
                       xnudge = (xmax - xmin)/100,
                       text1 = 6.5,
                       text2 = 18,
                       text3 = 20) {
  
  fgsea_res <- fgsea_res %>%
    arrange(pval) %>%
    head(top_n) %>%
    mutate(
      direction = case_when((NES < 0 & pval <= 0.05 ~ "Negative"), 
                            (NES > 0 & pval <= 0.05 ~ "Positive"),
                            (NES < 0 & pval > 0.05 ~ "Negative p > 0.05"), 
                            (NES > 0 & pval > 0.05 ~ "Positive p > 0.05")),
      face = case_when((NES < 0 & pval <= 0.05 ~ "bold"), 
                            (NES > 0 & pval <= 0.05 ~ "bold"),
                            (NES < 0 & pval > 0.05 ~ "plain"), 
                            (NES > 0 & pval > 0.05 ~ "plain")),
      pathway_clean = str_remove(pathway, "^KEGG_"), 
      pathway_clean = str_remove(pathway_clean, "^REACTOME_"), 
      pathway_clean = str_remove(pathway_clean, "^GOBP_"), 
      pathway_clean = str_remove(pathway_clean, "^GOMF_"), 
      pathway_clean = str_replace_all(pathway_clean, "_", " "),
      pathway_clean = str_to_sentence(pathway_clean),
      pathway_clean = str_replace_all(pathway_clean, "\\bi\\b", "I"),
      pathway_clean = str_replace_all(pathway_clean, "\\bii\\b", "II"),
      pathway_clean = str_replace_all(pathway_clean, "\\biii\\b", "III"),
      pathway_clean = str_replace_all(pathway_clean, "\\biv\\b", "IV"),
      pathway_clean = str_replace_all(pathway_clean, "\\bv\\b", "V"),
      pathway_clean = str_replace_all(pathway_clean, regex("\\(immune\\)", ignore_case = TRUE), "(IMMUNE)"),
      pathway_clean = capitalize_acronyms(pathway_clean, acronyms),
      pathway_clean = replace_mixed_case(pathway_clean, special_mixed, special_replacements),
      pathway_clean = paste0(pathway_clean, " (", size, ")")
    ) %>%
    arrange(pval)
  
  fgsea_res$pathway_clean <- reorder(fgsea_res$pathway_clean, -abs(fgsea_res$NES))
  
  fgsea_res %>%
    ggplot(aes(x = abs(NES), y = fct_rev(pathway_clean), label = pathway_clean)) +
    geom_point(aes(size = -log10(pval), color = direction, alpha = 0.8)) +
    # geom_vline(xintercept = 2, linetype = "dashed") +
    geom_text(aes(group = pathway_clean, color = direction, fontface = face), 
              hjust = 0, size = text1, nudge_x = xnudge) +
    scale_size_binned() +
    scale_color_manual(values = c("Positive" = "#c75146", "Negative" = "#2c7da0", 
                                  "Positive p > 0.05" = "#e18c80", "Negative p > 0.05" = "#7ab6d1")) +
    scale_x_continuous(limits = c(xmin, xmax), expand = expansion(mult = c(0, 0))) +
    scale_y_discrete(expand = expansion(add = 1)) +
    labs(
      x = "NES",
      y = "Pathways",
      color = "Direction",
      size = "-log(p-value)",
      title = title
    ) +
    guides(alpha = "none") +
    theme_bw() +
    theme(
      axis.text.y = element_blank(),
      panel.grid = element_blank(),
      axis.text.x = element_text(size = text3),
      axis.title = element_text(size = text3),
      axis.ticks.y = element_blank(), 
      legend.position = c(0.9, 0.2),
      legend.background = element_blank(),
      legend.box.background = element_rect(color = "black"),
      legend.title = element_text(size = text2),
      legend.text = element_text(size = text2),
      title = element_text(size = text3)
    )
}
```

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pt_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pt_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pt_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pt_mgfr_jodal_bsa <- pt_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_pt_mgfr_jodal_bsa) <- pt_mgfr_jodal_bsa_res_combined$Gene
rankings_pt_mgfr_jodal_bsa <- sort(rankings_pt_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_pt_mgfr_jodal_bsa)
min(rankings_pt_mgfr_jodal_bsa)
max(rankings_pt_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pt_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pt_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pt_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_pt_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pt_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_pt_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pt_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pt_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pt_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_pt_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pt_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_pt_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pt_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_pt_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pt_mgfr_jodal_bsa_filtered, title = "PT Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pt_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_pt_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pt_mgfr_jodal_bsa_filtered, title = "PT Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pt_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_pt_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pt_mgfr_jodal_bsa_filtered, title = "PT Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
pt_tir_res <- s3readRDS('associations/nebula/tir/pt_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pt_tir_convergence <- map_dfr(
  names(pt_tir_res),
  function(gene_name) {
    converged <- pt_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pt_tir_converged <- pt_tir_convergence %>%
  filter(Convergence_Code >=-10)

pt_tir_res_combined <- map_dfr(
  names(pt_tir_res),
  function(gene_name) {
    df <- pt_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pt_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pt_tir_res_combined <- pt_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

pt_tir_res_combined_disp <- map_dfr(
  names(pt_tir_res),
  function(gene_name) {
    df <- pt_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pt_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pt_tir.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pt_tir_res_combined, 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "PT \u0394 TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/pt_tir_trtcolors",
                          treatment_results = pt_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR")
```


```{r echo =F, eval = F}
plot_volcano(pt_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "PT TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/pt_tir",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")

plot_volcano(pt_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "PT TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_tir_fdr",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)
```{r echo = F}
plot_fgsea_transpose <- function(fgsea_res,
                       top_n = 30,
                       title = "Top Enriched Pathways",
                       xmin = 0,
                       xmax = 3,
                       xnudge = (xmax - xmin)/100,
                       text1 = 6.5,
                       text2 = 18,
                       text3 = 20) {
  
  fgsea_res <- fgsea_res %>%
    arrange(pval) %>%
    head(top_n) %>%
    mutate(
      direction = case_when((NES < 0 & pval <= 0.05 ~ "Negative"), 
                            (NES > 0 & pval <= 0.05 ~ "Positive"),
                            (NES < 0 & pval > 0.05 ~ "Negative p > 0.05"), 
                            (NES > 0 & pval > 0.05 ~ "Positive p > 0.05")),
      face = case_when((NES < 0 & pval <= 0.05 ~ "bold"), 
                            (NES > 0 & pval <= 0.05 ~ "bold"),
                            (NES < 0 & pval > 0.05 ~ "plain"), 
                            (NES > 0 & pval > 0.05 ~ "plain")),
      pathway_clean = str_remove(pathway, "^KEGG_"), 
      pathway_clean = str_remove(pathway_clean, "^REACTOME_"), 
      pathway_clean = str_remove(pathway_clean, "^GOBP_"), 
      pathway_clean = str_remove(pathway_clean, "^GOMF_"), 
      pathway_clean = str_replace_all(pathway_clean, "_", " "),
      pathway_clean = str_to_sentence(pathway_clean),
      pathway_clean = str_replace_all(pathway_clean, "\\bi\\b", "I"),
      pathway_clean = str_replace_all(pathway_clean, "\\bii\\b", "II"),
      pathway_clean = str_replace_all(pathway_clean, "\\biii\\b", "III"),
      pathway_clean = str_replace_all(pathway_clean, "\\biv\\b", "IV"),
      pathway_clean = str_replace_all(pathway_clean, "\\bv\\b", "V"),
      pathway_clean = str_replace_all(pathway_clean, regex("\\(immune\\)", ignore_case = TRUE), "(IMMUNE)"),
      pathway_clean = capitalize_acronyms(pathway_clean, acronyms),
      pathway_clean = replace_mixed_case(pathway_clean, special_mixed, special_replacements),
      pathway_clean = paste0(pathway_clean, " (", size, ")")
    ) %>%
    arrange(pval)
  
  fgsea_res$pathway_clean <- reorder(fgsea_res$pathway_clean, -abs(fgsea_res$NES))
  
  fgsea_res %>%
    ggplot(aes(x = abs(NES), y = fct_rev(pathway_clean), label = pathway_clean)) +
    geom_point(aes(size = -log10(pval), color = direction, alpha = 0.8)) +
    # geom_vline(xintercept = 2, linetype = "dashed") +
    geom_text(aes(group = pathway_clean, color = direction, fontface = face), 
              hjust = 0, size = text1, nudge_x = xnudge) +
    scale_size_binned() +
    scale_color_manual(values = c("Positive" = "#c75146", "Negative" = "#2c7da0", 
                                  "Positive p > 0.05" = "#e18c80", "Negative p > 0.05" = "#7ab6d1")) +
    scale_x_continuous(limits = c(xmin, xmax), expand = expansion(mult = c(0, 0))) +
    scale_y_discrete(expand = expansion(add = 1)) +
    labs(
      x = "NES",
      y = "Pathways",
      color = "Direction",
      size = "-log(p-value)",
      title = title
    ) +
    guides(alpha = "none") +
    theme_bw() +
    theme(
      axis.text.y = element_blank(),
      panel.grid = element_blank(),
      axis.text.x = element_text(size = text3),
      axis.title = element_text(size = text3),
      axis.ticks.y = element_blank(), 
      legend.position = c(0.9, 0.2),
      legend.background = element_blank(),
      legend.box.background = element_rect(color = "black"),
      legend.title = element_text(size = text2),
      legend.text = element_text(size = text2),
      title = element_text(size = text3)
    )
}
```

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pt_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pt_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pt_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pt_tir <- pt_tir_res_combined$logFC_tir_delta
names(rankings_pt_tir) <- pt_tir_res_combined$Gene
rankings_pt_tir <- sort(rankings_pt_tir, decreasing = TRUE)
plot(rankings_pt_tir)
min(rankings_pt_tir)
max(rankings_pt_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pt_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pt_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pt_tir <- fgsea(pathways = reactome,
                              stats = rankings_pt_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pt_tir <- fgsea(pathways = go,
                        stats = rankings_pt_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pt_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pt_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pt_tir[, padj < 0.05], na.rm = T), sum(reactome_res_pt_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pt_tir[, padj < 0.05], na.rm = T), sum(go_res_pt_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pt_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_pt_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pt_tir_filtered, title = "PT Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pt_tir_filtered <- filter_redundant_pathways(reactome_res_pt_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pt_tir_filtered, title = "PT Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pt_tir_filtered <- filter_redundant_pathways(go_res_pt_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pt_tir_filtered, title = "PT Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
pt_hba1c_res <- s3readRDS('associations/nebula/hba1c/pt_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pt_hba1c_convergence <- map_dfr(
  names(pt_hba1c_res),
  function(gene_name) {
    converged <- pt_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pt_hba1c_converged <- pt_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

pt_hba1c_res_combined <- map_dfr(
  names(pt_hba1c_res),
  function(gene_name) {
    df <- pt_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pt_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pt_hba1c_res_combined <- pt_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

pt_hba1c_res_combined_disp <- map_dfr(
  names(pt_hba1c_res),
  function(gene_name) {
    df <- pt_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pt_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pt_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pt_hba1c_res_combined, 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "PT \u0394 HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/pt_hba1c_trtcolors",
                          treatment_results = pt_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c")
```


```{r echo =F, eval = F}
plot_volcano(pt_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "PT \u0394 HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/pt_hba1c",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")

plot_volcano(pt_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "PT \u0394 HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_hba1c_fdr",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)
```{r echo = F}
plot_fgsea_transpose <- function(fgsea_res,
                       top_n = 30,
                       title = "Top Enriched Pathways",
                       xmin = 0,
                       xmax = 3,
                       xnudge = (xmax - xmin)/100,
                       text1 = 6.5,
                       text2 = 18,
                       text3 = 20) {
  
  fgsea_res <- fgsea_res %>%
    arrange(pval) %>%
    head(top_n) %>%
    mutate(
      direction = case_when((NES < 0 & pval <= 0.05 ~ "Negative"), 
                            (NES > 0 & pval <= 0.05 ~ "Positive"),
                            (NES < 0 & pval > 0.05 ~ "Negative p > 0.05"), 
                            (NES > 0 & pval > 0.05 ~ "Positive p > 0.05")),
      face = case_when((NES < 0 & pval <= 0.05 ~ "bold"), 
                            (NES > 0 & pval <= 0.05 ~ "bold"),
                            (NES < 0 & pval > 0.05 ~ "plain"), 
                            (NES > 0 & pval > 0.05 ~ "plain")),
      pathway_clean = str_remove(pathway, "^KEGG_"), 
      pathway_clean = str_remove(pathway_clean, "^REACTOME_"), 
      pathway_clean = str_remove(pathway_clean, "^GOBP_"), 
      pathway_clean = str_remove(pathway_clean, "^GOMF_"), 
      pathway_clean = str_replace_all(pathway_clean, "_", " "),
      pathway_clean = str_to_sentence(pathway_clean),
      pathway_clean = str_replace_all(pathway_clean, "\\bi\\b", "I"),
      pathway_clean = str_replace_all(pathway_clean, "\\bii\\b", "II"),
      pathway_clean = str_replace_all(pathway_clean, "\\biii\\b", "III"),
      pathway_clean = str_replace_all(pathway_clean, "\\biv\\b", "IV"),
      pathway_clean = str_replace_all(pathway_clean, "\\bv\\b", "V"),
      pathway_clean = str_replace_all(pathway_clean, regex("\\(immune\\)", ignore_case = TRUE), "(IMMUNE)"),
      pathway_clean = capitalize_acronyms(pathway_clean, acronyms),
      pathway_clean = replace_mixed_case(pathway_clean, special_mixed, special_replacements),
      pathway_clean = paste0(pathway_clean, " (", size, ")")
    ) %>%
    arrange(pval)
  
  fgsea_res$pathway_clean <- reorder(fgsea_res$pathway_clean, -abs(fgsea_res$NES))
  
  fgsea_res %>%
    ggplot(aes(x = abs(NES), y = fct_rev(pathway_clean), label = pathway_clean)) +
    geom_point(aes(size = -log10(pval), color = direction, alpha = 0.8)) +
    # geom_vline(xintercept = 2, linetype = "dashed") +
    geom_text(aes(group = pathway_clean, color = direction, fontface = face), 
              hjust = 0, size = text1, nudge_x = xnudge) +
    scale_size_binned() +
    scale_color_manual(values = c("Positive" = "#c75146", "Negative" = "#2c7da0", 
                                  "Positive p > 0.05" = "#e18c80", "Negative p > 0.05" = "#7ab6d1")) +
    scale_x_continuous(limits = c(xmin, xmax), expand = expansion(mult = c(0, 0))) +
    scale_y_discrete(expand = expansion(add = 1)) +
    labs(
      x = "NES",
      y = "Pathways",
      color = "Direction",
      size = "-log(p-value)",
      title = title
    ) +
    guides(alpha = "none") +
    theme_bw() +
    theme(
      axis.text.y = element_blank(),
      panel.grid = element_blank(),
      axis.text.x = element_text(size = text3),
      axis.title = element_text(size = text3),
      axis.ticks.y = element_blank(), 
      legend.position = c(0.9, 0.2),
      legend.background = element_blank(),
      legend.box.background = element_rect(color = "black"),
      legend.title = element_text(size = text2),
      legend.text = element_text(size = text2),
      title = element_text(size = text3)
    )
}
```

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pt_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pt_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pt_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pt_hba1c <- pt_hba1c_res_combined$logFC_hba1c_delta
names(rankings_pt_hba1c) <- pt_hba1c_res_combined$Gene
rankings_pt_hba1c <- sort(rankings_pt_hba1c, decreasing = TRUE)
plot(rankings_pt_hba1c)
min(rankings_pt_hba1c)
max(rankings_pt_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pt_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pt_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pt_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_pt_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pt_hba1c <- fgsea(pathways = go,
                        stats = rankings_pt_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pt_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pt_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pt_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_pt_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pt_hba1c[, padj < 0.05], na.rm = T), sum(go_res_pt_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pt_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_pt_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pt_hba1c_filtered, title = "PT Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pt_hba1c_filtered <- filter_redundant_pathways(reactome_res_pt_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pt_hba1c_filtered, title = "PT Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pt_hba1c_filtered <- filter_redundant_pathways(go_res_pt_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pt_hba1c, title = "PT Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Weight
```{r echo = F}
# Read in nebula results saved to kopah
pt_weight_res <- s3readRDS('associations/nebula/weight/pt_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pt_weight_convergence <- map_dfr(
  names(pt_weight_res),
  function(gene_name) {
    converged <- pt_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pt_weight_converged <- pt_weight_convergence %>%
  filter(Convergence_Code >=-10)

pt_weight_res_combined <- map_dfr(
  names(pt_weight_res),
  function(gene_name) {
    df <- pt_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pt_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pt_weight_res_combined <- pt_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

pt_weight_res_combined_disp <- map_dfr(
  names(pt_weight_res),
  function(gene_name) {
    df <- pt_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pt_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pt_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pt_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "PT \u0394 Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/pt_weight_trtcolors",
                          treatment_results = pt_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight")
```

```{r echo =F, eval = F}
plot_volcano(pt_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "PT \u0394 Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/pt_weight",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")

plot_volcano(pt_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "PT \u0394 Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_weight_fdr",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")
```

#### GSEA (fgsea)
```{r echo = F}
plot_fgsea_transpose <- function(fgsea_res,
                       top_n = 30,
                       title = "Top Enriched Pathways",
                       xmin = 0,
                       xmax = 3,
                       xnudge = (xmax - xmin)/100,
                       text1 = 6.5,
                       text2 = 18,
                       text3 = 20) {
  
  fgsea_res <- fgsea_res %>%
    arrange(pval) %>%
    head(top_n) %>%
    mutate(
      direction = case_when((NES < 0 & pval <= 0.05 ~ "Negative"), 
                            (NES > 0 & pval <= 0.05 ~ "Positive"),
                            (NES < 0 & pval > 0.05 ~ "Negative p > 0.05"), 
                            (NES > 0 & pval > 0.05 ~ "Positive p > 0.05")),
      face = case_when((NES < 0 & pval <= 0.05 ~ "bold"), 
                            (NES > 0 & pval <= 0.05 ~ "bold"),
                            (NES < 0 & pval > 0.05 ~ "plain"), 
                            (NES > 0 & pval > 0.05 ~ "plain")),
      pathway_clean = str_remove(pathway, "^KEGG_"), 
      pathway_clean = str_remove(pathway_clean, "^REACTOME_"), 
      pathway_clean = str_remove(pathway_clean, "^GOBP_"), 
      pathway_clean = str_remove(pathway_clean, "^GOMF_"), 
      pathway_clean = str_replace_all(pathway_clean, "_", " "),
      pathway_clean = str_to_sentence(pathway_clean),
      pathway_clean = str_replace_all(pathway_clean, "\\bi\\b", "I"),
      pathway_clean = str_replace_all(pathway_clean, "\\bii\\b", "II"),
      pathway_clean = str_replace_all(pathway_clean, "\\biii\\b", "III"),
      pathway_clean = str_replace_all(pathway_clean, "\\biv\\b", "IV"),
      pathway_clean = str_replace_all(pathway_clean, "\\bv\\b", "V"),
      pathway_clean = str_replace_all(pathway_clean, regex("\\(immune\\)", ignore_case = TRUE), "(IMMUNE)"),
      pathway_clean = capitalize_acronyms(pathway_clean, acronyms),
      pathway_clean = replace_mixed_case(pathway_clean, special_mixed, special_replacements),
      pathway_clean = paste0(pathway_clean, " (", size, ")")
    ) %>%
    arrange(pval)
  
  fgsea_res$pathway_clean <- reorder(fgsea_res$pathway_clean, -abs(fgsea_res$NES))
  
  fgsea_res %>%
    ggplot(aes(x = abs(NES), y = fct_rev(pathway_clean), label = pathway_clean)) +
    geom_point(aes(size = -log10(pval), color = direction, alpha = 0.8)) +
    # geom_vline(xintercept = 2, linetype = "dashed") +
    geom_text(aes(group = pathway_clean, color = direction, fontface = face), 
              hjust = 0, size = text1, nudge_x = xnudge) +
    scale_size_binned() +
    scale_color_manual(values = c("Positive" = "#c75146", "Negative" = "#2c7da0", 
                                  "Positive p > 0.05" = "#e18c80", "Negative p > 0.05" = "#7ab6d1")) +
    scale_x_continuous(limits = c(xmin, xmax), expand = expansion(mult = c(0, 0))) +
    scale_y_discrete(expand = expansion(add = 1)) +
    labs(
      x = "NES",
      y = "Pathways",
      color = "Direction",
      size = "-log(p-value)",
      title = title
    ) +
    guides(alpha = "none") +
    theme_bw() +
    theme(
      axis.text.y = element_blank(),
      panel.grid = element_blank(),
      axis.text.x = element_text(size = text3),
      axis.title = element_text(size = text3),
      axis.ticks.y = element_blank(), 
      legend.position = c(0.9, 0.2),
      legend.background = element_blank(),
      legend.box.background = element_rect(color = "black"),
      legend.title = element_text(size = text2),
      legend.text = element_text(size = text2),
      title = element_text(size = text3)
    )
}
```

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pt_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pt_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pt_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pt_weight <- pt_weight_res_combined$logFC_weight_delta
names(rankings_pt_weight) <- pt_weight_res_combined$Gene
rankings_pt_weight <- sort(rankings_pt_weight, decreasing = TRUE)
plot(rankings_pt_weight)
min(rankings_pt_weight)
max(rankings_pt_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pt_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pt_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pt_weight <- fgsea(pathways = reactome,
                              stats = rankings_pt_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pt_weight <- fgsea(pathways = go,
                        stats = rankings_pt_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pt_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pt_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pt_weight[, padj < 0.05], na.rm = T), sum(reactome_res_pt_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pt_weight[, padj < 0.05], na.rm = T), sum(go_res_pt_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pt_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_pt_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pt_weight_filtered, title = "PT Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pt_weight_filtered <- filter_redundant_pathways(reactome_res_pt_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pt_weight_filtered, title = "PT Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pt_weight_filtered <- filter_redundant_pathways(go_res_pt_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pt_weight_filtered, title = "PT Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
pt_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/pt_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pt_avg_c_r2_convergence <- map_dfr(
  names(pt_avg_c_r2_res),
  function(gene_name) {
    converged <- pt_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pt_avg_c_r2_converged <- pt_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

pt_avg_c_r2_res_combined <- map_dfr(
  names(pt_avg_c_r2_res),
  function(gene_name) {
    df <- pt_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pt_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pt_avg_c_r2_res_combined <- pt_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

pt_avg_c_r2_res_combined_disp <- map_dfr(
  names(pt_avg_c_r2_res),
  function(gene_name) {
    df <- pt_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
pt_avg_c_r2_res_combined <- subset(pt_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10)

write.csv(pt_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pt_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pt_avg_c_r2_res_combined, 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "PT avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/pt_avg_c_r2_trtcolors",
                          treatment_results = pt_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(pt_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "PT Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/pt_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(pt_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "PT Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)
```{r echo = F}
plot_fgsea_transpose <- function(fgsea_res,
                       top_n = 30,
                       title = "Top Enriched Pathways",
                       xmin = 0,
                       xmax = 3,
                       xnudge = (xmax - xmin)/100,
                       text1 = 6.5,
                       text2 = 18,
                       text3 = 20) {
  
  fgsea_res <- fgsea_res %>%
    arrange(pval) %>%
    head(top_n) %>%
    mutate(
      direction = case_when((NES < 0 & pval <= 0.05 ~ "Negative"), 
                            (NES > 0 & pval <= 0.05 ~ "Positive"),
                            (NES < 0 & pval > 0.05 ~ "Negative p > 0.05"), 
                            (NES > 0 & pval > 0.05 ~ "Positive p > 0.05")),
      face = case_when((NES < 0 & pval <= 0.05 ~ "bold"), 
                            (NES > 0 & pval <= 0.05 ~ "bold"),
                            (NES < 0 & pval > 0.05 ~ "plain"), 
                            (NES > 0 & pval > 0.05 ~ "plain")),
      pathway_clean = str_remove(pathway, "^KEGG_"), 
      pathway_clean = str_remove(pathway_clean, "^REACTOME_"), 
      pathway_clean = str_remove(pathway_clean, "^GOBP_"), 
      pathway_clean = str_remove(pathway_clean, "^GOMF_"), 
      pathway_clean = str_replace_all(pathway_clean, "_", " "),
      pathway_clean = str_to_sentence(pathway_clean),
      pathway_clean = str_replace_all(pathway_clean, "\\bi\\b", "I"),
      pathway_clean = str_replace_all(pathway_clean, "\\bii\\b", "II"),
      pathway_clean = str_replace_all(pathway_clean, "\\biii\\b", "III"),
      pathway_clean = str_replace_all(pathway_clean, "\\biv\\b", "IV"),
      pathway_clean = str_replace_all(pathway_clean, "\\bv\\b", "V"),
      pathway_clean = str_replace_all(pathway_clean, regex("\\(immune\\)", ignore_case = TRUE), "(IMMUNE)"),
      pathway_clean = capitalize_acronyms(pathway_clean, acronyms),
      pathway_clean = replace_mixed_case(pathway_clean, special_mixed, special_replacements),
      pathway_clean = paste0(pathway_clean, " (", size, ")")
    ) %>%
    arrange(pval)
  
  fgsea_res$pathway_clean <- reorder(fgsea_res$pathway_clean, -abs(fgsea_res$NES))
  
  fgsea_res %>%
    ggplot(aes(x = abs(NES), y = fct_rev(pathway_clean), label = pathway_clean)) +
    geom_point(aes(size = -log10(pval), color = direction, alpha = 0.8)) +
    # geom_vline(xintercept = 2, linetype = "dashed") +
    geom_text(aes(group = pathway_clean, color = direction, fontface = face), 
              hjust = 0, size = text1, nudge_x = xnudge) +
    scale_size_binned() +
    scale_color_manual(values = c("Positive" = "#c75146", "Negative" = "#2c7da0", 
                                  "Positive p > 0.05" = "#e18c80", "Negative p > 0.05" = "#7ab6d1")) +
    scale_x_continuous(limits = c(xmin, xmax), expand = expansion(mult = c(0, 0))) +
    scale_y_discrete(expand = expansion(add = 1)) +
    labs(
      x = "NES",
      y = "Pathways",
      color = "Direction",
      size = "-log(p-value)",
      title = title
    ) +
    guides(alpha = "none") +
    theme_bw() +
    theme(
      axis.text.y = element_blank(),
      panel.grid = element_blank(),
      axis.text.x = element_text(size = text3),
      axis.title = element_text(size = text3),
      axis.ticks.y = element_blank(), 
      legend.position = c(0.9, 0.2),
      legend.background = element_blank(),
      legend.box.background = element_rect(color = "black"),
      legend.title = element_text(size = text2),
      legend.text = element_text(size = text2),
      title = element_text(size = text3)
    )
}
```

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pt_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pt_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pt_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pt_avg_c_r2 <- pt_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_pt_avg_c_r2) <- pt_avg_c_r2_res_combined$Gene
rankings_pt_avg_c_r2 <- sort(rankings_pt_avg_c_r2, decreasing = TRUE)
plot(rankings_pt_avg_c_r2)
min(rankings_pt_avg_c_r2)
max(rankings_pt_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pt_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pt_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pt_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_pt_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pt_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_pt_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pt_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pt_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pt_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_pt_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pt_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_pt_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pt_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_pt_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pt_avg_c_r2_filtered, title = "PT Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pt_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_pt_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pt_avg_c_r2, title = "PT Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pt_avg_c_r2_filtered <- filter_redundant_pathways(go_res_pt_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pt_avg_c_r2_filtered, title = "PT Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```



## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
pt_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/pt_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pt_avg_k_r2_convergence <- map_dfr(
  names(pt_avg_k_r2_res),
  function(gene_name) {
    converged <- pt_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pt_avg_k_r2_converged <- pt_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

pt_avg_k_r2_res_combined <- map_dfr(
  names(pt_avg_k_r2_res),
  function(gene_name) {
    df <- pt_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pt_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pt_avg_k_r2_res_combined <- pt_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

pt_avg_k_r2_res_combined_disp <- map_dfr(
  names(pt_avg_k_r2_res),
  function(gene_name) {
    df <- pt_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pt_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pt_avg_k_r2.csv", row.names = F)
```

```{r echo = F}
plot_volcano_associations(subset(pt_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "PT avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/pt_avg_k_r2_trtcolors",
                          treatment_results = pt_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(pt_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "PT Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/pt_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(pt_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "PT Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)
```{r echo = F}
plot_fgsea_transpose <- function(fgsea_res,
                       top_n = 30,
                       title = "Top Enriched Pathways",
                       xmin = 0,
                       xmax = 3,
                       xnudge = (xmax - xmin)/100,
                       text1 = 6.5,
                       text2 = 18,
                       text3 = 20) {
  
  fgsea_res <- fgsea_res %>%
    arrange(pval) %>%
    head(top_n) %>%
    mutate(
      direction = case_when((NES < 0 & pval <= 0.05 ~ "Negative"), 
                            (NES > 0 & pval <= 0.05 ~ "Positive"),
                            (NES < 0 & pval > 0.05 ~ "Negative p > 0.05"), 
                            (NES > 0 & pval > 0.05 ~ "Positive p > 0.05")),
      face = case_when((NES < 0 & pval <= 0.05 ~ "bold"), 
                            (NES > 0 & pval <= 0.05 ~ "bold"),
                            (NES < 0 & pval > 0.05 ~ "plain"), 
                            (NES > 0 & pval > 0.05 ~ "plain")),
      pathway_clean = str_remove(pathway, "^KEGG_"), 
      pathway_clean = str_remove(pathway_clean, "^REACTOME_"), 
      pathway_clean = str_remove(pathway_clean, "^GOBP_"), 
      pathway_clean = str_remove(pathway_clean, "^GOMF_"), 
      pathway_clean = str_replace_all(pathway_clean, "_", " "),
      pathway_clean = str_to_sentence(pathway_clean),
      pathway_clean = str_replace_all(pathway_clean, "\\bi\\b", "I"),
      pathway_clean = str_replace_all(pathway_clean, "\\bii\\b", "II"),
      pathway_clean = str_replace_all(pathway_clean, "\\biii\\b", "III"),
      pathway_clean = str_replace_all(pathway_clean, "\\biv\\b", "IV"),
      pathway_clean = str_replace_all(pathway_clean, "\\bv\\b", "V"),
      pathway_clean = str_replace_all(pathway_clean, regex("\\(immune\\)", ignore_case = TRUE), "(IMMUNE)"),
      pathway_clean = capitalize_acronyms(pathway_clean, acronyms),
      pathway_clean = replace_mixed_case(pathway_clean, special_mixed, special_replacements),
      pathway_clean = paste0(pathway_clean, " (", size, ")")
    ) %>%
    arrange(pval)
  
  fgsea_res$pathway_clean <- reorder(fgsea_res$pathway_clean, -abs(fgsea_res$NES))
  
  fgsea_res %>%
    ggplot(aes(x = abs(NES), y = fct_rev(pathway_clean), label = pathway_clean)) +
    geom_point(aes(size = -log10(pval), color = direction, alpha = 0.8)) +
    # geom_vline(xintercept = 2, linetype = "dashed") +
    geom_text(aes(group = pathway_clean, color = direction, fontface = face), 
              hjust = 0, size = text1, nudge_x = xnudge) +
    scale_size_binned() +
    scale_color_manual(values = c("Positive" = "#c75146", "Negative" = "#2c7da0", 
                                  "Positive p > 0.05" = "#e18c80", "Negative p > 0.05" = "#7ab6d1")) +
    scale_x_continuous(limits = c(xmin, xmax), expand = expansion(mult = c(0, 0))) +
    scale_y_discrete(expand = expansion(add = 1)) +
    labs(
      x = "NES",
      y = "Pathways",
      color = "Direction",
      size = "-log(p-value)",
      title = title
    ) +
    guides(alpha = "none") +
    theme_bw() +
    theme(
      axis.text.y = element_blank(),
      panel.grid = element_blank(),
      axis.text.x = element_text(size = text3),
      axis.title = element_text(size = text3),
      axis.ticks.y = element_blank(), 
      legend.position = c(0.9, 0.2),
      legend.background = element_blank(),
      legend.box.background = element_rect(color = "black"),
      legend.title = element_text(size = text2),
      legend.text = element_text(size = text2),
      title = element_text(size = text3)
    )
}
```

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pt_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pt_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pt_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pt_avg_k_r2 <- pt_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_pt_avg_k_r2) <- pt_avg_k_r2_res_combined$Gene
rankings_pt_avg_k_r2 <- sort(rankings_pt_avg_k_r2, decreasing = TRUE)
plot(rankings_pt_avg_k_r2)
min(rankings_pt_avg_k_r2)
max(rankings_pt_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pt_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pt_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pt_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_pt_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pt_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_pt_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pt_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pt_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pt_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_pt_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pt_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_pt_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pt_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_pt_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pt_avg_k_r2_filtered, title = "PT Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pt_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_pt_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pt_avg_k_r2_filtered, title = "PT Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pt_avg_k_r2_filtered <- filter_redundant_pathways(go_res_pt_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pt_avg_k_r2_filtered, title = "PT Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


# TAL
```{r echo = F}
nebula_tal_results_list_reml_pooled <- s3readRDS('TAL/nebula/tal_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
tal_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_tal_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_tal_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

tal_nebula_converged_reml_pooled <- tal_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

tal_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_tal_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_tal_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% tal_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

tal_nebula_res_combined_reml_pooled <- tal_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

tal_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_tal_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_tal_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

```

## mGFR (Raw)
```{r echo = F}
# Read in nebula results saved to kopah
tal_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/tal_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
tal_mgfr_jodal_convergence <- map_dfr(
  names(tal_mgfr_jodal_res),
  function(gene_name) {
    converged <- tal_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

tal_mgfr_jodal_converged <- tal_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

tal_mgfr_jodal_res_combined <- map_dfr(
  names(tal_mgfr_jodal_res),
  function(gene_name) {
    df <- tal_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% tal_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

tal_mgfr_jodal_res_combined <- tal_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

tal_mgfr_jodal_res_combined_disp <- map_dfr(
  names(tal_mgfr_jodal_res),
  function(gene_name) {
    df <- tal_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
write.csv(tal_mgfr_jodal_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/tal_mgfr_jodal.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(tal_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "TAL Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/tal_mgfr_jodal_trtcolors",
                          treatment_results = tal_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(tal_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "TAL Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/tal_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(tal_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "TAL Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(tal_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(tal_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(tal_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_tal_mgfr_jodal <- tal_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_tal_mgfr_jodal) <- tal_mgfr_jodal_res_combined$Gene
rankings_tal_mgfr_jodal <- sort(rankings_tal_mgfr_jodal, decreasing = TRUE)
plot(rankings_tal_mgfr_jodal)
min(rankings_tal_mgfr_jodal)
max(rankings_tal_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_tal_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_tal_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_tal_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_tal_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_tal_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_tal_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_tal_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_tal_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_tal_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_tal_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_tal_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_tal_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_tal_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_tal_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_tal_mgfr_jodal, title = "TAL Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_tal_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_tal_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_tal_mgfr_jodal_filtered, title = "TAL Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_tal_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_tal_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_tal_mgfr_jodal, title = "TAL Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
tal_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/tal_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
tal_mgfr_jodal_bsa_convergence <- map_dfr(
  names(tal_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- tal_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

tal_mgfr_jodal_bsa_converged <- tal_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

tal_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(tal_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- tal_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% tal_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

tal_mgfr_jodal_bsa_res_combined <- tal_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

tal_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(tal_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- tal_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(tal_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/tal_mgfr_jodal_bsa.csv", row.names = F)

```


```{r echo = F}
plot_volcano_associations(tal_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "TAL BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/tal_mgfr_jodal_bsa_trtcolors",
                          treatment_results = tal_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(tal_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "TAL BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/tal_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(tal_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "TAL BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(tal_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(tal_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(tal_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_tal_mgfr_jodal_bsa <- tal_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_tal_mgfr_jodal_bsa) <- tal_mgfr_jodal_bsa_res_combined$Gene
rankings_tal_mgfr_jodal_bsa <- sort(rankings_tal_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_tal_mgfr_jodal_bsa)
min(rankings_tal_mgfr_jodal_bsa)
max(rankings_tal_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_tal_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_tal_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_tal_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_tal_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_tal_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_tal_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_tal_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_tal_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_tal_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_tal_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_tal_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_tal_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_tal_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_tal_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_tal_mgfr_jodal_bsa_filtered, title = "TAL Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_tal_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_tal_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_tal_mgfr_jodal_bsa_filtered, title = "TAL Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_tal_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_tal_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_tal_mgfr_jodal_bsa_filtered, title = "TAL Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
tal_tir_res <- s3readRDS('associations/nebula/tir/tal_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
tal_tir_convergence <- map_dfr(
  names(tal_tir_res),
  function(gene_name) {
    converged <- tal_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

tal_tir_converged <- tal_tir_convergence %>%
  filter(Convergence_Code >=-10)

tal_tir_res_combined <- map_dfr(
  names(tal_tir_res),
  function(gene_name) {
    df <- tal_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% tal_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

tal_tir_res_combined <- tal_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

tal_tir_res_combined_disp <- map_dfr(
  names(tal_tir_res),
  function(gene_name) {
    df <- tal_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(tal_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/tal_tir.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(tal_tir_res_combined, 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "TAL TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/tal_tir_trtcolors",
                          treatment_results = tal_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(tal_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "TAL TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/tal_tir",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")

plot_volcano(tal_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "TAL TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_tir_fdr",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(tal_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(tal_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(tal_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_tal_tir <- tal_tir_res_combined$logFC_tir_delta
names(rankings_tal_tir) <- tal_tir_res_combined$Gene
rankings_tal_tir <- sort(rankings_tal_tir, decreasing = TRUE)
plot(rankings_tal_tir)
min(rankings_tal_tir)
max(rankings_tal_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_tal_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_tal_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_tal_tir <- fgsea(pathways = reactome,
                              stats = rankings_tal_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_tal_tir <- fgsea(pathways = go,
                        stats = rankings_tal_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_tal_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_tal_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_tal_tir[, padj < 0.05], na.rm = T), sum(reactome_res_tal_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_tal_tir[, padj < 0.05], na.rm = T), sum(go_res_tal_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_tal_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_tal_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_tal_tir_filtered, title = "TAL Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_tal_tir_filtered <- filter_redundant_pathways(reactome_res_tal_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_tal_tir_filtered, title = "TAL Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_tal_tir_filtered <- filter_redundant_pathways(go_res_tal_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_tal_tir_filtered, title = "TAL Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
tal_hba1c_res <- s3readRDS('associations/nebula/hba1c/tal_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
tal_hba1c_convergence <- map_dfr(
  names(tal_hba1c_res),
  function(gene_name) {
    converged <- tal_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

tal_hba1c_converged <- tal_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

tal_hba1c_res_combined <- map_dfr(
  names(tal_hba1c_res),
  function(gene_name) {
    df <- tal_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% tal_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

tal_hba1c_res_combined <- tal_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

tal_hba1c_res_combined_disp <- map_dfr(
  names(tal_hba1c_res),
  function(gene_name) {
    df <- tal_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(tal_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/tal_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(tal_hba1c_res_combined, 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "TAL HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/tal_hba1c_trtcolors",
                          treatment_results = tal_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(tal_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "TAL HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/tal_hba1c",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")

plot_volcano(tal_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "TAL HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_hba1c_fdr",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(tal_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(tal_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(tal_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_tal_hba1c <- tal_hba1c_res_combined$logFC_hba1c_delta
names(rankings_tal_hba1c) <- tal_hba1c_res_combined$Gene
rankings_tal_hba1c <- sort(rankings_tal_hba1c, decreasing = TRUE)
plot(rankings_tal_hba1c)
min(rankings_tal_hba1c)
max(rankings_tal_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_tal_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_tal_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_tal_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_tal_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_tal_hba1c <- fgsea(pathways = go,
                        stats = rankings_tal_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_tal_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_tal_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_tal_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_tal_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_tal_hba1c[, padj < 0.05], na.rm = T), sum(go_res_tal_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_tal_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_tal_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_tal_hba1c_filtered, title = "TAL Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_tal_hba1c_filtered <- filter_redundant_pathways(reactome_res_tal_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_tal_hba1c_filtered, title = "TAL Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_tal_hba1c_filtered <- filter_redundant_pathways(go_res_tal_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_tal_hba1c_filtered, title = "TAL Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## Weight
```{r echo = F}
# Read in nebula results saved to kopah
tal_weight_res <- s3readRDS('associations/nebula/weight/tal_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
tal_weight_convergence <- map_dfr(
  names(tal_weight_res),
  function(gene_name) {
    converged <- tal_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

tal_weight_converged <- tal_weight_convergence %>%
  filter(Convergence_Code >=-10)

tal_weight_res_combined <- map_dfr(
  names(tal_weight_res),
  function(gene_name) {
    df <- tal_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% tal_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

tal_weight_res_combined <- tal_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

tal_weight_res_combined_disp <- map_dfr(
  names(tal_weight_res),
  function(gene_name) {
    df <- tal_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(tal_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/tal_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(tal_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "TAL Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/tal_weight_trtcolors",
                          treatment_results = tal_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight")
```

```{r echo =F, eval = F}
plot_volcano(tal_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "TAL Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/tal_weight",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")

plot_volcano(tal_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "TAL Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_weight_fdr",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(tal_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(tal_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(tal_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_tal_weight <- tal_weight_res_combined$logFC_weight_delta
names(rankings_tal_weight) <- tal_weight_res_combined$Gene
rankings_tal_weight <- sort(rankings_tal_weight, decreasing = TRUE)
plot(rankings_tal_weight)
min(rankings_tal_weight)
max(rankings_tal_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_tal_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_tal_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_tal_weight <- fgsea(pathways = reactome,
                              stats = rankings_tal_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_tal_weight <- fgsea(pathways = go,
                        stats = rankings_tal_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_tal_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_tal_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_tal_weight[, padj < 0.05], na.rm = T), sum(reactome_res_tal_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_tal_weight[, padj < 0.05], na.rm = T), sum(go_res_tal_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_tal_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_tal_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_tal_weight_filtered, title = "TAL Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_tal_weight_filtered <- filter_redundant_pathways(reactome_res_tal_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_tal_weight, title = "TAL Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_tal_weight_filtered <- filter_redundant_pathways(go_res_tal_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_tal_weight_filtered, title = "TAL Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
tal_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/tal_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
tal_avg_c_r2_convergence <- map_dfr(
  names(tal_avg_c_r2_res),
  function(gene_name) {
    converged <- tal_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

tal_avg_c_r2_converged <- tal_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

tal_avg_c_r2_res_combined <- map_dfr(
  names(tal_avg_c_r2_res),
  function(gene_name) {
    df <- tal_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% tal_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

tal_avg_c_r2_res_combined <- tal_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

tal_avg_c_r2_res_combined_disp <- map_dfr(
  names(tal_avg_c_r2_res),
  function(gene_name) {
    df <- tal_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
tal_avg_c_r2_res_combined<- subset(tal_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10)

write.csv(tal_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/tal_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(subset(tal_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-20), 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "TAL avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/tal_avg_c_r2_trtcolors",
                          treatment_results = tal_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(tal_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "TAL Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/tal_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(tal_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "TAL Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(tal_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(tal_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(tal_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_tal_avg_c_r2 <- tal_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_tal_avg_c_r2) <- tal_avg_c_r2_res_combined$Gene
rankings_tal_avg_c_r2 <- sort(rankings_tal_avg_c_r2, decreasing = TRUE)
plot(rankings_tal_avg_c_r2)
min(rankings_tal_avg_c_r2)
max(rankings_tal_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_tal_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_tal_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_tal_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_tal_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_tal_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_tal_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_tal_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_tal_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_tal_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_tal_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_tal_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_tal_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_tal_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_tal_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_tal_avg_c_r2_filtered, title = "TAL Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_tal_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_tal_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_tal_avg_c_r2_filtered, title = "TAL Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_tal_avg_c_r2_filtered <- filter_redundant_pathways(go_res_tal_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_tal_avg_c_r2_filtered, title = "TAL Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
tal_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/tal_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
tal_avg_k_r2_convergence <- map_dfr(
  names(tal_avg_k_r2_res),
  function(gene_name) {
    converged <- tal_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

tal_avg_k_r2_converged <- tal_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

tal_avg_k_r2_res_combined <- map_dfr(
  names(tal_avg_k_r2_res),
  function(gene_name) {
    df <- tal_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% tal_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

tal_avg_k_r2_res_combined <- tal_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

tal_avg_k_r2_res_combined_disp <- map_dfr(
  names(tal_avg_k_r2_res),
  function(gene_name) {
    df <- tal_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

tal_avg_k_r2_res_combined <- subset(tal_avg_k_r2_res_combined, logFC_avg_k_r2_delta > -10)

write.csv(tal_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/tal_avg_k_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(subset(tal_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "TAL avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/tal_avg_k_r2_trtcolors",
                          treatment_results = tal_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(subset(tal_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "TAL Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/tal_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(tal_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "TAL Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(tal_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(tal_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(tal_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_tal_avg_k_r2 <- tal_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_tal_avg_k_r2) <- tal_avg_k_r2_res_combined$Gene
rankings_tal_avg_k_r2 <- sort(rankings_tal_avg_k_r2, decreasing = TRUE)
plot(rankings_tal_avg_k_r2)
min(rankings_tal_avg_k_r2)
max(rankings_tal_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_tal_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_tal_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_tal_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_tal_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_tal_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_tal_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_tal_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_tal_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_tal_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_tal_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_tal_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_tal_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_tal_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_tal_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_tal_avg_k_r2_filtered, title = "TAL Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_tal_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_tal_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_tal_avg_k_r2_filtered, title = "TAL Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_tal_avg_k_r2_filtered <- filter_redundant_pathways(go_res_tal_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_tal_avg_k_r2_filtered, title = "TAL Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

# Immune Cells

```{r echo = F}
nebula_immune_results_list_reml_pooled <- s3readRDS('Immune/nebula/immune_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_immune_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_immune_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_nebula_converged_reml_pooled <- immune_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

immune_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_immune_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_immune_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_nebula_res_combined_reml_pooled <- immune_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

immune_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_immune_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_immune_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

```
## mGFR (Raw)
```{r echo = F}
# Read in nebula results saved to kopah
immune_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/immune_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_mgfr_jodal_convergence <- map_dfr(
  names(immune_mgfr_jodal_res),
  function(gene_name) {
    converged <- immune_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_mgfr_jodal_converged <- immune_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

immune_mgfr_jodal_res_combined <- map_dfr(
  names(immune_mgfr_jodal_res),
  function(gene_name) {
    df <- immune_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_mgfr_jodal_res_combined <- immune_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

immune_mgfr_jodal_res_combined_disp <- map_dfr(
  names(immune_mgfr_jodal_res),
  function(gene_name) {
    df <- immune_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
write.csv(immune_mgfr_jodal_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_mgfr_jodal.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "Immune Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/immune_mgfr_jodal_trtcolors",
                          treatment_results = immune_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(immune_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "Immune Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/immune_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(immune_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "Immune Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_mgfr_jodal <- immune_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_immune_mgfr_jodal) <- immune_mgfr_jodal_res_combined$Gene
rankings_immune_mgfr_jodal <- sort(rankings_immune_mgfr_jodal, decreasing = TRUE)
plot(rankings_immune_mgfr_jodal)
min(rankings_immune_mgfr_jodal)
max(rankings_immune_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_immune_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_immune_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_immune_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_immune_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_mgfr_jodal_filtered, title = "Immune Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_immune_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_mgfr_jodal_filtered, title = "Immune Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_immune_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_mgfr_jodal, title = "Immune Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
immune_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/immune_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_mgfr_jodal_bsa_convergence <- map_dfr(
  names(immune_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- immune_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_mgfr_jodal_bsa_converged <- immune_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

immune_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(immune_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- immune_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_mgfr_jodal_bsa_res_combined <- immune_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

immune_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(immune_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- immune_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_mgfr_jodal_bsa.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "Immune BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/immune_mgfr_jodal_bsa_trtcolors",
                          treatment_results = immune_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(immune_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "Immune BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/immune_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(immune_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "Immune BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_mgfr_jodal_bsa <- immune_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_immune_mgfr_jodal_bsa) <- immune_mgfr_jodal_bsa_res_combined$Gene
rankings_immune_mgfr_jodal_bsa <- sort(rankings_immune_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_immune_mgfr_jodal_bsa)
min(rankings_immune_mgfr_jodal_bsa)
max(rankings_immune_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_immune_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_immune_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_immune_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_immune_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_mgfr_jodal_bsa_filtered, title = "Immune Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_immune_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_mgfr_jodal_bsa_filtered, title = "Immune Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_immune_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_mgfr_jodal_bsa_filtered, title = "Immune Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
immune_tir_res <- s3readRDS('associations/nebula/tir/immune_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_tir_convergence <- map_dfr(
  names(immune_tir_res),
  function(gene_name) {
    converged <- immune_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_tir_converged <- immune_tir_convergence %>%
  filter(Convergence_Code >=-10)

immune_tir_res_combined <- map_dfr(
  names(immune_tir_res),
  function(gene_name) {
    df <- immune_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_tir_res_combined <- immune_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

immune_tir_res_combined_disp <- map_dfr(
  names(immune_tir_res),
  function(gene_name) {
    df <- immune_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_tir.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_tir_res_combined, 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "Immune TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/immune_tir_trtcolors",
                          treatment_results = immune_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR")
```

```{r echo =F, eval = F}
plot_volcano(immune_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "Immune TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/immune_tir",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")

plot_volcano(immune_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "Immune TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_tir_fdr",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_tir <- immune_tir_res_combined$logFC_tir_delta
names(rankings_immune_tir) <- immune_tir_res_combined$Gene
rankings_immune_tir <- sort(rankings_immune_tir, decreasing = TRUE)
plot(rankings_immune_tir)
min(rankings_immune_tir)
max(rankings_immune_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_tir <- fgsea(pathways = reactome,
                              stats = rankings_immune_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_tir <- fgsea(pathways = go,
                        stats = rankings_immune_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_tir[, padj < 0.05], na.rm = T), sum(reactome_res_immune_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_tir[, padj < 0.05], na.rm = T), sum(go_res_immune_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_tir_filtered, title = "Immune Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_tir_filtered <- filter_redundant_pathways(reactome_res_immune_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_tir_filtered, title = "Immune Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_tir_filtered <- filter_redundant_pathways(go_res_immune_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_tir_filtered, title = "Immune Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
immune_hba1c_res <- s3readRDS('associations/nebula/hba1c/immune_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_hba1c_convergence <- map_dfr(
  names(immune_hba1c_res),
  function(gene_name) {
    converged <- immune_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_hba1c_converged <- immune_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

immune_hba1c_res_combined <- map_dfr(
  names(immune_hba1c_res),
  function(gene_name) {
    df <- immune_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_hba1c_res_combined <- immune_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

immune_hba1c_res_combined_disp <- map_dfr(
  names(immune_hba1c_res),
  function(gene_name) {
    df <- immune_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_hba1c_res_combined, 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "Immune HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/immune_hba1c_trtcolors",
                          treatment_results = immune_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c")
```

```{r echo =F, eval = F}
plot_volcano(immune_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "Immune HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/immune_hba1c",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")

plot_volcano(immune_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "Immune HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_hba1c_fdr",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_hba1c <- immune_hba1c_res_combined$logFC_hba1c_delta
names(rankings_immune_hba1c) <- immune_hba1c_res_combined$Gene
rankings_immune_hba1c <- sort(rankings_immune_hba1c, decreasing = TRUE)
plot(rankings_immune_hba1c)
min(rankings_immune_hba1c)
max(rankings_immune_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_immune_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_hba1c <- fgsea(pathways = go,
                        stats = rankings_immune_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_immune_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_hba1c[, padj < 0.05], na.rm = T), sum(go_res_immune_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_hba1c_filtered, title = "Immune Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_hba1c_filtered <- filter_redundant_pathways(reactome_res_immune_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_hba1c, title = "Immune Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_hba1c_filtered <- filter_redundant_pathways(go_res_immune_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_hba1c, title = "Immune Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## Weight
```{r echo = F}
# Read in nebula results saved to kopah
immune_weight_res <- s3readRDS('associations/nebula/weight/immune_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_weight_convergence <- map_dfr(
  names(immune_weight_res),
  function(gene_name) {
    converged <- immune_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_weight_converged <- immune_weight_convergence %>%
  filter(Convergence_Code >=-10)

immune_weight_res_combined <- map_dfr(
  names(immune_weight_res),
  function(gene_name) {
    df <- immune_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_weight_res_combined <- immune_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

immune_weight_res_combined_disp <- map_dfr(
  names(immune_weight_res),
  function(gene_name) {
    df <- immune_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
write.csv(immune_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "Immune Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/immune_weight_trtcolors",
                          treatment_results = immune_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight")
```

```{r echo =F, eval = F}
plot_volcano(immune_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "Immune Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/immune_weight",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")

plot_volcano(immune_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "Immune Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_weight_fdr",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_weight <- immune_weight_res_combined$logFC_weight_delta
names(rankings_immune_weight) <- immune_weight_res_combined$Gene
rankings_immune_weight <- sort(rankings_immune_weight, decreasing = TRUE)
plot(rankings_immune_weight)
min(rankings_immune_weight)
max(rankings_immune_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_weight <- fgsea(pathways = reactome,
                              stats = rankings_immune_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_weight <- fgsea(pathways = go,
                        stats = rankings_immune_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_weight[, padj < 0.05], na.rm = T), sum(reactome_res_immune_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_weight[, padj < 0.05], na.rm = T), sum(go_res_immune_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_weight_filtered, title = "Immune Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_weight_filtered <- filter_redundant_pathways(reactome_res_immune_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_weight_filtered, title = "Immune Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_weight_filtered <- filter_redundant_pathways(go_res_immune_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_weight_filtered, title = "Immune Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
immune_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/immune_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_avg_c_r2_convergence <- map_dfr(
  names(immune_avg_c_r2_res),
  function(gene_name) {
    converged <- immune_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_avg_c_r2_converged <- immune_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

immune_avg_c_r2_res_combined <- map_dfr(
  names(immune_avg_c_r2_res),
  function(gene_name) {
    df <- immune_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_avg_c_r2_res_combined <- immune_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

immune_avg_c_r2_res_combined_disp <- map_dfr(
  names(immune_avg_c_r2_res),
  function(gene_name) {
    df <- immune_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
immune_avg_c_r2_res_combined <- subset(immune_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10)

write.csv(immune_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_avg_c_r2_res_combined, 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "Immune avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/immune_avg_c_r2_trtcolors",
                          treatment_results = immune_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(immune_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "Immune Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/immune_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(immune_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "Immune Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_avg_c_r2 <- immune_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_immune_avg_c_r2) <- immune_avg_c_r2_res_combined$Gene
rankings_immune_avg_c_r2 <- sort(rankings_immune_avg_c_r2, decreasing = TRUE)
plot(rankings_immune_avg_c_r2)
min(rankings_immune_avg_c_r2)
max(rankings_immune_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_immune_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_immune_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_immune_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_immune_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_avg_c_r2_filtered, title = "Immune Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_immune_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_avg_c_r2_filtered, title = "Immune Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_avg_c_r2_filtered <- filter_redundant_pathways(go_res_immune_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_avg_c_r2_filtered, title = "Immune Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```



## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
immune_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/immune_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_avg_k_r2_convergence <- map_dfr(
  names(immune_avg_k_r2_res),
  function(gene_name) {
    converged <- immune_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_avg_k_r2_converged <- immune_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

immune_avg_k_r2_res_combined <- map_dfr(
  names(immune_avg_k_r2_res),
  function(gene_name) {
    df <- immune_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_avg_k_r2_res_combined <- immune_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

immune_avg_k_r2_res_combined_disp <- map_dfr(
  names(immune_avg_k_r2_res),
  function(gene_name) {
    df <- immune_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_avg_k_r2.csv", row.names = F)

```


```{r echo = F}
plot_volcano_associations(subset(immune_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "Immune avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/immune_avg_k_r2_trtcolors",
                          treatment_results = immune_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(immune_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "Immune Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/immune_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(immune_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "Immune Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_avg_k_r2 <- immune_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_immune_avg_k_r2) <- immune_avg_k_r2_res_combined$Gene
rankings_immune_avg_k_r2 <- sort(rankings_immune_avg_k_r2, decreasing = TRUE)
plot(rankings_immune_avg_k_r2)
min(rankings_immune_avg_k_r2)
max(rankings_immune_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_immune_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_immune_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_immune_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_immune_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_avg_k_r2_filtered, title = "Immune Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_immune_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_avg_k_r2_filtered, title = "Immune Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_avg_k_r2_filtered <- filter_redundant_pathways(go_res_immune_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_avg_k_r2_filtered, title = "Immune Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


# Immune Cells (Myeloid)

```{r echo = F}
nebula_immune_myeloid_results_list_reml_pooled <- s3readRDS('Immune_myeloid/nebula/immune_myeloid_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_myeloid_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_immune_myeloid_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_immune_myeloid_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_myeloid_nebula_converged_reml_pooled <- immune_myeloid_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

immune_myeloid_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_immune_myeloid_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_immune_myeloid_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_myeloid_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_myeloid_nebula_res_combined_reml_pooled <- immune_myeloid_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

immune_myeloid_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_immune_myeloid_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_immune_myeloid_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

```

## mGFR (Raw)
```{r echo = F}
# Read in nebula results saved to kopah
immune_myeloid_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/immune_myeloid_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_myeloid_mgfr_jodal_convergence <- map_dfr(
  names(immune_myeloid_mgfr_jodal_res),
  function(gene_name) {
    converged <- immune_myeloid_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_myeloid_mgfr_jodal_converged <- immune_myeloid_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

immune_myeloid_mgfr_jodal_res_combined <- map_dfr(
  names(immune_myeloid_mgfr_jodal_res),
  function(gene_name) {
    df <- immune_myeloid_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_myeloid_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_myeloid_mgfr_jodal_res_combined <- immune_myeloid_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

immune_myeloid_mgfr_jodal_res_combined_disp <- map_dfr(
  names(immune_myeloid_mgfr_jodal_res),
  function(gene_name) {
    df <- immune_myeloid_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
write.csv(immune_myeloid_mgfr_jodal_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_myeloid_mgfr_jodal.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_myeloid_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "Immune - Myeloid Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/immune_myeloid_mgfr_jodal_trtcolors",
                          treatment_results = immune_myeloid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(immune_myeloid_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "Immune_myeloid Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/immune_myeloid_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(immune_myeloid_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "Immune_myeloid Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_myeloid_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_myeloid_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_myeloid_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_myeloid_mgfr_jodal <- immune_myeloid_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_immune_myeloid_mgfr_jodal) <- immune_myeloid_mgfr_jodal_res_combined$Gene
rankings_immune_myeloid_mgfr_jodal <- sort(rankings_immune_myeloid_mgfr_jodal, decreasing = TRUE)
plot(rankings_immune_myeloid_mgfr_jodal)
min(rankings_immune_myeloid_mgfr_jodal)
max(rankings_immune_myeloid_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_myeloid_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_myeloid_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_myeloid_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_immune_myeloid_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_myeloid_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_immune_myeloid_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_myeloid_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_myeloid_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_myeloid_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_immune_myeloid_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_myeloid_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_immune_myeloid_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_myeloid_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_myeloid_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_myeloid_mgfr_jodal_filtered, title = "Immune_myeloid Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_myeloid_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_immune_myeloid_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_myeloid_mgfr_jodal_filtered, title = "Immune_myeloid Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_myeloid_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_immune_myeloid_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_myeloid_mgfr_jodal_filtered, title = "Immune_myeloid Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
immune_myeloid_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/immune_myeloid_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_myeloid_mgfr_jodal_bsa_convergence <- map_dfr(
  names(immune_myeloid_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- immune_myeloid_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_myeloid_mgfr_jodal_bsa_converged <- immune_myeloid_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

immune_myeloid_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(immune_myeloid_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- immune_myeloid_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_myeloid_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_myeloid_mgfr_jodal_bsa_res_combined <- immune_myeloid_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

immune_myeloid_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(immune_myeloid_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- immune_myeloid_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
write.csv(immune_myeloid_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_myeloid_mgfr_jodal_bsa.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_myeloid_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "Immune - Myeloid BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/immune_myeloid_mgfr_jodal_bsa_trtcolors",
                          treatment_results = immune_myeloid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(immune_myeloid_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "Immune_myeloid BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/immune_myeloid_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(immune_myeloid_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "Immune_myeloid BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_myeloid_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_myeloid_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_myeloid_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_myeloid_mgfr_jodal_bsa <- immune_myeloid_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_immune_myeloid_mgfr_jodal_bsa) <- immune_myeloid_mgfr_jodal_bsa_res_combined$Gene
rankings_immune_myeloid_mgfr_jodal_bsa <- sort(rankings_immune_myeloid_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_immune_myeloid_mgfr_jodal_bsa)
min(rankings_immune_myeloid_mgfr_jodal_bsa)
max(rankings_immune_myeloid_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_myeloid_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_myeloid_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_myeloid_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_immune_myeloid_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_myeloid_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_immune_myeloid_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_myeloid_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_myeloid_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_myeloid_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_immune_myeloid_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_myeloid_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_immune_myeloid_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_myeloid_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_myeloid_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_myeloid_mgfr_jodal_bsa_filtered, title = "Immune_myeloid Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_myeloid_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_immune_myeloid_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_myeloid_mgfr_jodal_bsa_filtered, title = "Immune_myeloid Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_myeloid_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_immune_myeloid_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_myeloid_mgfr_jodal_bsa_filtered, title = "Immune_myeloid Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
immune_myeloid_tir_res <- s3readRDS('associations/nebula/tir/immune_myeloid_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_myeloid_tir_convergence <- map_dfr(
  names(immune_myeloid_tir_res),
  function(gene_name) {
    converged <- immune_myeloid_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_myeloid_tir_converged <- immune_myeloid_tir_convergence %>%
  filter(Convergence_Code >=-10)

immune_myeloid_tir_res_combined <- map_dfr(
  names(immune_myeloid_tir_res),
  function(gene_name) {
    df <- immune_myeloid_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_myeloid_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_myeloid_tir_res_combined <- immune_myeloid_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

immune_myeloid_tir_res_combined_disp <- map_dfr(
  names(immune_myeloid_tir_res),
  function(gene_name) {
    df <- immune_myeloid_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_myeloid_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_myeloid_tir.csv", row.names = F)
```

```{r echo = F}
plot_volcano_associations(immune_myeloid_tir_res_combined, 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "Immune - Myeloid TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/immune_myeloid_tir_trtcolors",
                          treatment_results = immune_myeloid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR")
```

```{r echo =F, eval = F}
plot_volcano(immune_myeloid_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "Immune_myeloid TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/immune_myeloid_tir",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")

plot_volcano(immune_myeloid_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "Immune_myeloid TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_tir_fdr",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_myeloid_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_myeloid_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_myeloid_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_myeloid_tir <- immune_myeloid_tir_res_combined$logFC_tir_delta
names(rankings_immune_myeloid_tir) <- immune_myeloid_tir_res_combined$Gene
rankings_immune_myeloid_tir <- sort(rankings_immune_myeloid_tir, decreasing = TRUE)
plot(rankings_immune_myeloid_tir)
min(rankings_immune_myeloid_tir)
max(rankings_immune_myeloid_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_myeloid_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_myeloid_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_myeloid_tir <- fgsea(pathways = reactome,
                              stats = rankings_immune_myeloid_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_myeloid_tir <- fgsea(pathways = go,
                        stats = rankings_immune_myeloid_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_myeloid_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_myeloid_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_myeloid_tir[, padj < 0.05], na.rm = T), sum(reactome_res_immune_myeloid_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_myeloid_tir[, padj < 0.05], na.rm = T), sum(go_res_immune_myeloid_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_myeloid_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_myeloid_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_myeloid_tir_filtered, title = "Immune_myeloid Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_myeloid_tir_filtered <- filter_redundant_pathways(reactome_res_immune_myeloid_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_myeloid_tir_filtered, title = "Immune_myeloid Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_myeloid_tir_filtered <- filter_redundant_pathways(go_res_immune_myeloid_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_myeloid_tir_filtered, title = "Immune_myeloid Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
immune_myeloid_hba1c_res <- s3readRDS('associations/nebula/hba1c/immune_myeloid_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_myeloid_hba1c_convergence <- map_dfr(
  names(immune_myeloid_hba1c_res),
  function(gene_name) {
    converged <- immune_myeloid_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_myeloid_hba1c_converged <- immune_myeloid_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

immune_myeloid_hba1c_res_combined <- map_dfr(
  names(immune_myeloid_hba1c_res),
  function(gene_name) {
    df <- immune_myeloid_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_myeloid_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_myeloid_hba1c_res_combined <- immune_myeloid_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

immune_myeloid_hba1c_res_combined_disp <- map_dfr(
  names(immune_myeloid_hba1c_res),
  function(gene_name) {
    df <- immune_myeloid_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_myeloid_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_myeloid_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_myeloid_hba1c_res_combined, 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "Immune - Myeloid HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/immune_myeloid_hba1c_trtcolors",
                          treatment_results = immune_myeloid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c")
```

```{r echo =F, eval = F}
plot_volcano(immune_myeloid_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "Immune_myeloid HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/immune_myeloid_hba1c",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")

plot_volcano(immune_myeloid_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "Immune_myeloid HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_hba1c_fdr",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_myeloid_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_myeloid_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_myeloid_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_myeloid_hba1c <- immune_myeloid_hba1c_res_combined$logFC_hba1c_delta
names(rankings_immune_myeloid_hba1c) <- immune_myeloid_hba1c_res_combined$Gene
rankings_immune_myeloid_hba1c <- sort(rankings_immune_myeloid_hba1c, decreasing = TRUE)
plot(rankings_immune_myeloid_hba1c)
min(rankings_immune_myeloid_hba1c)
max(rankings_immune_myeloid_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_myeloid_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_myeloid_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_myeloid_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_immune_myeloid_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_myeloid_hba1c <- fgsea(pathways = go,
                        stats = rankings_immune_myeloid_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_myeloid_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_myeloid_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_myeloid_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_immune_myeloid_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_myeloid_hba1c[, padj < 0.05], na.rm = T), sum(go_res_immune_myeloid_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_myeloid_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_myeloid_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_myeloid_hba1c_filtered, title = "Immune_myeloid Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_myeloid_hba1c_filtered <- filter_redundant_pathways(reactome_res_immune_myeloid_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_myeloid_hba1c_filtered, title = "Immune_myeloid Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_myeloid_hba1c_filtered <- filter_redundant_pathways(go_res_immune_myeloid_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_myeloid_hba1c_filtered, title = "Immune_myeloid Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## Weight
```{r echo = F}
# Read in nebula results saved to kopah
immune_myeloid_weight_res <- s3readRDS('associations/nebula/weight/immune_myeloid_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_myeloid_weight_convergence <- map_dfr(
  names(immune_myeloid_weight_res),
  function(gene_name) {
    converged <- immune_myeloid_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_myeloid_weight_converged <- immune_myeloid_weight_convergence %>%
  filter(Convergence_Code >=-10)

immune_myeloid_weight_res_combined <- map_dfr(
  names(immune_myeloid_weight_res),
  function(gene_name) {
    df <- immune_myeloid_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_myeloid_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_myeloid_weight_res_combined <- immune_myeloid_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

immune_myeloid_weight_res_combined_disp <- map_dfr(
  names(immune_myeloid_weight_res),
  function(gene_name) {
    df <- immune_myeloid_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_myeloid_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_myeloid_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_myeloid_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "Immune - Myeloid Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/immune_myeloid_weight_trtcolors",
                          treatment_results = immune_myeloid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight")
```

```{r echo =F, eval = F}
plot_volcano(immune_myeloid_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "Immune_myeloid Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/immune_myeloid_weight",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")

plot_volcano(immune_myeloid_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "Immune_myeloid Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_weight_fdr",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_myeloid_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_myeloid_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_myeloid_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_myeloid_weight <- immune_myeloid_weight_res_combined$logFC_weight_delta
names(rankings_immune_myeloid_weight) <- immune_myeloid_weight_res_combined$Gene
rankings_immune_myeloid_weight <- sort(rankings_immune_myeloid_weight, decreasing = TRUE)
plot(rankings_immune_myeloid_weight)
min(rankings_immune_myeloid_weight)
max(rankings_immune_myeloid_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_myeloid_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_myeloid_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_myeloid_weight <- fgsea(pathways = reactome,
                              stats = rankings_immune_myeloid_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_myeloid_weight <- fgsea(pathways = go,
                        stats = rankings_immune_myeloid_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_myeloid_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_myeloid_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_myeloid_weight[, padj < 0.05], na.rm = T), sum(reactome_res_immune_myeloid_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_myeloid_weight[, padj < 0.05], na.rm = T), sum(go_res_immune_myeloid_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_myeloid_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_myeloid_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_myeloid_weight_filtered, title = "Immune_myeloid Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_myeloid_weight_filtered <- filter_redundant_pathways(reactome_res_immune_myeloid_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_myeloid_weight_filtered, title = "Immune_myeloid Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_myeloid_weight_filtered <- filter_redundant_pathways(go_res_immune_myeloid_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_myeloid_weight_filtered, title = "Immune_myeloid Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
immune_myeloid_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/immune_myeloid_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_myeloid_avg_c_r2_convergence <- map_dfr(
  names(immune_myeloid_avg_c_r2_res),
  function(gene_name) {
    converged <- immune_myeloid_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_myeloid_avg_c_r2_converged <- immune_myeloid_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

immune_myeloid_avg_c_r2_res_combined <- map_dfr(
  names(immune_myeloid_avg_c_r2_res),
  function(gene_name) {
    df <- immune_myeloid_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_myeloid_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_myeloid_avg_c_r2_res_combined <- immune_myeloid_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

immune_myeloid_avg_c_r2_res_combined_disp <- map_dfr(
  names(immune_myeloid_avg_c_r2_res),
  function(gene_name) {
    df <- immune_myeloid_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
immune_myeloid_avg_c_r2_res_combined <- subset(immune_myeloid_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-20)

write.csv(immune_myeloid_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_myeloid_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_myeloid_avg_c_r2_res_combined, 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "Immune - Myeloid avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/immune_myeloid_avg_c_r2_trtcolors",
                          treatment_results = immune_myeloid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(immune_myeloid_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "Immune_myeloid Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/immune_myeloid_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(immune_myeloid_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "Immune_myeloid Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_myeloid_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_myeloid_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_myeloid_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_myeloid_avg_c_r2 <- immune_myeloid_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_immune_myeloid_avg_c_r2) <- immune_myeloid_avg_c_r2_res_combined$Gene
rankings_immune_myeloid_avg_c_r2 <- sort(rankings_immune_myeloid_avg_c_r2, decreasing = TRUE)
plot(rankings_immune_myeloid_avg_c_r2)
min(rankings_immune_myeloid_avg_c_r2)
max(rankings_immune_myeloid_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_myeloid_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_myeloid_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_myeloid_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_immune_myeloid_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_myeloid_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_immune_myeloid_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_myeloid_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_myeloid_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_myeloid_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_immune_myeloid_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_myeloid_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_immune_myeloid_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_myeloid_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_myeloid_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_myeloid_avg_c_r2_filtered, title = "Immune_myeloid Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_myeloid_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_immune_myeloid_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_myeloid_avg_c_r2_filtered, title = "Immune_myeloid Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_myeloid_avg_c_r2_filtered <- filter_redundant_pathways(go_res_immune_myeloid_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_myeloid_avg_c_r2_filtered, title = "Immune_myeloid Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```



## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
immune_myeloid_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/immune_myeloid_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_myeloid_avg_k_r2_convergence <- map_dfr(
  names(immune_myeloid_avg_k_r2_res),
  function(gene_name) {
    converged <- immune_myeloid_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_myeloid_avg_k_r2_converged <- immune_myeloid_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

immune_myeloid_avg_k_r2_res_combined <- map_dfr(
  names(immune_myeloid_avg_k_r2_res),
  function(gene_name) {
    df <- immune_myeloid_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_myeloid_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_myeloid_avg_k_r2_res_combined <- immune_myeloid_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

immune_myeloid_avg_k_r2_res_combined_disp <- map_dfr(
  names(immune_myeloid_avg_k_r2_res),
  function(gene_name) {
    df <- immune_myeloid_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_myeloid_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_myeloid_avg_k_r2.csv", row.names = F)

```


```{r echo = F}
plot_volcano_associations(subset(immune_myeloid_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "Immune - Myeloid avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/immune_myeloid_avg_k_r2_trtcolors",
                          treatment_results = immune_myeloid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(immune_myeloid_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "Immune_myeloid Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/immune_myeloid_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(immune_myeloid_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "Immune_myeloid Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_myeloid_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_myeloid_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_myeloid_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_myeloid_avg_k_r2 <- immune_myeloid_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_immune_myeloid_avg_k_r2) <- immune_myeloid_avg_k_r2_res_combined$Gene
rankings_immune_myeloid_avg_k_r2 <- sort(rankings_immune_myeloid_avg_k_r2, decreasing = TRUE)
plot(rankings_immune_myeloid_avg_k_r2)
min(rankings_immune_myeloid_avg_k_r2)
max(rankings_immune_myeloid_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_myeloid_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_myeloid_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_myeloid_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_immune_myeloid_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_myeloid_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_immune_myeloid_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_myeloid_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_myeloid_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_myeloid_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_immune_myeloid_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_myeloid_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_immune_myeloid_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_myeloid_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_myeloid_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_myeloid_avg_k_r2_filtered, title = "Immune_myeloid Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_myeloid_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_immune_myeloid_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_myeloid_avg_k_r2_filtered, title = "Immune_myeloid Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_myeloid_avg_k_r2_filtered <- filter_redundant_pathways(go_res_immune_myeloid_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_myeloid_avg_k_r2_filtered, title = "Immune_myeloid Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_myeloid_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

# Immune Cells (Lymphoid)

```{r echo = F}
nebula_immune_lymphoid_results_list_reml_pooled <- s3readRDS('Immune_lymphoid/nebula/immune_lymphoid_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_lymphoid_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_immune_lymphoid_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_immune_lymphoid_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_lymphoid_nebula_converged_reml_pooled <- immune_lymphoid_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

immune_lymphoid_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_immune_lymphoid_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_immune_lymphoid_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_lymphoid_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_lymphoid_nebula_res_combined_reml_pooled <- immune_lymphoid_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

immune_lymphoid_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_immune_lymphoid_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_immune_lymphoid_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

```
## mGFR (Raw)
```{r echo = F}
# Read in nebula results saved to kopah
immune_lymphoid_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/immune_lymphoid_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_lymphoid_mgfr_jodal_convergence <- map_dfr(
  names(immune_lymphoid_mgfr_jodal_res),
  function(gene_name) {
    converged <- immune_lymphoid_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_lymphoid_mgfr_jodal_converged <- immune_lymphoid_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

immune_lymphoid_mgfr_jodal_res_combined <- map_dfr(
  names(immune_lymphoid_mgfr_jodal_res),
  function(gene_name) {
    df <- immune_lymphoid_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_lymphoid_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_lymphoid_mgfr_jodal_res_combined <- immune_lymphoid_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

immune_lymphoid_mgfr_jodal_res_combined_disp <- map_dfr(
  names(immune_lymphoid_mgfr_jodal_res),
  function(gene_name) {
    df <- immune_lymphoid_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_lymphoid_mgfr_jodal_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_lymphoid_mgfr_jodal.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_lymphoid_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "Immune - Lymphoid Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/immune_lymphoid_mgfr_jodal_trtcolors",
                          treatment_results = immune_lymphoid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(immune_lymphoid_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "Immune_lymphoid Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(immune_lymphoid_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "Immune_lymphoid Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_lymphoid_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_lymphoid_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_lymphoid_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_lymphoid_mgfr_jodal <- immune_lymphoid_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_immune_lymphoid_mgfr_jodal) <- immune_lymphoid_mgfr_jodal_res_combined$Gene
rankings_immune_lymphoid_mgfr_jodal <- sort(rankings_immune_lymphoid_mgfr_jodal, decreasing = TRUE)
plot(rankings_immune_lymphoid_mgfr_jodal)
min(rankings_immune_lymphoid_mgfr_jodal)
max(rankings_immune_lymphoid_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_lymphoid_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_lymphoid_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_lymphoid_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_immune_lymphoid_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_lymphoid_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_immune_lymphoid_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_lymphoid_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_lymphoid_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_lymphoid_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_immune_lymphoid_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_lymphoid_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_immune_lymphoid_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_lymphoid_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_lymphoid_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_lymphoid_mgfr_jodal_filtered, title = "Immune_lymphoid Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_lymphoid_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_immune_lymphoid_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_lymphoid_mgfr_jodal_filtered, title = "Immune_lymphoid Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_lymphoid_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_immune_lymphoid_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_lymphoid_mgfr_jodal_filtered, title = "Immune_lymphoid Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
immune_lymphoid_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/immune_lymphoid_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_lymphoid_mgfr_jodal_bsa_convergence <- map_dfr(
  names(immune_lymphoid_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- immune_lymphoid_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_lymphoid_mgfr_jodal_bsa_converged <- immune_lymphoid_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

immune_lymphoid_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(immune_lymphoid_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- immune_lymphoid_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_lymphoid_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_lymphoid_mgfr_jodal_bsa_res_combined <- immune_lymphoid_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

immune_lymphoid_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(immune_lymphoid_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- immune_lymphoid_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_lymphoid_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_lymphoid_mgfr_jodal_bsa.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_lymphoid_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "Immune - Lymphoid BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/immune_lymphoid_mgfr_jodal_bsa_trtcolors",
                          treatment_results = immune_lymphoid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(immune_lymphoid_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "Immune_lymphoid BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(immune_lymphoid_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "Immune_lymphoid BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_lymphoid_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_lymphoid_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_lymphoid_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_lymphoid_mgfr_jodal_bsa <- immune_lymphoid_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_immune_lymphoid_mgfr_jodal_bsa) <- immune_lymphoid_mgfr_jodal_bsa_res_combined$Gene
rankings_immune_lymphoid_mgfr_jodal_bsa <- sort(rankings_immune_lymphoid_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_immune_lymphoid_mgfr_jodal_bsa)
min(rankings_immune_lymphoid_mgfr_jodal_bsa)
max(rankings_immune_lymphoid_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_lymphoid_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_lymphoid_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_lymphoid_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_immune_lymphoid_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_lymphoid_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_immune_lymphoid_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_lymphoid_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_lymphoid_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_lymphoid_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_immune_lymphoid_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_lymphoid_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_immune_lymphoid_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_lymphoid_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_lymphoid_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_lymphoid_mgfr_jodal_bsa_filtered, title = "Immune_lymphoid Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_lymphoid_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_immune_lymphoid_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_lymphoid_mgfr_jodal_bsa_filtered, title = "Immune_lymphoid Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_lymphoid_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_immune_lymphoid_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_lymphoid_mgfr_jodal_bsa_filtered, title = "Immune_lymphoid Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
immune_lymphoid_tir_res <- s3readRDS('associations/nebula/tir/immune_lymphoid_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_lymphoid_tir_convergence <- map_dfr(
  names(immune_lymphoid_tir_res),
  function(gene_name) {
    converged <- immune_lymphoid_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_lymphoid_tir_converged <- immune_lymphoid_tir_convergence %>%
  filter(Convergence_Code >=-10)

immune_lymphoid_tir_res_combined <- map_dfr(
  names(immune_lymphoid_tir_res),
  function(gene_name) {
    df <- immune_lymphoid_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_lymphoid_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_lymphoid_tir_res_combined <- immune_lymphoid_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

immune_lymphoid_tir_res_combined_disp <- map_dfr(
  names(immune_lymphoid_tir_res),
  function(gene_name) {
    df <- immune_lymphoid_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_lymphoid_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_lymphoid_tir.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_lymphoid_tir_res_combined, 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "Immune - Lymphoid TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/immune_lymphoid_tir_trtcolors",
                          treatment_results = immune_lymphoid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR")
```

```{r echo =F, eval = F}
plot_volcano(immune_lymphoid_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "Immune_lymphoid TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_tir",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")

plot_volcano(immune_lymphoid_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "Immune_lymphoid TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_tir_fdr",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_lymphoid_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_lymphoid_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_lymphoid_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_lymphoid_tir <- immune_lymphoid_tir_res_combined$logFC_tir_delta
names(rankings_immune_lymphoid_tir) <- immune_lymphoid_tir_res_combined$Gene
rankings_immune_lymphoid_tir <- sort(rankings_immune_lymphoid_tir, decreasing = TRUE)
plot(rankings_immune_lymphoid_tir)
min(rankings_immune_lymphoid_tir)
max(rankings_immune_lymphoid_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_lymphoid_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_lymphoid_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_lymphoid_tir <- fgsea(pathways = reactome,
                              stats = rankings_immune_lymphoid_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_lymphoid_tir <- fgsea(pathways = go,
                        stats = rankings_immune_lymphoid_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_lymphoid_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_lymphoid_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_lymphoid_tir[, padj < 0.05], na.rm = T), sum(reactome_res_immune_lymphoid_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_lymphoid_tir[, padj < 0.05], na.rm = T), sum(go_res_immune_lymphoid_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_lymphoid_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_lymphoid_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_lymphoid_tir_filtered, title = "Immune_lymphoid Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_lymphoid_tir_filtered <- filter_redundant_pathways(reactome_res_immune_lymphoid_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_lymphoid_tir_filtered, title = "Immune_lymphoid Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_lymphoid_tir_filtered <- filter_redundant_pathways(go_res_immune_lymphoid_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_lymphoid_tir_filtered, title = "Immune_lymphoid Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
immune_lymphoid_hba1c_res <- s3readRDS('associations/nebula/hba1c/immune_lymphoid_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_lymphoid_hba1c_convergence <- map_dfr(
  names(immune_lymphoid_hba1c_res),
  function(gene_name) {
    converged <- immune_lymphoid_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_lymphoid_hba1c_converged <- immune_lymphoid_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

immune_lymphoid_hba1c_res_combined <- map_dfr(
  names(immune_lymphoid_hba1c_res),
  function(gene_name) {
    df <- immune_lymphoid_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_lymphoid_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_lymphoid_hba1c_res_combined <- immune_lymphoid_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

immune_lymphoid_hba1c_res_combined_disp <- map_dfr(
  names(immune_lymphoid_hba1c_res),
  function(gene_name) {
    df <- immune_lymphoid_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_lymphoid_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_lymphoid_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_lymphoid_hba1c_res_combined, 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "Immune - Lymphoid HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/immune_lymphoid_hba1c_trtcolors",
                          treatment_results = immune_lymphoid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c")
```

```{r echo =F, eval = F}
plot_volcano(immune_lymphoid_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "Immune_lymphoid HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_hba1c",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")

plot_volcano(immune_lymphoid_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "Immune_lymphoid HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_hba1c_fdr",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_lymphoid_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_lymphoid_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_lymphoid_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_lymphoid_hba1c <- immune_lymphoid_hba1c_res_combined$logFC_hba1c_delta
names(rankings_immune_lymphoid_hba1c) <- immune_lymphoid_hba1c_res_combined$Gene
rankings_immune_lymphoid_hba1c <- sort(rankings_immune_lymphoid_hba1c, decreasing = TRUE)
plot(rankings_immune_lymphoid_hba1c)
min(rankings_immune_lymphoid_hba1c)
max(rankings_immune_lymphoid_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_lymphoid_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_lymphoid_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_lymphoid_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_immune_lymphoid_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_lymphoid_hba1c <- fgsea(pathways = go,
                        stats = rankings_immune_lymphoid_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_lymphoid_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_lymphoid_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_lymphoid_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_immune_lymphoid_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_lymphoid_hba1c[, padj < 0.05], na.rm = T), sum(go_res_immune_lymphoid_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_lymphoid_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_lymphoid_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_lymphoid_hba1c_filtered, title = "Immune_lymphoid Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_lymphoid_hba1c_filtered <- filter_redundant_pathways(reactome_res_immune_lymphoid_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_lymphoid_hba1c_filtered, title = "Immune_lymphoid Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_lymphoid_hba1c_filtered <- filter_redundant_pathways(go_res_immune_lymphoid_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_lymphoid_hba1c_filtered, title = "Immune_lymphoid Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## Weight
```{r echo = F}
# Read in nebula results saved to kopah
immune_lymphoid_weight_res <- s3readRDS('associations/nebula/weight/immune_lymphoid_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_lymphoid_weight_convergence <- map_dfr(
  names(immune_lymphoid_weight_res),
  function(gene_name) {
    converged <- immune_lymphoid_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_lymphoid_weight_converged <- immune_lymphoid_weight_convergence %>%
  filter(Convergence_Code >=-10)

immune_lymphoid_weight_res_combined <- map_dfr(
  names(immune_lymphoid_weight_res),
  function(gene_name) {
    df <- immune_lymphoid_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_lymphoid_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_lymphoid_weight_res_combined <- immune_lymphoid_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

immune_lymphoid_weight_res_combined_disp <- map_dfr(
  names(immune_lymphoid_weight_res),
  function(gene_name) {
    df <- immune_lymphoid_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(immune_lymphoid_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_lymphoid_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_lymphoid_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "Immune - Lymphoid Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/immune_lymphoid_weight_trtcolors",
                          treatment_results = immune_lymphoid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight")
```

```{r echo =F, eval = F}
plot_volcano(immune_lymphoid_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "Immune_lymphoid Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_weight",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")

plot_volcano(immune_lymphoid_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "Immune_lymphoid Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_weight_fdr",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_lymphoid_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_lymphoid_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_lymphoid_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_lymphoid_weight <- immune_lymphoid_weight_res_combined$logFC_weight_delta
names(rankings_immune_lymphoid_weight) <- immune_lymphoid_weight_res_combined$Gene
rankings_immune_lymphoid_weight <- sort(rankings_immune_lymphoid_weight, decreasing = TRUE)
plot(rankings_immune_lymphoid_weight)
min(rankings_immune_lymphoid_weight)
max(rankings_immune_lymphoid_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_lymphoid_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_lymphoid_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_lymphoid_weight <- fgsea(pathways = reactome,
                              stats = rankings_immune_lymphoid_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_lymphoid_weight <- fgsea(pathways = go,
                        stats = rankings_immune_lymphoid_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_lymphoid_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_lymphoid_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_lymphoid_weight[, padj < 0.05], na.rm = T), sum(reactome_res_immune_lymphoid_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_lymphoid_weight[, padj < 0.05], na.rm = T), sum(go_res_immune_lymphoid_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_lymphoid_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_lymphoid_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_lymphoid_weight_filtered, title = "Immune_lymphoid Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_lymphoid_weight_filtered <- filter_redundant_pathways(reactome_res_immune_lymphoid_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_lymphoid_weight_filtered, title = "Immune_lymphoid Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_lymphoid_weight_filtered <- filter_redundant_pathways(go_res_immune_lymphoid_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_lymphoid_weight_filtered, title = "Immune_lymphoid Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
immune_lymphoid_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/immune_lymphoid_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_lymphoid_avg_c_r2_convergence <- map_dfr(
  names(immune_lymphoid_avg_c_r2_res),
  function(gene_name) {
    converged <- immune_lymphoid_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_lymphoid_avg_c_r2_converged <- immune_lymphoid_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

immune_lymphoid_avg_c_r2_res_combined <- map_dfr(
  names(immune_lymphoid_avg_c_r2_res),
  function(gene_name) {
    df <- immune_lymphoid_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_lymphoid_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_lymphoid_avg_c_r2_res_combined <- immune_lymphoid_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

immune_lymphoid_avg_c_r2_res_combined_disp <- map_dfr(
  names(immune_lymphoid_avg_c_r2_res),
  function(gene_name) {
    df <- immune_lymphoid_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
immune_lymphoid_avg_c_r2_res_combined <- subset(immune_lymphoid_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-20)

write.csv(immune_lymphoid_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_lymphoid_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(immune_lymphoid_avg_c_r2_res_combined, 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "Immune - Lymphoid avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/immune_lymphoid_avg_c_r2_trtcolors",
                          treatment_results = immune_lymphoid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(immune_lymphoid_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "Immune_lymphoid Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(immune_lymphoid_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "Immune_lymphoid Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_lymphoid_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_lymphoid_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_lymphoid_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_lymphoid_avg_c_r2 <- immune_lymphoid_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_immune_lymphoid_avg_c_r2) <- immune_lymphoid_avg_c_r2_res_combined$Gene
rankings_immune_lymphoid_avg_c_r2 <- sort(rankings_immune_lymphoid_avg_c_r2, decreasing = TRUE)
plot(rankings_immune_lymphoid_avg_c_r2)
min(rankings_immune_lymphoid_avg_c_r2)
max(rankings_immune_lymphoid_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_lymphoid_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_lymphoid_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_lymphoid_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_immune_lymphoid_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_lymphoid_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_immune_lymphoid_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_lymphoid_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_lymphoid_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_lymphoid_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_immune_lymphoid_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_lymphoid_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_immune_lymphoid_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_lymphoid_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_lymphoid_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_lymphoid_avg_c_r2_filtered, title = "Immune_lymphoid Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_lymphoid_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_immune_lymphoid_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_lymphoid_avg_c_r2_filtered, title = "Immune_lymphoid Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_lymphoid_avg_c_r2_filtered <- filter_redundant_pathways(go_res_immune_lymphoid_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_lymphoid_avg_c_r2_filtered, title = "Immune_lymphoid Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```



## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
immune_lymphoid_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/immune_lymphoid_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
immune_lymphoid_avg_k_r2_convergence <- map_dfr(
  names(immune_lymphoid_avg_k_r2_res),
  function(gene_name) {
    converged <- immune_lymphoid_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

immune_lymphoid_avg_k_r2_converged <- immune_lymphoid_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

immune_lymphoid_avg_k_r2_res_combined <- map_dfr(
  names(immune_lymphoid_avg_k_r2_res),
  function(gene_name) {
    df <- immune_lymphoid_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% immune_lymphoid_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

immune_lymphoid_avg_k_r2_res_combined <- immune_lymphoid_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

immune_lymphoid_avg_k_r2_res_combined_disp <- map_dfr(
  names(immune_lymphoid_avg_k_r2_res),
  function(gene_name) {
    df <- immune_lymphoid_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
write.csv(immune_lymphoid_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/immune_lymphoid_avg_k_r2.csv", row.names = F)

```


```{r echo = F}
plot_volcano_associations(subset(immune_lymphoid_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "Immune - Lymphoid avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/immune_lymphoid_avg_k_r2_trtcolors",
                          treatment_results = immune_lymphoid_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(immune_lymphoid_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "Immune_lymphoid Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(immune_lymphoid_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "Immune_lymphoid Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(immune_lymphoid_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(immune_lymphoid_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(immune_lymphoid_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_immune_lymphoid_avg_k_r2 <- immune_lymphoid_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_immune_lymphoid_avg_k_r2) <- immune_lymphoid_avg_k_r2_res_combined$Gene
rankings_immune_lymphoid_avg_k_r2 <- sort(rankings_immune_lymphoid_avg_k_r2, decreasing = TRUE)
plot(rankings_immune_lymphoid_avg_k_r2)
min(rankings_immune_lymphoid_avg_k_r2)
max(rankings_immune_lymphoid_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_immune_lymphoid_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_immune_lymphoid_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_immune_lymphoid_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_immune_lymphoid_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_immune_lymphoid_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_immune_lymphoid_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_immune_lymphoid_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_immune_lymphoid_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_immune_lymphoid_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_immune_lymphoid_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_immune_lymphoid_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_immune_lymphoid_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_immune_lymphoid_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_immune_lymphoid_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_immune_lymphoid_avg_k_r2_filtered, title = "Immune_lymphoid Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_immune_lymphoid_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_immune_lymphoid_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_immune_lymphoid_avg_k_r2_filtered, title = "Immune_lymphoid Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_immune_lymphoid_avg_k_r2_filtered <- filter_redundant_pathways(go_res_immune_lymphoid_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_immune_lymphoid_avg_k_r2_filtered, title = "Immune_lymphoid Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_lymphoid_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

# PC
```{r echo = F}
nebula_pc_results_list_reml_pooled <- s3readRDS('PC/nebula/pc_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pc_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_pc_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_pc_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pc_nebula_converged_reml_pooled <- pc_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

pc_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_pc_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_pc_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pc_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pc_nebula_res_combined_reml_pooled <- pc_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

pc_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_pc_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_pc_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

```
## mGFR (Raw)
```{r echo = F}
# Read in nebula results saved to kopah
pc_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/pc_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pc_mgfr_jodal_convergence <- map_dfr(
  names(pc_mgfr_jodal_res),
  function(gene_name) {
    converged <- pc_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pc_mgfr_jodal_converged <- pc_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

pc_mgfr_jodal_res_combined <- map_dfr(
  names(pc_mgfr_jodal_res),
  function(gene_name) {
    df <- pc_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pc_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pc_mgfr_jodal_res_combined <- pc_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

pc_mgfr_jodal_res_combined_disp <- map_dfr(
  names(pc_mgfr_jodal_res),
  function(gene_name) {
    df <- pc_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pc_mgfr_jodal_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pc_mgfr_jodal.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pc_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "PC Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/pc_mgfr_jodal_trtcolors",
                          treatment_results = pc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(pc_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "PC Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/pc_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(pc_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "PC Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pc_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pc_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pc_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pc_mgfr_jodal <- pc_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_pc_mgfr_jodal) <- pc_mgfr_jodal_res_combined$Gene
rankings_pc_mgfr_jodal <- sort(rankings_pc_mgfr_jodal, decreasing = TRUE)
plot(rankings_pc_mgfr_jodal)
min(rankings_pc_mgfr_jodal)
max(rankings_pc_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pc_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pc_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pc_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_pc_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pc_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_pc_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pc_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pc_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pc_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_pc_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pc_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_pc_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pc_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_pc_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pc_mgfr_jodal_filtered, title = "PC Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pc_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_pc_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pc_mgfr_jodal_filtered, title = "PC Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pc_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_pc_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pc_mgfr_jodal_filtered, title = "PC Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
pc_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/pc_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pc_mgfr_jodal_bsa_convergence <- map_dfr(
  names(pc_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- pc_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pc_mgfr_jodal_bsa_converged <- pc_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

pc_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(pc_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- pc_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pc_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pc_mgfr_jodal_bsa_res_combined <- pc_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

pc_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(pc_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- pc_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
write.csv(pc_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pc_mgfr_jodal_bsa.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pc_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "PC BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/pc_mgfr_jodal_bsa_trtcolors",
                          treatment_results = pc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(pc_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "PC BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/pc_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(pc_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "PC BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pc_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pc_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pc_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pc_mgfr_jodal_bsa <- pc_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_pc_mgfr_jodal_bsa) <- pc_mgfr_jodal_bsa_res_combined$Gene
rankings_pc_mgfr_jodal_bsa <- sort(rankings_pc_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_pc_mgfr_jodal_bsa)
min(rankings_pc_mgfr_jodal_bsa)
max(rankings_pc_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pc_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pc_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pc_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_pc_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pc_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_pc_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pc_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pc_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pc_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_pc_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pc_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_pc_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pc_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_pc_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pc_mgfr_jodal_bsa_filtered, title = "PC Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pc_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_pc_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pc_mgfr_jodal_bsa_filtered, title = "PC Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pc_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_pc_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pc_mgfr_jodal_bsa_filtered, title = "PC Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
pc_tir_res <- s3readRDS('associations/nebula/tir/pc_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pc_tir_convergence <- map_dfr(
  names(pc_tir_res),
  function(gene_name) {
    converged <- pc_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pc_tir_converged <- pc_tir_convergence %>%
  filter(Convergence_Code >=-10)

pc_tir_res_combined <- map_dfr(
  names(pc_tir_res),
  function(gene_name) {
    df <- pc_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pc_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pc_tir_res_combined <- pc_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

pc_tir_res_combined_disp <- map_dfr(
  names(pc_tir_res),
  function(gene_name) {
    df <- pc_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pc_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pc_tir.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(subset(pc_tir_res_combined, logFC_tir_delta >-10), 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "PC TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/pc_tir_trtcolors",
                          treatment_results = pc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR",
                          legend_position = c(0.95, 0.8))
```


```{r echo =F, eval = F}
plot_volcano(pc_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "PC TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/pc_tir")

plot_volcano(pc_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "PC TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_tir_fdr")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pc_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pc_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pc_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pc_tir <- pc_tir_res_combined$logFC_tir_delta
names(rankings_pc_tir) <- pc_tir_res_combined$Gene
rankings_pc_tir <- sort(rankings_pc_tir, decreasing = TRUE)
plot(rankings_pc_tir)
min(rankings_pc_tir)
max(rankings_pc_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pc_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pc_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pc_tir <- fgsea(pathways = reactome,
                              stats = rankings_pc_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pc_tir <- fgsea(pathways = go,
                        stats = rankings_pc_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pc_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pc_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pc_tir[, padj < 0.05], na.rm = T), sum(reactome_res_pc_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pc_tir[, padj < 0.05], na.rm = T), sum(go_res_pc_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pc_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_pc_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pc_tir_filtered, title = "PC Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pc_tir_filtered <- filter_redundant_pathways(reactome_res_pc_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pc_tir_filtered, title = "PC Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pc_tir_filtered <- filter_redundant_pathways(go_res_pc_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pc_tir_filtered, title = "PC Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
pc_hba1c_res <- s3readRDS('associations/nebula/hba1c/pc_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pc_hba1c_convergence <- map_dfr(
  names(pc_hba1c_res),
  function(gene_name) {
    converged <- pc_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pc_hba1c_converged <- pc_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

pc_hba1c_res_combined <- map_dfr(
  names(pc_hba1c_res),
  function(gene_name) {
    df <- pc_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pc_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pc_hba1c_res_combined <- pc_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

pc_hba1c_res_combined_disp <- map_dfr(
  names(pc_hba1c_res),
  function(gene_name) {
    df <- pc_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pc_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pc_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(subset(pc_hba1c_res_combined, logFC_hba1c_delta >-10), 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "PC HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/pc_hba1c_trtcolors",
                          treatment_results = pc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c",
                          legend_position = c(0.95, 0.8))
```


```{r echo =F, eval = F}
plot_volcano(pc_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "PC HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/pc_hba1c")

plot_volcano(pc_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "PC HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_hba1c_fdr")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pc_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pc_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pc_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pc_hba1c <- pc_hba1c_res_combined$logFC_hba1c_delta
names(rankings_pc_hba1c) <- pc_hba1c_res_combined$Gene
rankings_pc_hba1c <- sort(rankings_pc_hba1c, decreasing = TRUE)
plot(rankings_pc_hba1c)
min(rankings_pc_hba1c)
max(rankings_pc_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pc_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pc_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pc_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_pc_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pc_hba1c <- fgsea(pathways = go,
                        stats = rankings_pc_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pc_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pc_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pc_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_pc_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pc_hba1c[, padj < 0.05], na.rm = T), sum(go_res_pc_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pc_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_pc_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pc_hba1c_filtered, title = "PC Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pc_hba1c_filtered <- filter_redundant_pathways(reactome_res_pc_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pc_hba1c_filtered, title = "PC Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pc_hba1c_filtered <- filter_redundant_pathways(go_res_pc_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pc_hba1c_filtered, title = "PC Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## Weight
```{r echo = F}
# Read in nebula results saved to kopah
pc_weight_res <- s3readRDS('associations/nebula/weight/pc_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pc_weight_convergence <- map_dfr(
  names(pc_weight_res),
  function(gene_name) {
    converged <- pc_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pc_weight_converged <- pc_weight_convergence %>%
  filter(Convergence_Code >=-10)

pc_weight_res_combined <- map_dfr(
  names(pc_weight_res),
  function(gene_name) {
    df <- pc_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pc_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pc_weight_res_combined <- pc_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

pc_weight_res_combined_disp <- map_dfr(
  names(pc_weight_res),
  function(gene_name) {
    df <- pc_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pc_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pc_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pc_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "PC Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/pc_weight_trtcolors",
                          treatment_results = pc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight",
                          legend_position = c(0.95, 0.9))
```

```{r echo =F, eval = F}
plot_volcano(pc_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "PC Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/pc_weight",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")

plot_volcano(pc_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "PC Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_weight_fdr",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pc_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pc_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pc_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pc_weight <- pc_weight_res_combined$logFC_weight_delta
names(rankings_pc_weight) <- pc_weight_res_combined$Gene
rankings_pc_weight <- sort(rankings_pc_weight, decreasing = TRUE)
plot(rankings_pc_weight)
min(rankings_pc_weight)
max(rankings_pc_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pc_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pc_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pc_weight <- fgsea(pathways = reactome,
                              stats = rankings_pc_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pc_weight <- fgsea(pathways = go,
                        stats = rankings_pc_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pc_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pc_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pc_weight[, padj < 0.05], na.rm = T), sum(reactome_res_pc_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pc_weight[, padj < 0.05], na.rm = T), sum(go_res_pc_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pc_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_pc_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pc_weight_filtered, title = "PC Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pc_weight_filtered <- filter_redundant_pathways(reactome_res_pc_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pc_weight_filtered, title = "PC Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pc_weight_filtered <- filter_redundant_pathways(go_res_pc_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pc_weight_filtered, title = "PC Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
pc_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/pc_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pc_avg_c_r2_convergence <- map_dfr(
  names(pc_avg_c_r2_res),
  function(gene_name) {
    converged <- pc_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pc_avg_c_r2_converged <- pc_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

pc_avg_c_r2_res_combined <- map_dfr(
  names(pc_avg_c_r2_res),
  function(gene_name) {
    df <- pc_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pc_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pc_avg_c_r2_res_combined <- pc_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

pc_avg_c_r2_res_combined_disp <- map_dfr(
  names(pc_avg_c_r2_res),
  function(gene_name) {
    df <- pc_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

pc_avg_c_r2_res_combined <- subset(pc_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-20)

write.csv(pc_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pc_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(pc_avg_c_r2_res_combined, 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "PC avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/pc_avg_c_r2_trtcolors",
                          treatment_results = pc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(pc_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "PC Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/pc_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(pc_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "PC Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pc_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pc_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pc_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pc_avg_c_r2 <- pc_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_pc_avg_c_r2) <- pc_avg_c_r2_res_combined$Gene
rankings_pc_avg_c_r2 <- sort(rankings_pc_avg_c_r2, decreasing = TRUE)
plot(rankings_pc_avg_c_r2)
min(rankings_pc_avg_c_r2)
max(rankings_pc_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pc_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pc_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pc_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_pc_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pc_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_pc_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pc_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pc_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pc_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_pc_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pc_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_pc_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pc_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_pc_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pc_avg_c_r2_filtered, title = "PC Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pc_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_pc_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pc_avg_c_r2_filtered, title = "PC Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pc_avg_c_r2_filtered <- filter_redundant_pathways(go_res_pc_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pc_avg_c_r2_filtered, title = "PC Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```



## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
pc_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/pc_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
pc_avg_k_r2_convergence <- map_dfr(
  names(pc_avg_k_r2_res),
  function(gene_name) {
    converged <- pc_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

pc_avg_k_r2_converged <- pc_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

pc_avg_k_r2_res_combined <- map_dfr(
  names(pc_avg_k_r2_res),
  function(gene_name) {
    df <- pc_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% pc_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

pc_avg_k_r2_res_combined <- pc_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

pc_avg_k_r2_res_combined_disp <- map_dfr(
  names(pc_avg_k_r2_res),
  function(gene_name) {
    df <- pc_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(pc_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/pc_avg_k_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(subset(pc_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "PC avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/pc_avg_k_r2_trtcolors",
                          treatment_results = pc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*",
                          legend_position = c(0.95,0.8))
```

```{r echo =F, eval = F}
plot_volcano(subset(pc_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "PC Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/pc_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(pc_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "PC Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(pc_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(pc_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(pc_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_pc_avg_k_r2 <- pc_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_pc_avg_k_r2) <- pc_avg_k_r2_res_combined$Gene
rankings_pc_avg_k_r2 <- sort(rankings_pc_avg_k_r2, decreasing = TRUE)
plot(rankings_pc_avg_k_r2)
min(rankings_pc_avg_k_r2)
max(rankings_pc_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_pc_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_pc_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_pc_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_pc_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_pc_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_pc_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_pc_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_pc_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_pc_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_pc_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_pc_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_pc_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_pc_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_pc_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_pc_avg_k_r2_filtered, title = "PC Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_pc_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_pc_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_pc_avg_k_r2_filtered, title = "PC Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_pc_avg_k_r2_filtered <- filter_redundant_pathways(go_res_pc_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_pc_avg_k_r2_filtered, title = "PC Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

# IC
```{r echo = F}
nebula_ic_results_list_reml_pooled <- s3readRDS('IC/nebula/ic_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ic_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_ic_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_ic_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ic_nebula_converged_reml_pooled <- ic_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

ic_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_ic_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_ic_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ic_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ic_nebula_res_combined_reml_pooled <- ic_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

ic_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_ic_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_ic_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ic_nebula_res_combined_reml_pooled, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ic_mgfr_jodal.csv", row.names = F)


```

## mGFR (Raw)

```{r echo = F}
# Read in nebula results saved to kopah
ic_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/ic_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ic_mgfr_jodal_convergence <- map_dfr(
  names(ic_mgfr_jodal_res),
  function(gene_name) {
    converged <- ic_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ic_mgfr_jodal_converged <- ic_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

ic_mgfr_jodal_res_combined <- map_dfr(
  names(ic_mgfr_jodal_res),
  function(gene_name) {
    df <- ic_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ic_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ic_mgfr_jodal_res_combined <- ic_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

ic_mgfr_jodal_res_combined_disp <- map_dfr(
  names(ic_mgfr_jodal_res),
  function(gene_name) {
    df <- ic_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)
```

```{r echo = F}
plot_volcano_associations(ic_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "IC Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/ic_mgfr_jodal_trtcolors",
                          treatment_results = ic_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(ic_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "IC Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/ic_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(ic_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "IC Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ic_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ic_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ic_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ic_mgfr_jodal <- ic_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_ic_mgfr_jodal) <- ic_mgfr_jodal_res_combined$Gene
rankings_ic_mgfr_jodal <- sort(rankings_ic_mgfr_jodal, decreasing = TRUE)
plot(rankings_ic_mgfr_jodal)
min(rankings_ic_mgfr_jodal)
max(rankings_ic_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ic_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ic_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ic_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_ic_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ic_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_ic_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ic_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ic_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ic_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_ic_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ic_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_ic_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ic_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_ic_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ic_mgfr_jodal_filtered, title = "IC Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ic_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_ic_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ic_mgfr_jodal_filtered, title = "IC Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ic_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_ic_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ic_mgfr_jodal_filtered, title = "IC Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
ic_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/ic_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ic_mgfr_jodal_bsa_convergence <- map_dfr(
  names(ic_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- ic_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ic_mgfr_jodal_bsa_converged <- ic_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

ic_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(ic_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- ic_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ic_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ic_mgfr_jodal_bsa_res_combined <- ic_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

ic_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(ic_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- ic_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ic_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ic_mgfr_jodal_bsa.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ic_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "IC BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/ic_mgfr_jodal_bsa_trtcolors",
                          treatment_results = ic_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(ic_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "IC BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/ic_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(ic_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "IC BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ic_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ic_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ic_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ic_mgfr_jodal_bsa <- ic_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_ic_mgfr_jodal_bsa) <- ic_mgfr_jodal_bsa_res_combined$Gene
rankings_ic_mgfr_jodal_bsa <- sort(rankings_ic_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_ic_mgfr_jodal_bsa)
min(rankings_ic_mgfr_jodal_bsa)
max(rankings_ic_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ic_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ic_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ic_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_ic_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ic_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_ic_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ic_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ic_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ic_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_ic_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ic_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_ic_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ic_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_ic_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ic_mgfr_jodal_bsa_filtered, title = "IC Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ic_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_ic_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ic_mgfr_jodal_bsa_filtered, title = "IC Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ic_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_ic_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ic_mgfr_jodal_bsa_filtered, title = "IC Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
ic_tir_res <- s3readRDS('associations/nebula/tir/ic_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ic_tir_convergence <- map_dfr(
  names(ic_tir_res),
  function(gene_name) {
    converged <- ic_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ic_tir_converged <- ic_tir_convergence %>%
  filter(Convergence_Code >=-10)

ic_tir_res_combined <- map_dfr(
  names(ic_tir_res),
  function(gene_name) {
    df <- ic_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ic_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ic_tir_res_combined <- ic_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

ic_tir_res_combined_disp <- map_dfr(
  names(ic_tir_res),
  function(gene_name) {
    df <- ic_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ic_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ic_tir.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ic_tir_res_combined, 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "IC TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/ic_tir_trtcolors",
                          treatment_results = ic_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR")
```

```{r echo =F, eval = F}
plot_volcano(ic_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "IC TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/ic_tir",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")

plot_volcano(ic_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "IC TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_tir_fdr",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ic_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ic_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ic_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ic_tir <- ic_tir_res_combined$logFC_tir_delta
names(rankings_ic_tir) <- ic_tir_res_combined$Gene
rankings_ic_tir <- sort(rankings_ic_tir, decreasing = TRUE)
plot(rankings_ic_tir)
min(rankings_ic_tir)
max(rankings_ic_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ic_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ic_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ic_tir <- fgsea(pathways = reactome,
                              stats = rankings_ic_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ic_tir <- fgsea(pathways = go,
                        stats = rankings_ic_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ic_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ic_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ic_tir[, padj < 0.05], na.rm = T), sum(reactome_res_ic_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ic_tir[, padj < 0.05], na.rm = T), sum(go_res_ic_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ic_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_ic_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ic_tir_filtered, title = "IC Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ic_tir_filtered <- filter_redundant_pathways(reactome_res_ic_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ic_tir_filtered, title = "IC Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ic_tir_filtered <- filter_redundant_pathways(go_res_ic_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ic_tir_filtered, title = "IC Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
ic_hba1c_res <- s3readRDS('associations/nebula/hba1c/ic_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ic_hba1c_convergence <- map_dfr(
  names(ic_hba1c_res),
  function(gene_name) {
    converged <- ic_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ic_hba1c_converged <- ic_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

ic_hba1c_res_combined <- map_dfr(
  names(ic_hba1c_res),
  function(gene_name) {
    df <- ic_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ic_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ic_hba1c_res_combined <- ic_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

ic_hba1c_res_combined_disp <- map_dfr(
  names(ic_hba1c_res),
  function(gene_name) {
    df <- ic_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ic_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ic_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ic_hba1c_res_combined, 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "IC HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/ic_hba1c_trtcolors",
                          treatment_results = ic_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c")
```

```{r echo =F, eval = F}
plot_volcano(ic_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "IC HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/ic_hba1c",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")

plot_volcano(ic_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "IC HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_hba1c_fdr",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ic_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ic_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ic_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ic_hba1c <- ic_hba1c_res_combined$logFC_hba1c_delta
names(rankings_ic_hba1c) <- ic_hba1c_res_combined$Gene
rankings_ic_hba1c <- sort(rankings_ic_hba1c, decreasing = TRUE)
plot(rankings_ic_hba1c)
min(rankings_ic_hba1c)
max(rankings_ic_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ic_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ic_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ic_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_ic_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ic_hba1c <- fgsea(pathways = go,
                        stats = rankings_ic_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ic_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ic_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ic_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_ic_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ic_hba1c[, padj < 0.05], na.rm = T), sum(go_res_ic_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ic_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_ic_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ic_hba1c_filtered, title = "IC Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ic_hba1c_filtered <- filter_redundant_pathways(reactome_res_ic_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ic_hba1c_filtered, title = "IC Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ic_hba1c_filtered <- filter_redundant_pathways(go_res_ic_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ic_hba1c_filtered, title = "IC Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## Weight
```{r echo = F}
# Read in nebula results saved to kopah
ic_weight_res <- s3readRDS('associations/nebula/weight/ic_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ic_weight_convergence <- map_dfr(
  names(ic_weight_res),
  function(gene_name) {
    converged <- ic_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ic_weight_converged <- ic_weight_convergence %>%
  filter(Convergence_Code >=-10)

ic_weight_res_combined <- map_dfr(
  names(ic_weight_res),
  function(gene_name) {
    df <- ic_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ic_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ic_weight_res_combined <- ic_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

ic_weight_res_combined_disp <- map_dfr(
  names(ic_weight_res),
  function(gene_name) {
    df <- ic_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ic_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ic_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ic_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "IC Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/ic_weight_trtcolors",
                          treatment_results = ic_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight",
                          legend_position = c(0.95, 0.9))
```

```{r echo =F, eval = F}
plot_volcano(ic_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "IC Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/ic_weight",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")

plot_volcano(ic_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "IC Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_weight_fdr",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ic_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ic_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ic_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ic_weight <- ic_weight_res_combined$logFC_weight_delta
names(rankings_ic_weight) <- ic_weight_res_combined$Gene
rankings_ic_weight <- sort(rankings_ic_weight, decreasing = TRUE)
plot(rankings_ic_weight)
min(rankings_ic_weight)
max(rankings_ic_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ic_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ic_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ic_weight <- fgsea(pathways = reactome,
                              stats = rankings_ic_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ic_weight <- fgsea(pathways = go,
                        stats = rankings_ic_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ic_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ic_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ic_weight[, padj < 0.05], na.rm = T), sum(reactome_res_ic_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ic_weight[, padj < 0.05], na.rm = T), sum(go_res_ic_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ic_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_ic_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ic_weight_filtered, title = "IC Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ic_weight_filtered <- filter_redundant_pathways(reactome_res_ic_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ic_weight_filtered, title = "IC Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ic_weight_filtered <- filter_redundant_pathways(go_res_ic_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ic_weight_filtered, title = "IC Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
ic_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/ic_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ic_avg_c_r2_convergence <- map_dfr(
  names(ic_avg_c_r2_res),
  function(gene_name) {
    converged <- ic_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ic_avg_c_r2_converged <- ic_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

ic_avg_c_r2_res_combined <- map_dfr(
  names(ic_avg_c_r2_res),
  function(gene_name) {
    df <- ic_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ic_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ic_avg_c_r2_res_combined <- ic_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

ic_avg_c_r2_res_combined_disp <- map_dfr(
  names(ic_avg_c_r2_res),
  function(gene_name) {
    df <- ic_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

ic_avg_c_r2_res_combined <- subset(ic_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-20)

write.csv(ic_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ic_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ic_avg_c_r2_res_combined, 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "IC avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/ic_avg_c_r2_trtcolors",
                          treatment_results = ic_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo = F}
plot_volcano_associations(subset(pt_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "PT avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/pt_avg_k_r2_trtcolors",
                          treatment_results = pt_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(ic_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "IC Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/ic_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(ic_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "IC Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ic_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ic_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ic_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ic_avg_c_r2 <- ic_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_ic_avg_c_r2) <- ic_avg_c_r2_res_combined$Gene
rankings_ic_avg_c_r2 <- sort(rankings_ic_avg_c_r2, decreasing = TRUE)
plot(rankings_ic_avg_c_r2)
min(rankings_ic_avg_c_r2)
max(rankings_ic_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ic_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ic_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ic_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_ic_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ic_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_ic_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ic_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ic_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ic_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_ic_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ic_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_ic_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ic_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_ic_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ic_avg_c_r2_filtered, title = "IC Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ic_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_ic_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ic_avg_c_r2_filtered, title = "IC Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ic_avg_c_r2_filtered <- filter_redundant_pathways(go_res_ic_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ic_avg_c_r2_filtered, title = "IC Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```



## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
ic_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/ic_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ic_avg_k_r2_convergence <- map_dfr(
  names(ic_avg_k_r2_res),
  function(gene_name) {
    converged <- ic_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ic_avg_k_r2_converged <- ic_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

ic_avg_k_r2_res_combined <- map_dfr(
  names(ic_avg_k_r2_res),
  function(gene_name) {
    df <- ic_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ic_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ic_avg_k_r2_res_combined <- ic_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

ic_avg_k_r2_res_combined_disp <- map_dfr(
  names(ic_avg_k_r2_res),
  function(gene_name) {
    df <- ic_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ic_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ic_avg_k_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(subset(ic_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "IC avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/ic_avg_k_r2_trtcolors",
                          treatment_results = ic_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*",
                          legend_position = c(0.95,0.8))
```

```{r echo =F, eval = F}
plot_volcano(subset(ic_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "IC Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/ic_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(ic_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "IC Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ic_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ic_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ic_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ic_avg_k_r2 <- ic_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_ic_avg_k_r2) <- ic_avg_k_r2_res_combined$Gene
rankings_ic_avg_k_r2 <- sort(rankings_ic_avg_k_r2, decreasing = TRUE)
plot(rankings_ic_avg_k_r2)
min(rankings_ic_avg_k_r2)
max(rankings_ic_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ic_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ic_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ic_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_ic_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ic_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_ic_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ic_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ic_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ic_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_ic_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ic_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_ic_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ic_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_ic_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ic_avg_k_r2_filtered, title = "IC Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ic_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_ic_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ic_avg_k_r2_filtered, title = "IC Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ic_avg_k_r2_filtered <- filter_redundant_pathways(go_res_ic_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ic_avg_k_r2_filtered, title = "IC Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

# EC
```{r echo = F}
nebula_ec_results_list_reml_pooled <- s3readRDS('EC/nebula/ec_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ec_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_ec_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_ec_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ec_nebula_converged_reml_pooled <- ec_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

ec_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_ec_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_ec_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ec_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ec_nebula_res_combined_reml_pooled <- ec_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

ec_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_ec_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_ec_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

```

## mGFR (Raw)
```{r echo = F}
# Read in nebula results saved to kopah
ec_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/ec_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ec_mgfr_jodal_convergence <- map_dfr(
  names(ec_mgfr_jodal_res),
  function(gene_name) {
    converged <- ec_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ec_mgfr_jodal_converged <- ec_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

ec_mgfr_jodal_res_combined <- map_dfr(
  names(ec_mgfr_jodal_res),
  function(gene_name) {
    df <- ec_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ec_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ec_mgfr_jodal_res_combined <- ec_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

ec_mgfr_jodal_res_combined_disp <- map_dfr(
  names(ec_mgfr_jodal_res),
  function(gene_name) {
    df <- ec_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ec_mgfr_jodal_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ec_mgfr_jodal.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ec_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "EC Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/ec_mgfr_jodal_trtcolors",
                          treatment_results = ec_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(ec_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "EC Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/ec_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(ec_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "EC Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ec_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ec_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ec_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ec_mgfr_jodal <- ec_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_ec_mgfr_jodal) <- ec_mgfr_jodal_res_combined$Gene
rankings_ec_mgfr_jodal <- sort(rankings_ec_mgfr_jodal, decreasing = TRUE)
plot(rankings_ec_mgfr_jodal)
min(rankings_ec_mgfr_jodal)
max(rankings_ec_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ec_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ec_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ec_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_ec_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ec_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_ec_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ec_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ec_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ec_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_ec_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ec_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_ec_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ec_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_ec_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ec_mgfr_jodal_filtered, title = "EC Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ec_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_ec_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ec_mgfr_jodal_filtered, title = "EC Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ec_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_ec_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ec_mgfr_jodal_filtered, title = "EC Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
ec_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/ec_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ec_mgfr_jodal_bsa_convergence <- map_dfr(
  names(ec_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- ec_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ec_mgfr_jodal_bsa_converged <- ec_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

ec_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(ec_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- ec_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ec_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ec_mgfr_jodal_bsa_res_combined <- ec_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

ec_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(ec_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- ec_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ec_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ec_mgfr_jodal_bsa.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ec_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "EC BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/ec_mgfr_jodal_bsa_trtcolors",
                          treatment_results = ec_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR")
```

```{r echo =F, eval = F}
plot_volcano(ec_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "EC BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/ec_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(ec_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "EC BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ec_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ec_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ec_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ec_mgfr_jodal_bsa <- ec_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_ec_mgfr_jodal_bsa) <- ec_mgfr_jodal_bsa_res_combined$Gene
rankings_ec_mgfr_jodal_bsa <- sort(rankings_ec_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_ec_mgfr_jodal_bsa)
min(rankings_ec_mgfr_jodal_bsa)
max(rankings_ec_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ec_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ec_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ec_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_ec_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ec_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_ec_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ec_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ec_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ec_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_ec_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ec_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_ec_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ec_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_ec_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ec_mgfr_jodal_bsa_filtered, title = "EC Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ec_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_ec_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ec_mgfr_jodal_bsa_filtered, title = "EC Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ec_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_ec_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ec_mgfr_jodal_bsa_filtered, title = "EC Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
ec_tir_res <- s3readRDS('associations/nebula/tir/ec_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ec_tir_convergence <- map_dfr(
  names(ec_tir_res),
  function(gene_name) {
    converged <- ec_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ec_tir_converged <- ec_tir_convergence %>%
  filter(Convergence_Code >=-10)

ec_tir_res_combined <- map_dfr(
  names(ec_tir_res),
  function(gene_name) {
    df <- ec_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ec_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ec_tir_res_combined <- ec_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

ec_tir_res_combined_disp <- map_dfr(
  names(ec_tir_res),
  function(gene_name) {
    df <- ec_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ec_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ec_tir.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ec_tir_res_combined, 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "EC TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/ec_tir_trtcolors",
                          treatment_results = ec_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR")
```

```{r echo =F, eval = F}
plot_volcano(ec_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "EC TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/ec_tir",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")

plot_volcano(ec_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "EC TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_tir_fdr",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ec_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ec_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ec_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ec_tir <- ec_tir_res_combined$logFC_tir_delta
names(rankings_ec_tir) <- ec_tir_res_combined$Gene
rankings_ec_tir <- sort(rankings_ec_tir, decreasing = TRUE)
plot(rankings_ec_tir)
min(rankings_ec_tir)
max(rankings_ec_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ec_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ec_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ec_tir <- fgsea(pathways = reactome,
                              stats = rankings_ec_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ec_tir <- fgsea(pathways = go,
                        stats = rankings_ec_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ec_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ec_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ec_tir[, padj < 0.05], na.rm = T), sum(reactome_res_ec_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ec_tir[, padj < 0.05], na.rm = T), sum(go_res_ec_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ec_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_ec_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ec_tir_filtered, title = "EC Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ec_tir_filtered <- filter_redundant_pathways(reactome_res_ec_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ec_tir_filtered, title = "EC Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ec_tir_filtered <- filter_redundant_pathways(go_res_ec_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ec_tir_filtered, title = "EC Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
ec_hba1c_res <- s3readRDS('associations/nebula/hba1c/ec_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ec_hba1c_convergence <- map_dfr(
  names(ec_hba1c_res),
  function(gene_name) {
    converged <- ec_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ec_hba1c_converged <- ec_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

ec_hba1c_res_combined <- map_dfr(
  names(ec_hba1c_res),
  function(gene_name) {
    df <- ec_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ec_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ec_hba1c_res_combined <- ec_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

ec_hba1c_res_combined_disp <- map_dfr(
  names(ec_hba1c_res),
  function(gene_name) {
    df <- ec_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ec_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ec_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ec_hba1c_res_combined, 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "EC HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/ec_hba1c_trtcolors",
                          treatment_results = ec_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c")
```

```{r echo =F, eval = F}
plot_volcano(ec_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "EC HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/ec_hba1c",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")

plot_volcano(ec_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "EC HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_hba1c_fdr",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ec_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ec_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ec_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ec_hba1c <- ec_hba1c_res_combined$logFC_hba1c_delta
names(rankings_ec_hba1c) <- ec_hba1c_res_combined$Gene
rankings_ec_hba1c <- sort(rankings_ec_hba1c, decreasing = TRUE)
plot(rankings_ec_hba1c)
min(rankings_ec_hba1c)
max(rankings_ec_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ec_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ec_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ec_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_ec_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ec_hba1c <- fgsea(pathways = go,
                        stats = rankings_ec_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ec_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ec_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ec_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_ec_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ec_hba1c[, padj < 0.05], na.rm = T), sum(go_res_ec_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ec_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_ec_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ec_hba1c_filtered, title = "EC Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ec_hba1c_filtered <- filter_redundant_pathways(reactome_res_ec_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ec_hba1c_filtered, title = "EC Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ec_hba1c_filtered <- filter_redundant_pathways(go_res_ec_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ec_hba1c_filtered, title = "EC Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Weight
```{r echo = F}
# Read in nebula results saved to kopah
ec_weight_res <- s3readRDS('associations/nebula/weight/ec_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ec_weight_convergence <- map_dfr(
  names(ec_weight_res),
  function(gene_name) {
    converged <- ec_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ec_weight_converged <- ec_weight_convergence %>%
  filter(Convergence_Code >=-10)

ec_weight_res_combined <- map_dfr(
  names(ec_weight_res),
  function(gene_name) {
    df <- ec_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ec_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ec_weight_res_combined <- ec_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

ec_weight_res_combined_disp <- map_dfr(
  names(ec_weight_res),
  function(gene_name) {
    df <- ec_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ec_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ec_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ec_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "EC Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/ec_weight_trtcolors",
                          treatment_results = ec_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight")
```

```{r echo =F, eval = F}
plot_volcano(ec_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "EC Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/ec_weight")

plot_volcano(ec_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "EC Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_weight_fdr")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ec_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ec_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ec_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ec_weight <- ec_weight_res_combined$logFC_weight_delta
names(rankings_ec_weight) <- ec_weight_res_combined$Gene
rankings_ec_weight <- sort(rankings_ec_weight, decreasing = TRUE)
plot(rankings_ec_weight)
min(rankings_ec_weight)
max(rankings_ec_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ec_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ec_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ec_weight <- fgsea(pathways = reactome,
                              stats = rankings_ec_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ec_weight <- fgsea(pathways = go,
                        stats = rankings_ec_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ec_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ec_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ec_weight[, padj < 0.05], na.rm = T), sum(reactome_res_ec_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ec_weight[, padj < 0.05], na.rm = T), sum(go_res_ec_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ec_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_ec_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ec_weight_filtered, title = "EC Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ec_weight_filtered <- filter_redundant_pathways(reactome_res_ec_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ec_weight_filtered, title = "EC Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ec_weight_filtered <- filter_redundant_pathways(go_res_ec_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ec_weight_filtered, title = "EC Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
ec_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/ec_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ec_avg_c_r2_convergence <- map_dfr(
  names(ec_avg_c_r2_res),
  function(gene_name) {
    converged <- ec_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ec_avg_c_r2_converged <- ec_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

ec_avg_c_r2_res_combined <- map_dfr(
  names(ec_avg_c_r2_res),
  function(gene_name) {
    df <- ec_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ec_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ec_avg_c_r2_res_combined <- ec_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

ec_avg_c_r2_res_combined_disp <- map_dfr(
  names(ec_avg_c_r2_res),
  function(gene_name) {
    df <- ec_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

ec_avg_c_r2_res_combined <- subset(ec_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-20)

write.csv(ec_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ec_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(ec_avg_c_r2_res_combined, 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "EC avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/ec_avg_c_r2_trtcolors",
                          treatment_results = ec_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(ec_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "EC Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/ec_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(ec_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "EC Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ec_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ec_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ec_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ec_avg_c_r2 <- ec_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_ec_avg_c_r2) <- ec_avg_c_r2_res_combined$Gene
rankings_ec_avg_c_r2 <- sort(rankings_ec_avg_c_r2, decreasing = TRUE)
plot(rankings_ec_avg_c_r2)
min(rankings_ec_avg_c_r2)
max(rankings_ec_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ec_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ec_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ec_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_ec_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ec_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_ec_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ec_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ec_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ec_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_ec_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ec_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_ec_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ec_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_ec_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ec_avg_c_r2_filtered, title = "EC Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ec_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_ec_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ec_avg_c_r2_filtered, title = "EC Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ec_avg_c_r2_filtered <- filter_redundant_pathways(go_res_ec_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ec_avg_c_r2_filtered, title = "EC Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```



## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
ec_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/ec_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
ec_avg_k_r2_convergence <- map_dfr(
  names(ec_avg_k_r2_res),
  function(gene_name) {
    converged <- ec_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

ec_avg_k_r2_converged <- ec_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

ec_avg_k_r2_res_combined <- map_dfr(
  names(ec_avg_k_r2_res),
  function(gene_name) {
    df <- ec_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% ec_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

ec_avg_k_r2_res_combined <- ec_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

ec_avg_k_r2_res_combined_disp <- map_dfr(
  names(ec_avg_k_r2_res),
  function(gene_name) {
    df <- ec_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(ec_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/ec_avg_k_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(subset(ec_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "EC avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/ec_avg_k_r2_trtcolors",
                          treatment_results = ec_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(ec_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "EC Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/ec_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(ec_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "EC Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(ec_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(ec_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(ec_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_ec_avg_k_r2 <- ec_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_ec_avg_k_r2) <- ec_avg_k_r2_res_combined$Gene
rankings_ec_avg_k_r2 <- sort(rankings_ec_avg_k_r2, decreasing = TRUE)
plot(rankings_ec_avg_k_r2)
min(rankings_ec_avg_k_r2)
max(rankings_ec_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_ec_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_ec_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_ec_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_ec_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_ec_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_ec_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_ec_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_ec_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_ec_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_ec_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_ec_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_ec_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_ec_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_ec_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_ec_avg_k_r2_filtered, title = "EC Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_ec_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_ec_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_ec_avg_k_r2_filtered, title = "EC Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_ec_avg_k_r2_filtered <- filter_redundant_pathways(go_res_ec_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_ec_avg_k_r2_filtered, title = "EC Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

# FIB/VSMC/P

```{r echo = F}
nebula_fibvsmc_results_list_reml_pooled <- s3readRDS('FIBVSMCP/nebula/fibvsmc_attempt_hvg_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
fibvsmc_nebula_convergence_reml_pooled <- map_dfr(
  names(nebula_fibvsmc_results_list_reml_pooled),
  function(gene_name) {
    converged <- nebula_fibvsmc_results_list_reml_pooled[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

fibvsmc_nebula_converged_reml_pooled <- fibvsmc_nebula_convergence_reml_pooled %>%
  filter(Convergence_Code >=-10)

fibvsmc_nebula_res_combined_reml_pooled <- map_dfr(
  names(nebula_fibvsmc_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_fibvsmc_results_list_reml_pooled[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% fibvsmc_nebula_converged_reml_pooled$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_nebula_res_combined_reml_pooled <- fibvsmc_nebula_res_combined_reml_pooled%>%
  mutate(fdr_interaction = p.adjust(`p_treatmentDapagliflozin:visitPOST`, method = "fdr"))

fibvsmc_nebula_disp_combined_reml_pooled <- map_dfr(
  names(nebula_fibvsmc_results_list_reml_pooled),
  function(gene_name) {
    df <- nebula_fibvsmc_results_list_reml_pooled[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

```
## mGFR (Raw)
```{r echo = F}
# Read in nebula results saved to kopah
fibvsmc_mgfr_jodal_res <- s3readRDS('associations/nebula/mgfr_jodal/fibvsmc_attempt_nebula_mgfr_jodal.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
fibvsmc_mgfr_jodal_convergence <- map_dfr(
  names(fibvsmc_mgfr_jodal_res),
  function(gene_name) {
    converged <- fibvsmc_mgfr_jodal_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

fibvsmc_mgfr_jodal_converged <- fibvsmc_mgfr_jodal_convergence %>%
  filter(Convergence_Code >=-10)

fibvsmc_mgfr_jodal_res_combined <- map_dfr(
  names(fibvsmc_mgfr_jodal_res),
  function(gene_name) {
    df <- fibvsmc_mgfr_jodal_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% fibvsmc_mgfr_jodal_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_mgfr_jodal_res_combined <- fibvsmc_mgfr_jodal_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_delta, method = "fdr"))

fibvsmc_mgfr_jodal_res_combined_disp <- map_dfr(
  names(fibvsmc_mgfr_jodal_res),
  function(gene_name) {
    df <- fibvsmc_mgfr_jodal_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(fibvsmc_mgfr_jodal_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/fibvsmc_mgfr_jodal.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(fibvsmc_mgfr_jodal_res_combined, 
                          "logFC_mgfr_jodal_delta", 
                          "p_mgfr_jodal_delta",
                          "FIB, VSMC/P Raw mGFR", 
                          "logFC \u0394 mGFR (Raw)", 
                          "-log10(p-value)",
                          "nebula/fibvsmc_mgfr_jodal_trtcolors",
                          treatment_results = fibvsmc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (Raw) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(fibvsmc_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "p_mgfr_jodal_delta",
             "FIB, VSMC/P Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(p-value)",
             "nebula/fibvsmc_mgfr_jodal",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(fibvsmc_mgfr_jodal_res_combined, "logFC_mgfr_jodal_delta", 
             "fdr_interaction",
             "FIB, VSMC/P Raw mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (Raw)", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_mgfr_jodal_fdr",
             formula = "\u0394 mGFR (Raw) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(fibvsmc_mgfr_jodal_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(fibvsmc_mgfr_jodal_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(fibvsmc_mgfr_jodal_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_fibvsmc_mgfr_jodal <- fibvsmc_mgfr_jodal_res_combined$logFC_mgfr_jodal_delta
names(rankings_fibvsmc_mgfr_jodal) <- fibvsmc_mgfr_jodal_res_combined$Gene
rankings_fibvsmc_mgfr_jodal <- sort(rankings_fibvsmc_mgfr_jodal, decreasing = TRUE)
plot(rankings_fibvsmc_mgfr_jodal)
min(rankings_fibvsmc_mgfr_jodal)
max(rankings_fibvsmc_mgfr_jodal)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_fibvsmc_mgfr_jodal <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_fibvsmc_mgfr_jodal,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_fibvsmc_mgfr_jodal <- fgsea(pathways = reactome,
                              stats = rankings_fibvsmc_mgfr_jodal,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_fibvsmc_mgfr_jodal <- fgsea(pathways = go,
                        stats = rankings_fibvsmc_mgfr_jodal,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_fibvsmc_mgfr_jodal[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_fibvsmc_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_fibvsmc_mgfr_jodal[, padj < 0.05], na.rm = T), sum(reactome_res_fibvsmc_mgfr_jodal[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_fibvsmc_mgfr_jodal[, padj < 0.05], na.rm = T), sum(go_res_fibvsmc_mgfr_jodal[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_fibvsmc_mgfr_jodal_filtered <- filter_redundant_pathways(kegg_legacy_res_fibvsmc_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_fibvsmc_mgfr_jodal_filtered, title = "FIB, VSMC/P Top 30 Raw mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_mgfr_jodal_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_fibvsmc_mgfr_jodal_filtered <- filter_redundant_pathways(reactome_res_fibvsmc_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_fibvsmc_mgfr_jodal_filtered, title = "FIB, VSMC/P Top 30  Raw mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_mgfr_jodal_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_fibvsmc_mgfr_jodal_filtered <- filter_redundant_pathways(go_res_fibvsmc_mgfr_jodal, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_fibvsmc_mgfr_jodal_filtered, title = "FIB, VSMC/P Top 30  Raw mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_mgfr_jodal_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## mGFR (BSA)
```{r echo = F}
# Read in nebula results saved to kopah
fibvsmc_mgfr_jodal_bsa_res <- s3readRDS('associations/nebula/mgfr_jodal_bsa/fibvsmc_attempt_nebula_mgfr_jodal_bsa.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
fibvsmc_mgfr_jodal_bsa_convergence <- map_dfr(
  names(fibvsmc_mgfr_jodal_bsa_res),
  function(gene_name) {
    converged <- fibvsmc_mgfr_jodal_bsa_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

fibvsmc_mgfr_jodal_bsa_converged <- fibvsmc_mgfr_jodal_bsa_convergence %>%
  filter(Convergence_Code >=-10)

fibvsmc_mgfr_jodal_bsa_res_combined <- map_dfr(
  names(fibvsmc_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- fibvsmc_mgfr_jodal_bsa_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% fibvsmc_mgfr_jodal_bsa_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_mgfr_jodal_bsa_res_combined <- fibvsmc_mgfr_jodal_bsa_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_mgfr_jodal_bsa_delta, method = "fdr"))

fibvsmc_mgfr_jodal_bsa_res_combined_disp <- map_dfr(
  names(fibvsmc_mgfr_jodal_bsa_res),
  function(gene_name) {
    df <- fibvsmc_mgfr_jodal_bsa_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(fibvsmc_mgfr_jodal_bsa_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/fibvsmc_mgfr_jodal_bsa.csv", row.names = F)
```

```{r echo = F}
plot_volcano_associations(fibvsmc_mgfr_jodal_bsa_res_combined, 
                          "logFC_mgfr_jodal_bsa_delta", 
                          "p_mgfr_jodal_bsa_delta",
                          "FIB, VSMC/P BSA mGFR", 
                          "logFC \u0394 mGFR (BSA)", 
                          "-log10(p-value)",
                          "nebula/fibvsmc_mgfr_jodal_bsa_trtcolors",
                          treatment_results = fibvsmc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 mGFR (BSA) + treatment",
                          positive_text = "Positively associated with \u0394 mGFR",
                          negative_text = "Negatively associated with \u0394 mGFR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(fibvsmc_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "p_mgfr_jodal_bsa_delta",
             "FIB, VSMC/P BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(p-value)",
             "nebula/fibvsmc_mgfr_jodal_bsa",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")

plot_volcano(fibvsmc_mgfr_jodal_bsa_res_combined, "logFC_mgfr_jodal_bsa_delta", 
             "fdr_interaction",
             "FIB, VSMC/P BSA mGFR (REML & Pooled offset)", 
             "logFC \u0394 mGFR (BSA)", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_mgfr_jodal_bsa_fdr",
             formula = "\u0394 mGFR (BSA) + treatment",
             positive_text = "Positively associated with \u0394 mGFR",
             negative_text = "Negatively associated with \u0394 mGFR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(fibvsmc_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(fibvsmc_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(fibvsmc_mgfr_jodal_bsa_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_fibvsmc_mgfr_jodal_bsa <- fibvsmc_mgfr_jodal_bsa_res_combined$logFC_mgfr_jodal_bsa_delta
names(rankings_fibvsmc_mgfr_jodal_bsa) <- fibvsmc_mgfr_jodal_bsa_res_combined$Gene
rankings_fibvsmc_mgfr_jodal_bsa <- sort(rankings_fibvsmc_mgfr_jodal_bsa, decreasing = TRUE)
plot(rankings_fibvsmc_mgfr_jodal_bsa)
min(rankings_fibvsmc_mgfr_jodal_bsa)
max(rankings_fibvsmc_mgfr_jodal_bsa)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_fibvsmc_mgfr_jodal_bsa <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_fibvsmc_mgfr_jodal_bsa,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_fibvsmc_mgfr_jodal_bsa <- fgsea(pathways = reactome,
                              stats = rankings_fibvsmc_mgfr_jodal_bsa,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_fibvsmc_mgfr_jodal_bsa <- fgsea(pathways = go,
                        stats = rankings_fibvsmc_mgfr_jodal_bsa,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_fibvsmc_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_fibvsmc_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_fibvsmc_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(reactome_res_fibvsmc_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_fibvsmc_mgfr_jodal_bsa[, padj < 0.05], na.rm = T), sum(go_res_fibvsmc_mgfr_jodal_bsa[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_fibvsmc_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(kegg_legacy_res_fibvsmc_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_fibvsmc_mgfr_jodal_bsa_filtered, title = "FIB, VSMC/P Top 30 BSA mGFR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_mgfr_jodal_bsa_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_fibvsmc_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(reactome_res_fibvsmc_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_fibvsmc_mgfr_jodal_bsa_filtered, title = "FIB, VSMC/P Top 30 BSA mGFR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_mgfr_jodal_bsa_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_fibvsmc_mgfr_jodal_bsa_filtered <- filter_redundant_pathways(go_res_fibvsmc_mgfr_jodal_bsa, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_fibvsmc_mgfr_jodal_bsa_filtered, title = "FIB, VSMC/P Top 30 BSA mGFR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_mgfr_jodal_bsa_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## TIR
```{r echo = F}
# Read in nebula results saved to kopah
fibvsmc_tir_res <- s3readRDS('associations/nebula/tir/fibvsmc_attempt_nebula_tir.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
fibvsmc_tir_convergence <- map_dfr(
  names(fibvsmc_tir_res),
  function(gene_name) {
    converged <- fibvsmc_tir_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

fibvsmc_tir_converged <- fibvsmc_tir_convergence %>%
  filter(Convergence_Code >=-10)

fibvsmc_tir_res_combined <- map_dfr(
  names(fibvsmc_tir_res),
  function(gene_name) {
    df <- fibvsmc_tir_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% fibvsmc_tir_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_tir_res_combined <- fibvsmc_tir_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_tir_delta, method = "fdr"))

fibvsmc_tir_res_combined_disp <- map_dfr(
  names(fibvsmc_tir_res),
  function(gene_name) {
    df <- fibvsmc_tir_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(fibvsmc_tir_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/fibvsmc_tir.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(fibvsmc_tir_res_combined, 
                          "logFC_tir_delta", 
                          "p_tir_delta",
                          "FIB, VSMC/P TIR", 
                          "logFC \u0394 TIR", 
                          "-log10(p-value)",
                          "nebula/fibvsmc_tir_trtcolors",
                          treatment_results = fibvsmc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 TIR + treatment",
                          positive_text = "Positively associated with \u0394 TIR",
                          negative_text = "Negatively associated with \u0394 TIR",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(fibvsmc_tir_res_combined, "logFC_tir_delta", 
             "p_tir_delta",
             "FIB, VSMC/P TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(p-value)",
             "nebula/fibvsmc_tir",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")

plot_volcano(fibvsmc_tir_res_combined, "logFC_tir_delta", 
             "fdr_interaction",
             "FIB, VSMC/P TIR (REML & Pooled offset)", 
             "logFC \u0394 TIR", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_tir_fdr",
             formula = "\u0394 TIR + treatment",
             positive_text = "Positively associated with \u0394 TIR",
             negative_text = "Negatively associated with \u0394 TIR")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(fibvsmc_tir_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(fibvsmc_tir_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(fibvsmc_tir_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_fibvsmc_tir <- fibvsmc_tir_res_combined$logFC_tir_delta
names(rankings_fibvsmc_tir) <- fibvsmc_tir_res_combined$Gene
rankings_fibvsmc_tir <- sort(rankings_fibvsmc_tir, decreasing = TRUE)
plot(rankings_fibvsmc_tir)
min(rankings_fibvsmc_tir)
max(rankings_fibvsmc_tir)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_fibvsmc_tir <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_fibvsmc_tir,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_fibvsmc_tir <- fgsea(pathways = reactome,
                              stats = rankings_fibvsmc_tir,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_fibvsmc_tir <- fgsea(pathways = go,
                        stats = rankings_fibvsmc_tir,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_fibvsmc_tir[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_fibvsmc_tir[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_fibvsmc_tir[, padj < 0.05], na.rm = T), sum(reactome_res_fibvsmc_tir[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_fibvsmc_tir[, padj < 0.05], na.rm = T), sum(go_res_fibvsmc_tir[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_fibvsmc_tir_filtered <- filter_redundant_pathways(kegg_legacy_res_fibvsmc_tir, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_fibvsmc_tir_filtered, title = "FIB, VSMC/P Top 30 TIR Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_tir_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_fibvsmc_tir_filtered <- filter_redundant_pathways(reactome_res_fibvsmc_tir, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_fibvsmc_tir_filtered, title = "FIB, VSMC/P Top 30  TIR Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_tir_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_fibvsmc_tir_filtered <- filter_redundant_pathways(go_res_fibvsmc_tir, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_fibvsmc_tir_filtered, title = "FIB, VSMC/P Top 30  TIR Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_tir_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## HbA1c
```{r echo = F}
# Read in nebula results saved to kopah
fibvsmc_hba1c_res <- s3readRDS('associations/nebula/hba1c/fibvsmc_attempt_nebula_hba1c.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
fibvsmc_hba1c_convergence <- map_dfr(
  names(fibvsmc_hba1c_res),
  function(gene_name) {
    converged <- fibvsmc_hba1c_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

fibvsmc_hba1c_converged <- fibvsmc_hba1c_convergence %>%
  filter(Convergence_Code >=-10)

fibvsmc_hba1c_res_combined <- map_dfr(
  names(fibvsmc_hba1c_res),
  function(gene_name) {
    df <- fibvsmc_hba1c_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% fibvsmc_hba1c_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_hba1c_res_combined <- fibvsmc_hba1c_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_hba1c_delta, method = "fdr"))

fibvsmc_hba1c_res_combined_disp <- map_dfr(
  names(fibvsmc_hba1c_res),
  function(gene_name) {
    df <- fibvsmc_hba1c_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(fibvsmc_hba1c_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/fibvsmc_hba1c.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(fibvsmc_hba1c_res_combined, 
                          "logFC_hba1c_delta", 
                          "p_hba1c_delta",
                          "FIB, VSMC/P HbA1c", 
                          "logFC \u0394 HbA1c", 
                          "-log10(p-value)",
                          "nebula/fibvsmc_hba1c_trtcolors",
                          treatment_results = fibvsmc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 HbA1c + treatment",
                          positive_text = "Positively associated with \u0394 HbA1c",
                          negative_text = "Negatively associated with \u0394 HbA1c",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(fibvsmc_hba1c_res_combined, "logFC_hba1c_delta", 
             "p_hba1c_delta",
             "FIB, VSMC/P HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(p-value)",
             "nebula/fibvsmc_hba1c",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")

plot_volcano(fibvsmc_hba1c_res_combined, "logFC_hba1c_delta", 
             "fdr_interaction",
             "FIB, VSMC/P HbA1c (REML & Pooled offset)", 
             "logFC \u0394 HbA1c", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_hba1c_fdr",
             formula = "\u0394 HbA1c + treatment",
             positive_text = "Positively associated with \u0394 HbA1c",
             negative_text = "Negatively associated with \u0394 HbA1c")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(fibvsmc_hba1c_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(fibvsmc_hba1c_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(fibvsmc_hba1c_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_fibvsmc_hba1c <- fibvsmc_hba1c_res_combined$logFC_hba1c_delta
names(rankings_fibvsmc_hba1c) <- fibvsmc_hba1c_res_combined$Gene
rankings_fibvsmc_hba1c <- sort(rankings_fibvsmc_hba1c, decreasing = TRUE)
plot(rankings_fibvsmc_hba1c)
min(rankings_fibvsmc_hba1c)
max(rankings_fibvsmc_hba1c)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_fibvsmc_hba1c <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_fibvsmc_hba1c,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_fibvsmc_hba1c <- fgsea(pathways = reactome,
                              stats = rankings_fibvsmc_hba1c,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_fibvsmc_hba1c <- fgsea(pathways = go,
                        stats = rankings_fibvsmc_hba1c,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_fibvsmc_hba1c[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_fibvsmc_hba1c[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_fibvsmc_hba1c[, padj < 0.05], na.rm = T), sum(reactome_res_fibvsmc_hba1c[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_fibvsmc_hba1c[, padj < 0.05], na.rm = T), sum(go_res_fibvsmc_hba1c[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_fibvsmc_hba1c_filtered <- filter_redundant_pathways(kegg_legacy_res_fibvsmc_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_fibvsmc_hba1c_filtered, title = "FIB, VSMC/P Top 30 HbA1c Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_hba1c_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_fibvsmc_hba1c_filtered <- filter_redundant_pathways(reactome_res_fibvsmc_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_fibvsmc_hba1c_filtered, title = "FIB, VSMC/P Top 30  HbA1c Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_hba1c_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_fibvsmc_hba1c_filtered <- filter_redundant_pathways(go_res_fibvsmc_hba1c, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_fibvsmc_hba1c_filtered, title = "FIB, VSMC/P Top 30  HbA1c Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_hba1c_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

## Weight
```{r echo = F}
# Read in nebula results saved to kopah
fibvsmc_weight_res <- s3readRDS('associations/nebula/weight/fibvsmc_attempt_nebula_weight.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
fibvsmc_weight_convergence <- map_dfr(
  names(fibvsmc_weight_res),
  function(gene_name) {
    converged <- fibvsmc_weight_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

fibvsmc_weight_converged <- fibvsmc_weight_convergence %>%
  filter(Convergence_Code >=-10)

fibvsmc_weight_res_combined <- map_dfr(
  names(fibvsmc_weight_res),
  function(gene_name) {
    df <- fibvsmc_weight_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% fibvsmc_weight_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_weight_res_combined <- fibvsmc_weight_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_weight_delta, method = "fdr"))

fibvsmc_weight_res_combined_disp <- map_dfr(
  names(fibvsmc_weight_res),
  function(gene_name) {
    df <- fibvsmc_weight_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(fibvsmc_weight_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/fibvsmc_weight.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(fibvsmc_weight_res_combined, 
                          "logFC_weight_delta", 
                          "p_weight_delta",
                          "FIB, VSMC/P Weight", 
                          "logFC \u0394 Weight", 
                          "-log10(p-value)",
                          "nebula/fibvsmc_weight_trtcolors",
                          treatment_results = fibvsmc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 Weight + treatment",
                          positive_text = "Positively associated with \u0394 Weight",
                          negative_text = "Negatively associated with \u0394 Weight",
                          legend_position = c(0.95, 0.8))
```

```{r echo =F, eval = F}
plot_volcano(fibvsmc_weight_res_combined, "logFC_weight_delta", 
             "p_weight_delta",
             "FIB, VSMC/P Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(p-value)",
             "nebula/fibvsmc_weight",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")

plot_volcano(fibvsmc_weight_res_combined, "logFC_weight_delta", 
             "fdr_interaction",
             "FIB, VSMC/P Weight (REML & Pooled offset)", 
             "logFC \u0394 Weight", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_weight_fdr",
             formula = "\u0394 weight + treatment",
             positive_text = "Positively associated with \u0394 weight",
             negative_text = "Negatively associated with \u0394 weight")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(fibvsmc_weight_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(fibvsmc_weight_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(fibvsmc_weight_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_fibvsmc_weight <- fibvsmc_weight_res_combined$logFC_weight_delta
names(rankings_fibvsmc_weight) <- fibvsmc_weight_res_combined$Gene
rankings_fibvsmc_weight <- sort(rankings_fibvsmc_weight, decreasing = TRUE)
plot(rankings_fibvsmc_weight)
min(rankings_fibvsmc_weight)
max(rankings_fibvsmc_weight)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_fibvsmc_weight <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_fibvsmc_weight,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_fibvsmc_weight <- fgsea(pathways = reactome,
                              stats = rankings_fibvsmc_weight,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_fibvsmc_weight <- fgsea(pathways = go,
                        stats = rankings_fibvsmc_weight,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_fibvsmc_weight[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_fibvsmc_weight[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_fibvsmc_weight[, padj < 0.05], na.rm = T), sum(reactome_res_fibvsmc_weight[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_fibvsmc_weight[, padj < 0.05], na.rm = T), sum(go_res_fibvsmc_weight[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_fibvsmc_weight_filtered <- filter_redundant_pathways(kegg_legacy_res_fibvsmc_weight, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_fibvsmc_weight_filtered, title = "FIB, VSMC/P Top 30 Weight Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_weight_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_fibvsmc_weight_filtered <- filter_redundant_pathways(reactome_res_fibvsmc_weight, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_fibvsmc_weight_filtered, title = "FIB, VSMC/P Top 30  Weight Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_weight_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_fibvsmc_weight_filtered <- filter_redundant_pathways(go_res_fibvsmc_weight, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_fibvsmc_weight_filtered, title = "FIB, VSMC/P Top 30  Weight Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_weight_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


## Avg cortical R2*
```{r echo = F}
# Read in nebula results saved to kopah
fibvsmc_avg_c_r2_res <- s3readRDS('associations/nebula/avg_c_r2/fibvsmc_attempt_nebula_avg_c_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
fibvsmc_avg_c_r2_convergence <- map_dfr(
  names(fibvsmc_avg_c_r2_res),
  function(gene_name) {
    converged <- fibvsmc_avg_c_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

fibvsmc_avg_c_r2_converged <- fibvsmc_avg_c_r2_convergence %>%
  filter(Convergence_Code >=-10)

fibvsmc_avg_c_r2_res_combined <- map_dfr(
  names(fibvsmc_avg_c_r2_res),
  function(gene_name) {
    df <- fibvsmc_avg_c_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% fibvsmc_avg_c_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_avg_c_r2_res_combined <- fibvsmc_avg_c_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_c_r2_delta, method = "fdr"))

fibvsmc_avg_c_r2_res_combined_disp <- map_dfr(
  names(fibvsmc_avg_c_r2_res),
  function(gene_name) {
    df <- fibvsmc_avg_c_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_avg_c_r2_res_combined<- subset(fibvsmc_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-20)

write.csv(fibvsmc_avg_c_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/fibvsmc_avg_c_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(fibvsmc_avg_c_r2_res_combined, 
                          "logFC_avg_c_r2_delta", 
                          "p_avg_c_r2_delta",
                          "FIB, VSMC/P avg cortical R2*", 
                          "logFC \u0394 avg cortical R2*", 
                          "-log10(p-value)",
                          "nebula/fibvsmc_avg_c_r2_trtcolors",
                          treatment_results = fibvsmc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg cortical R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg cortical R2*",
                          negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(fibvsmc_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "p_avg_c_r2_delta",
             "FIB, VSMC/P Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(p-value)",
             "nebula/fibvsmc_avg_c_r2",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")

plot_volcano(subset(fibvsmc_avg_c_r2_res_combined, logFC_avg_c_r2_delta >-10), "logFC_avg_c_r2_delta", 
             "fdr_interaction",
             "FIB, VSMC/P Avg Cortical R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Cortical R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_avg_c_r2_fdr",
             formula = "\u0394 avg cortical R2* + treatment",
             positive_text = "Positively associated with \u0394 avg cortical R2*",
             negative_text = "Negatively associated with \u0394 avg cortical R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(fibvsmc_avg_c_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(fibvsmc_avg_c_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(fibvsmc_avg_c_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_fibvsmc_avg_c_r2 <- fibvsmc_avg_c_r2_res_combined$logFC_avg_c_r2_delta
names(rankings_fibvsmc_avg_c_r2) <- fibvsmc_avg_c_r2_res_combined$Gene
rankings_fibvsmc_avg_c_r2 <- sort(rankings_fibvsmc_avg_c_r2, decreasing = TRUE)
plot(rankings_fibvsmc_avg_c_r2)
min(rankings_fibvsmc_avg_c_r2)
max(rankings_fibvsmc_avg_c_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_fibvsmc_avg_c_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_fibvsmc_avg_c_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_fibvsmc_avg_c_r2 <- fgsea(pathways = reactome,
                              stats = rankings_fibvsmc_avg_c_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_fibvsmc_avg_c_r2 <- fgsea(pathways = go,
                        stats = rankings_fibvsmc_avg_c_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_fibvsmc_avg_c_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_fibvsmc_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_fibvsmc_avg_c_r2[, padj < 0.05], na.rm = T), sum(reactome_res_fibvsmc_avg_c_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_fibvsmc_avg_c_r2[, padj < 0.05], na.rm = T), sum(go_res_fibvsmc_avg_c_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_fibvsmc_avg_c_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_fibvsmc_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_fibvsmc_avg_c_r2_filtered, title = "FIB, VSMC/P Top 30 Avg Cortical R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_avg_c_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_fibvsmc_avg_c_r2_filtered <- filter_redundant_pathways(reactome_res_fibvsmc_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_fibvsmc_avg_c_r2_filtered, title = "FIB, VSMC/P Top 30  Avg Cortical R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_avg_c_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_fibvsmc_avg_c_r2_filtered <- filter_redundant_pathways(go_res_fibvsmc_avg_c_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_fibvsmc_avg_c_r2_filtered, title = "FIB, VSMC/P Top 30  Avg Cortical R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_avg_c_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```



## Avg kidney R2*
```{r echo = F}
# Read in nebula results saved to kopah
fibvsmc_avg_k_r2_res <- s3readRDS('associations/nebula/avg_k_r2/fibvsmc_attempt_nebula_avg_k_r2.rds', bucket = "attempt", region = "")

# nebula only keeps results for converged
fibvsmc_avg_k_r2_convergence <- map_dfr(
  names(fibvsmc_avg_k_r2_res),
  function(gene_name) {
    converged <- fibvsmc_avg_k_r2_res[[gene_name]]$convergence
    df <- data.frame(Gene = gene_name,
                     Convergence_Code = converged)
    return(df)
  }
)

fibvsmc_avg_k_r2_converged <- fibvsmc_avg_k_r2_convergence %>%
  filter(Convergence_Code >=-10)

fibvsmc_avg_k_r2_res_combined <- map_dfr(
  names(fibvsmc_avg_k_r2_res),
  function(gene_name) {
    df <- fibvsmc_avg_k_r2_res[[gene_name]]$summary
    df <- df %>% filter(gene_name %in% fibvsmc_avg_k_r2_converged$Gene) %>%
      mutate(Gene = gene_name)
    return(df)
  }
)

fibvsmc_avg_k_r2_res_combined <- fibvsmc_avg_k_r2_res_combined %>%
  ungroup() %>%
  mutate(fdr_interaction = p.adjust(p_avg_k_r2_delta, method = "fdr"))

fibvsmc_avg_k_r2_res_combined_disp <- map_dfr(
  names(fibvsmc_avg_k_r2_res),
  function(gene_name) {
    df <- fibvsmc_avg_k_r2_res[[gene_name]]$overdispersion
    df <- df %>% mutate(Gene = gene_name)
    return(df)
  }
)

write.csv(fibvsmc_avg_k_r2_res_combined, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/fibvsmc_avg_k_r2.csv", row.names = F)

```

```{r echo = F}
plot_volcano_associations(subset(fibvsmc_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), 
                          "logFC_avg_k_r2_delta", 
                          "p_avg_k_r2_delta",
                          "FIB, VSMC/P avg kidney R2*", 
                          "logFC \u0394 avg kidney R2*", 
                          "-log10(p-value)",
                          "nebula/fibvsmc_avg_k_r2_trtcolors",
                          treatment_results = fibvsmc_nebula_res_combined_reml_pooled,
                          treatment_p_col = "p_treatmentDapagliflozin:visitPOST",
                          formula = "\u0394 avg kidney R2* + treatment",
                          positive_text = "Positively associated with \u0394 avg kidney R2*",
                          negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

```{r echo =F, eval = F}
plot_volcano(subset(fibvsmc_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "p_avg_k_r2_delta",
             "FIB, VSMC/P Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(p-value)",
             "nebula/fibvsmc_avg_k_r2",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")

plot_volcano(subset(fibvsmc_avg_k_r2_res_combined, logFC_avg_k_r2_delta >-10), "logFC_avg_k_r2_delta", 
             "fdr_interaction",
             "FIB, VSMC/P Avg Kidney R2* (REML & Pooled offset)", 
             "logFC \u0394 Avg Kidney R2*", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_avg_k_r2_fdr",
             formula = "\u0394 avg kidney R2* + treatment",
             positive_text = "Positively associated with \u0394 avg kidney R2*",
             negative_text = "Negatively associated with \u0394 avg kidney R2*")
```

#### GSEA (fgsea)

```{r echo = F}
bg_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/GSEA"
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(fibvsmc_avg_k_r2_res_combined$Gene), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(fibvsmc_avg_k_r2_res_combined$Gene), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(fibvsmc_avg_k_r2_res_combined$Gene), savefile = FALSE)

# rank genes by logFC
rankings_fibvsmc_avg_k_r2 <- fibvsmc_avg_k_r2_res_combined$logFC_avg_k_r2_delta
names(rankings_fibvsmc_avg_k_r2) <- fibvsmc_avg_k_r2_res_combined$Gene
rankings_fibvsmc_avg_k_r2 <- sort(rankings_fibvsmc_avg_k_r2, decreasing = TRUE)
plot(rankings_fibvsmc_avg_k_r2)
min(rankings_fibvsmc_avg_k_r2)
max(rankings_fibvsmc_avg_k_r2)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_fibvsmc_avg_k_r2 <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_fibvsmc_avg_k_r2,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_fibvsmc_avg_k_r2 <- fgsea(pathways = reactome,
                              stats = rankings_fibvsmc_avg_k_r2,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_fibvsmc_avg_k_r2 <- fgsea(pathways = go,
                        stats = rankings_fibvsmc_avg_k_r2,
                        scoreType = 'std', 
                        minSize = 5,
                        maxSize = 500,
                        nproc = 1)

fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_fibvsmc_avg_k_r2[, padj < 0.05], na.rm = T), sum(kegg_legacy_res_fibvsmc_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "REACTOME"=c(sum(reactome_res_fibvsmc_avg_k_r2[, padj < 0.05], na.rm = T), sum(reactome_res_fibvsmc_avg_k_r2[, pval < 0.05], na.rm = T)),
                         "GO"=c(sum(go_res_fibvsmc_avg_k_r2[, padj < 0.05], na.rm = T), sum(go_res_fibvsmc_avg_k_r2[, pval < 0.05], na.rm = T)))
rownames(fgsea) <- c("adj.pval", "p.val")
```

##### KEGG Legacy
```{r echo = F}
kegg_legacy_res_fibvsmc_avg_k_r2_filtered <- filter_redundant_pathways(kegg_legacy_res_fibvsmc_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(kegg_legacy_res_fibvsmc_avg_k_r2_filtered, title = "FIB, VSMC/P Top 30 Avg Kidney R2* Associations KEGG", xmin = 1, xmax = 3)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_avg_k_r2_top30_kegg_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```

##### REACTOME
```{r echo = F}
reactome_res_fibvsmc_avg_k_r2_filtered <- filter_redundant_pathways(reactome_res_fibvsmc_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(reactome_res_fibvsmc_avg_k_r2_filtered, title = "FIB, VSMC/P Top 30  Avg Kidney R2* Associations REACTOME", xmin = 1.1, xmax = 3.5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_avg_k_r2_top30_reactome_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```
##### GO
```{r echo = F}
go_res_fibvsmc_avg_k_r2_filtered <- filter_redundant_pathways(go_res_fibvsmc_avg_k_r2, overlap_pct = 0.3)

plot_fgsea_transpose(go_res_fibvsmc_avg_k_r2_filtered, title = "FIB, VSMC/P Top 30  Avg Kidney R2* Associations GO", xmin = 1.4, xmax = 5)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmc_avg_k_r2_top30_go_pathways.jpeg",
       width = 27.5, height = 14, scale = 1)
```


