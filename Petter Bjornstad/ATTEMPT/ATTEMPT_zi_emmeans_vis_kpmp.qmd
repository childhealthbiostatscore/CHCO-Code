---
title: "ATTEMPT (KPMP cell types) emmeans visualization"
author: "Ye Ji Choi"
date: "r lubridate::today()"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
---

# ADD TCA cycle/oxphos genes


```{r echo = F, include = F}
library(jsonlite)
library(aws.s3)
library(dplyr)
library(kableExtra)
library(knitr)
library(ggplot2)
library(purrr)
library(tidyr)
library(stats)
library(patchwork)
library(UpSetR)
library(readxl)
library(fgsea)
library(ReactomeGSA)
library(GSEABase)
library(enrichplot)
library(enrichR)
library(ggrepel)
library(forcats)
library(stringr)
library(ComplexUpset)
library(ggupset)
library(Hmisc)
library(ggrounded)
library(circlize)
library(tidyverse)
library(openxlsx)
library(biomaRt)
```

```{r echo = F, include = F}
source("~/GitHub/CHCO-Code/Petter Bjornstad/ATTEMPT/attempt_functions.R")
```

```{r include = F}
## Create an S3 client
keys <- fromJSON("/Users/choiyej/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Bjornstad Pyle Lab/keys.json")

Sys.setenv(
  "AWS_ACCESS_KEY_ID" = keys$MY_ACCESS_KEY,
  "AWS_SECRET_ACCESS_KEY" = keys$MY_SECRET_KEY,
  "AWS_DEFAULT_REGION" = "",
  "AWS_REGION" = "",
  "AWS_S3_ENDPOINT" = "s3.kopah.uw.edu"
)
```

# nebula

```{r echo = F}
## read mixed model results dataframe (rendered in Hyak)
# process and read all results from ATTEMPT

celltype_groups <- list(
  PT = c("PT-S1/S2", "PT-S3", "aPT"),
  TAL = c("C-TAL-1", "C-TAL-2", "aTAL", "dTAL"),
  PC = c("CCD-PC", "CNT-PC", "dCCD-PC", "M-PC", "tPC-IC"),
  EC = c("EC-AVR", "EC-GC", "EC-PTC", "EC-AEA", "EC-LYM", "EC/VSMC"),
  IC = c("IC-A", "IC-B", "aIC"),
  Immune = c("MAC", "MON", "cDC", "pDC", "CD4+ T", "CD8+ T", "B", "NK"),
  Immune_myeloid = c("MAC", "MON", "cDC", "pDC"),
  Immune_lymphoid = c("CD4+ T", "CD8+ T", "B", "NK"),
  VSMC_P_FIB = c("VSMC/P", "FIB"),
  POD = "POD"
)

## read mixed model results dataframe (rendered in Hyak)
# process and read all results from ATTEMPT
mart <- useMart("ensembl", dataset = "hsapiens_gene_ensembl") # to join full name description

# Top 2000 HVG
for (cell in names(celltype_groups))  {
  input_path <- paste0("grouped/", cell, "/HVG/nebula/", "grouped_", tolower(cell), "_kpmp_attempt_nebula_res_reml_pooled.rds")
  cell_df <- s3readRDS(input_path, bucket = "attempt", region = "")

  processed <- process_nebula_results(cell_df)
  # Get gene symbols
  gene_symbols <- processed$results$Gene
  
  # Query Ensembl
  gene_info <- getBM(
    attributes = c("hgnc_symbol", "description", "gene_biotype"),
    filters = "hgnc_symbol",
    values = gene_symbols,
    mart = mart
  ) %>%
    dplyr::rename(Gene = hgnc_symbol)
  
  # Join annotation
  annotated_df <- processed$results %>%
    left_join(gene_info, by = "Gene")

  # Assign to variable dynamically
  var_name <- paste0(tolower(cell), "_hvg_kpmp")
  assign(var_name, annotated_df, envir = .GlobalEnv)
  
  write.csv(annotated_df, paste0("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/nebula/", tolower(cell), "_kpmp_hvg_res.csv"), row.names = F)
}

# Top 2000 HVG subtypes
for (cell in unlist(celltype_groups))  {
  print(paste0("Processing: ", cell))
  cell <- gsub("/", "_", cell)
  input_path <- paste0("individual/", cell, "/HVG/nebula/individual_", 
                       tolower(cell),
                       "_kpmp_attempt_nebula_res_reml_pooled.rds")
  cell_df <- s3readRDS(input_path, bucket = "attempt", region = "")
  
  processed <- process_nebula_results(cell_df)
  
  # Check if processed results has 0 rows
  if (nrow(processed$results) == 0) {
    print(paste0("Skipping ", cell, " - no rows in processed results"))
    next
  }
  
  # Get gene symbols
  gene_symbols <- processed$results$Gene
  # Query Ensembl
  gene_info <- getBM(
    attributes = c("hgnc_symbol", "description", "gene_biotype"),
    filters = "hgnc_symbol",
    values = gene_symbols,
    mart = mart
  ) %>%
    dplyr::rename(Gene = hgnc_symbol)
  # Join annotation
  annotated_df <- processed$results %>%
    left_join(gene_info, by = "Gene")
  cell <- gsub("-", "_", cell)
  cell <- gsub("\\+\\s", "_", cell)
  lower_cell <- tolower(cell)
  var_name <- paste0(lower_cell, "_hvg_kpmp")
  print(var_name)
  assign(var_name, processed$results)
}

# # Full gene set
# for (cell in names(celltype_groups))  {
# print(paste0("Processing: ", cell))
#   input_path <- paste0("kpmp_grouped/", cell, "/ALL/nebula/", "grouped_", tolower(cell), "_kpmp_attempt_nebula_res_reml_pooled.rds")
#   cell_df <- s3readRDS(input_path, bucket = "attempt", region = "")
#   
#   processed <- process_nebula_results(cell_df)
#   lower_cell <- tolower(cell)
#   var_name <- paste0(lower_cell, "_kpmp")
#   
#   assign(var_name, processed$results)
# }

# # Full gene set subtypes
# for (cell in names(celltype_groups))  {
# print(paste0("Processing: ", cell))
#   input_path <- paste0("kpmp_individual/", cell, "/ALL/nebula/kpmp_individual_", 
#                        tolower(cell),
#                        "_kpmp_attempt_nebula_res_reml_pooled.rds")
#   cell_df <- s3readRDS(input_path, bucket = "attempt", region = "")
#   
#   processed <- process_nebula_results(cell_df)
#   cell <- gsub("-", "_", cell)
#   lower_cell <- tolower(cell)
#   var_name <- paste0(lower_cell, "_kpmp")
#   
#   assign(var_name, processed$results)
# }
```


```{r echo = F}
top50_wb <- createWorkbook()

# Loop through and extract top 50 genes per cell type
for (cell in names(celltype_groups))  {
  var_name <- paste0(tolower(cell), "_hvg_kpmp")
  df <- get(var_name)

  # Extract top 50 by lowest p-value
  top_genes <- df %>%
    arrange(`p_treatmentDapagliflozin:visitPOST`) %>%
    slice_head(n = 50)

  # Add a worksheet and write the top genes
  addWorksheet(top50_wb, sheetName = cell)
  writeData(top50_wb, sheet = cell, x = top_genes)
}

# Save the workbook
saveWorkbook(top50_wb, file = "//Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/top50_hvg_nebula_results_by_kpmp_celltype.xlsx", overwrite = TRUE)
```

### PT

#### DiD Treatment subset

```{r echo = F}
pt_hvg_kpmp_sig <- pt_hvg_kpmp[pt_hvg_kpmp$fdr < 0.05,]
placebo_change <- pt_hvg_kpmp_sig$logFC_visitPOST
dapa_change <- placebo_change + pt_hvg_kpmp_sig$`logFC_treatmentDapagliflozin:visitPOST`

# Classify the response
response_type <- case_when(
  placebo_change > 0 & dapa_change > placebo_change ~ "Enhanced increase",
  placebo_change > 0 & dapa_change <= 0 ~ "Reversed increase", 
  placebo_change < 0 & dapa_change > 0 ~ "Reversed decrease",
  placebo_change < 0 & dapa_change < placebo_change ~ "Enhanced decrease",
  placebo_change < 0 & dapa_change > placebo_change ~ "Attenuated decrease",
  placebo_change > 0 & dapa_change < placebo_change ~ "Attenuated increase"
)

pt_treatment_df <- data.frame(placebo_change = placebo_change,
                              dapa_change = dapa_change,
                              response_type = response_type,
                              Gene = pt_hvg_kpmp_sig$Gene)
```


```{r echo = F}
pt_hvg_kpmp_sig %>% left_join(pt_treatment_df) %>%
  arrange(fdr) %>%
  filter(`logFC_treatmentDapagliflozin:visitPOST`>0) %>%
  head(20)
```

#### REML + pooled Offset

```{r echo =F}
plot_volcano(pt_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/pt_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "PT")

plot_volcano(pt_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "PT")
```

#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
pt_hvg_kpmp <- pt_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = `logFC_(Intercept)`,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_pt_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# pt_hvg_kpmp
pt_hvg_kpmp <- pt_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
pt_nebula_pooled_ipa_DiD <- pt_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(pt_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(pt_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/pt_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
pt_nebula_pooled_ipa_placebo <- pt_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(pt_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(pt_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/pt_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
pt_nebula_pooled_ipa_dapa <- pt_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(pt_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(pt_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/pt_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```


#### PT Subtypes

```{r echo = F}
pt_plots <- create_gene_expression_plots(
  main_results = pt_hvg_kpmp,
  subtype_results_list = list(
    "PT-S1/S2" = pt_s1_s2_hvg_kpmp,
    "PT-S3" = pt_s3_hvg_kpmp,
    "aPT" = apt_hvg_kpmp
  ),
  cell_type_prefix = "PT",
  cell_type_labels = c("PT-S1/S2", "PT-S3", "aPT"),
  output_prefix = "kpmp_PT_hvg",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
pt_plots
```

### PT (Full)

#### DiD Treatment subset

```{r echo = F}
pt_kpmp_sig <- pt_kpmp[pt_kpmp$fdr < 0.05,]
placebo_change <- pt_kpmp_sig$logFC_visitPOST
dapa_change <- placebo_change + pt_kpmp_sig$`logFC_treatmentDapagliflozin:visitPOST`

# Classify the response
response_type <- case_when(
  placebo_change > 0 & dapa_change > placebo_change ~ "Enhanced increase",
  placebo_change > 0 & dapa_change <= 0 ~ "Reversed increase", 
  placebo_change < 0 & dapa_change > 0 ~ "Reversed decrease",
  placebo_change < 0 & dapa_change < placebo_change ~ "Enhanced decrease",
  placebo_change < 0 & dapa_change > placebo_change ~ "Attenuated decrease",
  placebo_change > 0 & dapa_change < placebo_change ~ "Attenuated increase"
)

pt_treatment_df <- data.frame(placebo_change = placebo_change,
                              dapa_change = dapa_change,
                              response_type = response_type,
                              Gene = pt_kpmp_sig$Gene)
```


#### REML + pooled Offset

```{r echo =F}
plot_volcano(pt_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/pt_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "PT")

plot_volcano(pt_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pt_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "PT")
```

#### PT Subtypes

```{r echo = F}
pt1 <- s3readRDS('PT/PT-1/nebula/PT-1_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
pt1_nebula_processed <- process_nebula_results(pt1)
pt1_kpmp <- pt1_nebula_processed$results

pt2 <- s3readRDS('PT/PT-2/nebula/PT-2_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
pt2_nebula_processed <- process_nebula_results(pt2)
pt2_kpmp <- pt2_nebula_processed$results

pt3 <- s3readRDS('PT/PT-3/nebula/PT-3_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
pt3_nebula_processed <- process_nebula_results(pt3)
pt3_kpmp <- pt3_nebula_processed$results

pt4 <- s3readRDS('PT/PT-4/nebula/PT-4_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
pt4_nebula_processed <- process_nebula_results(pt4)
pt4_kpmp <- pt4_nebula_processed$results

pt5 <- s3readRDS('PT/PT-5/nebula/PT-5_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
pt5_nebula_processed <- process_nebula_results(pt5)
pt5_kpmp <- pt5_nebula_processed$results
```

```{r echo = F}
pt_plots <- create_gene_expression_plots(
  main_results = pt_kpmp,
  subtype_results_list = list(
    "1" = pt1_kpmp,
    "2" = pt2_kpmp,
    "3" = pt3_kpmp,
    "4" = pt4_kpmp,
    "5" = pt5_kpmp
  ),
  cell_type_prefix = "PT",
  cell_type_labels = c("PT-1", "PT-2", "PT-3", "PT-4", "PT-5"),
  output_prefix = "PT",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
pt_plots
```


### TAL


#### REML + pooled Offset


```{r echo =F}
plot_volcano(tal_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/tal_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "TAL")

plot_volcano(tal_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "TAL")
```

#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
tal_hvg_kpmp <- tal_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = logFC_Intercept,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_tal_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# tal_hvg_kpmp
tal_hvg_kpmp <- tal_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
tal_nebula_pooled_ipa_DiD <- tal_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(tal_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(tal_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/tal_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
tal_nebula_pooled_ipa_placebo <- tal_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(tal_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(tal_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/tal_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
tal_nebula_pooled_ipa_dapa <- tal_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(tal_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(tal_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/tal_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```


#### TAL Subtypes

```{r echo = F}
tal_plots <- create_gene_expression_plots(
  main_results = tal_hvg_kpmp,
  subtype_results_list = list(
    "C-TAL-1" = c_tal_1_hvg_kpmp,
    "C-TAL-2" = c_tal_2_hvg_kpmp,
    "aTAL" = atal_hvg_kpmp,
    "dTAL" = dtal_hvg_kpmp
  ),
  cell_type_prefix = "TAL",
  cell_type_labels = c("C-TAL-1", "C-TAL-2", "aTAL", "dTAL"),
  output_prefix = "kpmp_TAL_hvg",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```


### TAL (Full)


#### REML + pooled Offset


```{r echo =F}
plot_volcano(tal_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/tal_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "TAL")

plot_volcano(tal_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/tal_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "TAL")
```

#### TAL Subtypes

```{r echo = F}
tal1 <- s3readRDS('TAL/TAL-1/nebula/TAL-1_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
tal1_nebula_processed <- process_nebula_results(tal1)
tal1_kpmp <- tal1_nebula_processed$results

tal2 <- s3readRDS('TAL/TAL-2/nebula/TAL-2_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
tal2_nebula_processed <- process_nebula_results(tal2)
tal2_kpmp <- tal2_nebula_processed$results

tal3 <- s3readRDS('TAL/TAL-3/nebula/TAL-3_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
tal3_nebula_processed <- process_nebula_results(tal3)
tal3_kpmp <- tal3_nebula_processed$results
```

```{r echo = F}
tal_plots <- create_gene_expression_plots(
  main_results = tal_kpmp,
  subtype_results_list = list(
    "1" = tal1_kpmp,
    "2" = tal2_kpmp,
    "3" = tal3_kpmp
  ),
  cell_type_labels = c("TAL-1", "TAL-2", "TAL-3"),
  cell_type_prefix = "TAL",
  formula = "treatment * visit",   
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### PC

#### REML + pooled Offset

```{r echo =F}
plot_volcano(pc_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/pc_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "PC")

plot_volcano(pc_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "PC")
```

#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
pc_hvg_kpmp <- pc_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = logFC_Intercept,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_pc_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# pc_hvg_kpmp
pc_hvg_kpmp <- pc_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
pc_nebula_pooled_ipa_DiD <- pc_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(pc_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(pc_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/pc_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
pc_nebula_pooled_ipa_placebo <- pc_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(pc_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(pc_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/pc_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
pc_nebula_pooled_ipa_dapa <- pc_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(pc_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(pc_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/pc_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```

#### PC Subtypes

```{r echo = F}
pc_plots <- create_gene_expression_plots(
  main_results = pc_hvg_kpmp,
  subtype_results_list = list(
    "CCD-PC" = ccd_pc_hvg_kpmp,
    "CNT-PC" = cnt_pc_hvg_kpmp,
    "dCCD-PC" = dccd_pc_hvg_kpmp,
    "M-PC" = m_pc_hvg_kpmp,
    "tPC-IC" = tpc_ic_hvg_kpmp
  ),
  cell_type_prefix = "PC",
  cell_type_labels = c("CCD-PC", "CNT-PC", "dCCD-PC", "M-PC", "tPC-IC"),
  output_prefix = "kpmp_PC_hvg",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```


### PC (Full)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(pc_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/pc_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "PC")

plot_volcano(pc_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pc_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "PC")
```

#### PC Subtypes

```{r echo = F}
pc1 <- s3readRDS('PC/PC-1/nebula/PC-1_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
pc1_nebula_processed <- process_nebula_results(pc1)
pc1_kpmp <- pc1_nebula_processed$results

pc2 <- s3readRDS('PC/PC-2/nebula/PC-2_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
pc2_nebula_processed <- process_nebula_results(pc2)
pc2_kpmp <- pc2_nebula_processed$results

tpc_ic <- s3readRDS('PC/tPC-IC/nebula/tPC-IC_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
tpc_ic_nebula_processed <- process_nebula_results(tpc_ic)
tpc_ic_kpmp <- tpc_ic_nebula_processed$results
```

```{r echo = F}
pc_plots <- create_gene_expression_plots(
  main_results = pc_kpmp,
  subtype_results_list = list(
    "1" = pc1_kpmp,
    "2" = pc2_kpmp,
    "tPC-IC" = tpc_ic_kpmp
  ),
  formula = "treatment * visit",
  cell_type_labels = c("PC-1", "PC-2", "tPC-IC"),
  cell_type_prefix = "PC",
  output_prefix = "PC",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### Immune (very few cells)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(immune_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/immune_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune")

plot_volcano(immune_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune")
```


#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
immune_hvg_kpmp <- immune_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = logFC_Intercept,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_immune_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# immune_hvg_kpmp
immune_hvg_kpmp <- immune_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
immune_nebula_pooled_ipa_DiD <- immune_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(immune_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
immune_nebula_pooled_ipa_placebo <- immune_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(immune_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
immune_nebula_pooled_ipa_dapa <- immune_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(immune_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```

#### Immune Subtypes

```{r echo = F}
immune_plots <- create_gene_expression_plots(
  main_results = immune_hvg_kpmp,
  subtype_results_list = list(
    "MAC" = mac_hvg_kpmp,
    "MON" = mon_hvg_kpmp,
    "cDC" = cdc_hvg_kpmp,
    # "pDC" = pdc_hvg_kpmp,
    "CD4+ T" = cd4_t_hvg_kpmp,
    "CD8+ T" = cd8_t_hvg_kpmp,
    "B" = b_hvg_kpmp,
    "NK" = nk_hvg_kpmp
  ),
  cell_type_prefix = "Immune",
  cell_type_labels = c("MAC", "MON", "cDC",  "CD4+ T", "CD8+ T", "B", "NK"),
  output_prefix = "kpmp_Immune_hvg",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)

```

### Immune (Full)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(immune_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/immune_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune")

plot_volcano(immune_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL, 
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune")
```

#### Immune Subtypes

```{r echo = F}
immune_plots <- create_gene_expression_plots(
  main_results = immune_kpmp,
  subtype_results_list = list(
    "MAC" = mac_kpmp,
    "MON" = mon_kpmp,
    "cDC" = cdc_kpmp,
    "pDC" = pdc_kpmp,
    "CD4+ T" = cd4_t_kpmp,
    "CD8+ T" = cd8_t_kpmp,
    "B" = b_kpmp,
    "NK" = nk_kpmp
  ),
  cell_type_prefix = "Immune",
  cell_type_labels = c("MAC", "MON", "cDC", "pDC", "CD4+ T", "CD8+ T", "B", "NK"),
  output_prefix = "kpmp_Immune",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### Immune (Myeloid)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(immune_myeloid_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/immune_myeloid_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune (Myeloid)")

plot_volcano(immune_myeloid_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune (Myeloid)")
```


#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
immune_myeloid_hvg_kpmp <- immune_myeloid_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = logFC_Intercept,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_immune_myeloid_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# immune_myeloid_hvg_kpmp
immune_myeloid_hvg_kpmp <- immune_myeloid_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
immune_myeloid_nebula_pooled_ipa_DiD <- immune_myeloid_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(immune_myeloid_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_myeloid_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_myeloid_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
immune_myeloid_nebula_pooled_ipa_placebo <- immune_myeloid_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(immune_myeloid_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_myeloid_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_myeloid_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
immune_myeloid_nebula_pooled_ipa_dapa <- immune_myeloid_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(immune_myeloid_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_myeloid_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_myeloid_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```

#### Immune Subtypes (Myeloid)

```{r echo = F}
immune_myeloid_plots <- create_gene_expression_plots(
  main_results = immune_myeloidhvg_kpmp,
  subtype_results_list = list(
    "MAC" = mac_hvg_kpmp,
    "MON" = mon_hvg_kpmp,
    "cDC" = cdc_hvg_kpmp
    # "pDC" = pdc_hvg_kpmp
  ),
  cell_type_prefix = "Immune Myeloid",
  cell_type_labels = c("MAC", "MON", "cDC"),
  output_prefix = "kpmp_Immune_Myeloid_hvg",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)

```


### Immune (Myeloid, Full)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(immune_myeloid_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/immune_myeloid_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune (Myeloid)")

plot_volcano(immune_myeloid_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_myeloid_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune (Myeloid)")
```

#### Immune Subtypes (Myeloid)

```{r echo = F}
immune_myeloid_plots <- create_gene_expression_plots(
  main_results = immune_myeloid_kpmp,
  subtype_results_list = list(
    "MON" = mon_kpmp,
    "MAC" = mac_kpmp
  ),
  cell_type_labels = c("MON", "MAC"),
  cell_type_prefix = "Immune Myeloid",
  output_prefix = "Immune_Myeloid",
  formula = "treatment * visit",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
immune_myeloid_plots
```


### Immune (Lymphoid)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(immune_lymphoid_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune (Lymphoid)")

plot_volcano(immune_lymphoid_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_hvg_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune (Lymphoid)")
```


#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
immune_lymphoid_hvg_kpmp <- immune_lymphoid_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = logFC_Intercept,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_immune_lymphoid_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# immune_lymphoid_hvg_kpmp
immune_lymphoid_hvg_kpmp <- immune_lymphoid_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
immune_lymphoid_nebula_pooled_ipa_DiD <- immune_lymphoid_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(immune_lymphoid_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_lymphoid_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_lymphoid_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
immune_lymphoid_nebula_pooled_ipa_placebo <- immune_lymphoid_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(immune_lymphoid_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_lymphoid_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_lymphoid_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
immune_lymphoid_nebula_pooled_ipa_dapa <- immune_lymphoid_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(immune_lymphoid_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(immune_lymphoid_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/immune_lymphoid_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```

#### Immune Subtypes (Lymphoid)

```{r echo = F}
immune_lymphoid_plots <- create_gene_expression_plots(
  main_results = immune_lymphoidhvg_kpmp,
  subtype_results_list = list(
    "CD4+ T" = cd4_t_hvg_kpmp,
    "CD8+ T" = cd8_t_hvg_kpmp,
    "B" = b_hvg_kpmp,
    "NK" = nk_hvg_kpmp
  ),
  cell_type_prefix = "Immune Lymphoid",
  cell_type_labels = c("CD4+ T", "CD8+ T", "B", "NK"),
  output_prefix = "kpmp_Immune_Lymphoid_hvg",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)

```

### Immune (Lymphoid, Full)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(immune_lymphoid_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/immune_lymphoid_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune (Lymphoid)")

plot_volcano(immune_lymphoid_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/immune_lymphoid_kpmp_DiD",
             formula = "treatment * visit", 
             cell_type = "Immune (Lymphoid)")
```


#### Immune Subtypes (Lymphoid)

```{r echo = F}
immune_lymphoid_plots <- create_gene_expression_plots(
  main_results = immune_lymphoid_kpmp,
  subtype_results_list = list(
    "T" = t_kpmp,
    "NKT/NKC" = nkt_kpmp,
    "B" = b_kpmp
  ),
  cell_type_labels = c("T", "B", "NKT/NKC"),
  cell_type_prefix = "Immune Lymphoid",
  output_prefix = "Immune_Lymphoid",
  formula = "treatment * visit",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### IC

#### REML + pooled Offset

```{r echo =F}
plot_volcano(ic_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/ic_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "IC")

plot_volcano(ic_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "IC")
```

#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
ic_hvg_kpmp <- ic_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = logFC_Intercept,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_ic_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# ic_hvg_kpmp
ic_hvg_kpmp <- ic_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
ic_nebula_pooled_ipa_DiD <- ic_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(ic_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(ic_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/ic_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
ic_nebula_pooled_ipa_placebo <- ic_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(ic_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(ic_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/ic_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
ic_nebula_pooled_ipa_dapa <- ic_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(ic_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(ic_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/ic_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```

#### IC Subtypes

```{r echo = F}
ic_plots <- create_gene_expression_plots(
  main_results = ic_hvg_kpmp,
  subtype_results_list = list(
    "IC-A" = ic_a_hvg_kpmp,
    "IC-B" = ic_b_hvg_kpmp,
    "aIC" = aic_hvg_kpmp
  ),
  cell_type_prefix = "IC",
  cell_type_labels = c("IC-A", "IC-B", "aIC"),
  output_prefix = "kpmp_IC_hvg",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### IC (Full)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(ic_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/ic_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "IC")

plot_volcano(ic_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/ic_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "IC")
```


#### IC Subtypes

```{r echo = F}
ic_a <- s3readRDS('IC/IC-A/nebula/IC-A_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")
ic_a_nebula_processed <- process_nebula_results(ic_a)
ic_a_kpmp <- ic_a_nebula_processed$results

ic_b <- s3readRDS('IC/IC-B/nebula/IC-B_nebula_res_reml_pooled.rds', bucket = "attempt", region = "")
ic_b_nebula_processed <- process_nebula_results(ic_b)
ic_b_kpmp <- ic_b_nebula_processed$results
```

```{r echo = F}
ic_plots <- create_gene_expression_plots(
  main_results = ic_kpmp,
  subtype_results_list = list(
    "A" = ic_a_kpmp,
    "B" = ic_b_kpmp
  ),
  formula = "treatment * visit",
  output_prefix = "IC",
  cell_type_prefix = "IC",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### EC

#### REML + pooled Offset

```{r echo =F}
plot_volcano(ec_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/ec_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "EC")

plot_volcano(ec_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "EC")
```

#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
ec_hvg_kpmp <- ec_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = logFC_Intercept,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_ec_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# ec_hvg_kpmp
ec_hvg_kpmp <- ec_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
ec_nebula_pooled_ipa_DiD <- ec_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(ec_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(ec_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/ec_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
ec_nebula_pooled_ipa_placebo <- ec_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(ec_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(ec_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/ec_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
ec_nebula_pooled_ipa_dapa <- ec_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(ec_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(ec_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/ec_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```

#### EC Subtypes

```{r echo = F}
ec_plots <- create_gene_expression_plots(
  main_results = ec_hvg_kpmp,
  subtype_results_list = list(
    "EC-AVR" = ec_avr_hvg_kpmp,
    "EC-GC" = ec_gc_hvg_kpmp,
    "EC-PTC" = ec_ptc_hvg_kpmp,
    "EC-AEA" = ec_aea_hvg_kpmp,
    "EC-LYM" = ec_lym_hvg_kpmp,
    "EC/VSMC" = ec_vsmc_hvg_kpmp
  ),
  cell_type_prefix = "EC",
  cell_type_labels = c("EC-AVR", "EC-GC", "EC-PTC", "EC-AEA", "EC-LYM", "EC/VSMC"),
  output_prefix = "kpmp_EC_hvg",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### EC (Full)

#### REML + pooled Offset

```{r echo =F}
plot_volcano(ec_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/ec_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "EC")

plot_volcano(ec_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/ec_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "EC")
```

#### EC Subtypes

```{r echo = F}
ec_aea <- s3readRDS('EC/EC-AEA/nebula/EC-AEA_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
ec_aea_nebula_processed <- process_nebula_results(ec_aea)
ec_aea_kpmp <- ec_aea_nebula_processed$results

ec_gc <- s3readRDS('EC/EC-GC/nebula/EC-GC_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
ec_gc_nebula_processed <- process_nebula_results(ec_gc)
ec_gc_kpmp <- ec_gc_nebula_processed$results

ec_lym <- s3readRDS('EC/EC-LYM/nebula/EC-LYM_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
ec_lym_nebula_processed <- process_nebula_results(ec_lym)
ec_lym_kpmp <- ec_lym_nebula_processed$results

ec_ptc <- s3readRDS('EC/EC-PTC/nebula/EC-PTC_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
ec_ptc_nebula_processed <- process_nebula_results(ec_ptc)
ec_ptc_kpmp <- ec_ptc_nebula_processed$results
```

```{r echo = F}
ec_plots <- create_gene_expression_plots(
  main_results = ec_kpmp,
  subtype_results_list = list(
    "EC-AEA" = ec_aea_kpmp,
    "EC-GC" = ec_gc_kpmp,
    "EC-LYM" = ec_lym_kpmp,
    "EC-PTC" = ec_ptc_kpmp
  ),
  cell_type_labels = c("EC-AEA", "EC-GC", "EC-LYM", "EC-PTC"),
  cell_type_prefix = "EC",
  formula = "treatment * visit",
  output_prefix = "EC",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### FIB/VSMC/P

#### REML + pooled pooled

```{r echo =F}
plot_volcano(vsmc_p_fib_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/fibvsmc_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "FIB, VSMC/P")

plot_volcano(vsmc_p_fib_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "FIB, VSMC/P")
```

#### IPA input save

```{r echo = F, eval = F}
# pull covariance matrix for p-value calculations
fibvsmcp_hvg_kpmp <- fibvsmcp_hvg_kpmp %>%
  rowwise() %>%
  mutate(
    # Derived logFCs
    placebo_pre = logFC_Intercept,
    placebo_post = placebo_pre + logFC_visitPOST,
    dapa_pre = placebo_pre + logFC_treatmentDapagliflozin,
    dapa_post = dapa_pre + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
    placebo_post_pre = placebo_post - placebo_pre,
    dapa_post_pre = dapa_post - dapa_pre,
    DiD = dapa_post_pre - placebo_post_pre,
    
    # Extract coefficients and SEs
    b2 = logFC_visitPOST,
    b3 = `logFC_treatmentDapagliflozin:visitPOST`,
    se2 = se_visitPOST,
    se3 = `se_treatmentDapagliflozin:visitPOST`,
    
    # Extract scalar covariance value from index 9 (Cov[3,4]) of lower triangle
    cov_b2_b3 = unlist(nebula_fibvsmc_results_list_reml_pooled[[Gene]]$covariance)[9],
    
    # Calculate SE for dapa_post_pre = b2 + b3
    se_dapa_post_pre = sqrt(se2^2 + se3^2 + 2 * cov_b2_b3),
    
    # Z-scores and p-values
    z_placebo_post_pre = b2 / se2,
    z_dapa_post_pre = (b2 + b3) / se_dapa_post_pre,
    z_DiD = b3 / se3,
    
    p_placebo_post_pre = 2 * pnorm(-abs(z_placebo_post_pre)),
    p_dapa_post_pre = 2 * pnorm(-abs(z_dapa_post_pre)),
    p_DiD = 2 * pnorm(-abs(z_DiD))
  ) %>%
  ungroup()

# fibvsmcp_hvg_kpmp
fibvsmcp_hvg_kpmp <- fibvsmcp_hvg_kpmp %>%
  mutate(placebo_pre = logFC_Intercept,
         placebo_post = logFC_Intercept + logFC_visitPOST,
         dapa_pre = logFC_Intercept + logFC_treatmentDapagliflozin,
         dapa_post = logFC_Intercept + logFC_treatmentDapagliflozin + logFC_visitPOST + `logFC_treatmentDapagliflozin:visitPOST`,
         placebo_post_pre = placebo_post - placebo_pre,
         dapa_post_pre = dapa_post - dapa_pre,
         DiD = dapa_post_pre - placebo_post_pre)

# save input for IPA
## Interaction or DiD
fibvsmc_nebula_pooled_ipa_DiD <- fibvsmcp_hvg_kpmp %>%
  dplyr::select(Gene, `logFC_treatmentDapagliflozin:visitPOST`, `p_treatmentDapagliflozin:visitPOST`, fdr)
colnames(fibvsmc_nebula_pooled_ipa_DiD) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(fibvsmc_nebula_pooled_ipa_DiD, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/fibvsmc_nebula_pooled_ipa_input_DiD.csv", row.names = F)

## Placebo (or Visit)
fibvsmc_nebula_pooled_ipa_placebo <- fibvsmcp_hvg_kpmp %>%
  dplyr::select(Gene, placebo_post_pre, p_placebo_post_pre) %>%
  mutate(fdr_placebo_post_pre = p.adjust(p_placebo_post_pre, method = "fdr"))
colnames(fibvsmc_nebula_pooled_ipa_placebo) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(fibvsmc_nebula_pooled_ipa_placebo, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/fibvsmc_nebula_pooled_ipa_input_placebo.csv", row.names = F)

## Dapagliflozin
fibvsmc_nebula_pooled_ipa_dapa <- fibvsmcp_hvg_kpmp %>%
  dplyr::select(Gene, dapa_post_pre, p_dapa_post_pre) %>%
  mutate(fdr_dapa_post_pre = p.adjust(p_dapa_post_pre, method = "fdr"))
colnames(fibvsmc_nebula_pooled_ipa_dapa) <- c("Gene", "Log Fold Change", "Expr p-value", "Expr False Discovery Rate")

write.csv(fibvsmc_nebula_pooled_ipa_dapa, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/emmeans/nebula/fibvsmc_nebula_pooled_ipa_input_dapa.csv", row.names = F)
```

#### FIBVSMCP Subtypes

```{r echo = F}
vsmc_p_fib_plots <- create_gene_expression_plots(
  main_results = vsmc_p_fib_hvg_kpmp,
  subtype_results_list = list(
    "VSMC/P" = vsmc_p_hvg_kpmp,
    "FIB" = fib_hvg_kpmp
  ),
  cell_type_prefix = "VSMC_P_FIB",
  cell_type_labels = c("VSMC/P", "FIB"),
  output_prefix = "kpmp_VSMC_P_FIB_hvg",
  full_formula = TRUE,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  formula = "treatment * visit",
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```


### FIB/VSMC/P (Full)

#### REML + pooled pooled

```{r echo =F}
plot_volcano(fibvsmcp_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/fibvsmc_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "FIB, VSMC/P")

plot_volcano(fibvsmcp_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/fibvsmc_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "FIB, VSMC/P")
```

#### FIBVSMCP Subtypes

```{r echo = F}
fib <- s3readRDS('FIBVSMCP/FIB/nebula/FIB_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
fib_nebula_processed <- process_nebula_results(fib)
fib_kpmp <- fib_nebula_processed$results

p <- s3readRDS('FIBVSMCP/VSMC/P/nebula/VSMC/P_nebula_res_reml_pooled_full.rds', bucket = "attempt", region = "")
p_nebula_processed <- process_nebula_results(p)
p_kpmp <- p_nebula_processed$results
```

```{r echo = F}
fibvsmcp_plots <- create_gene_expression_plots(
  main_results = fibvsmcp_kpmp,
  subtype_results_list = list(
    "FIB" = fib_kpmp,
    "VSMC/P" = p_kpmp
  ),
  cell_type_labels = c("FIB","VSMC/P"),
  cell_type_prefix = "FIB, VSMC/P",
  formula = "treatment * visit",
  output_prefix = "FIBVSMCP",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```


### POD

#### REML + pooled Offset

```{r podho =F}
plot_volcano(pod_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/pod_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "POD")

plot_volcano(pod_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pod_hvg_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "POD")
```

```{r echo = F}
pod_plots <- create_gene_expression_plots(
  main_results = pod_hvg_kpmp,
  subtype_results_list = list(
    "POD" = pod_hvg_kpmp),
  cell_type_labels = c("POD"),
  cell_type_prefix = "POD",
  formula = "treatment * visit",
  output_prefix = "kpmp_pod_hvg",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```

### POD (Full)

#### REML + pooled Offset

```{r podho =F}
plot_volcano(pod_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "p_treatmentDapagliflozin:visitPOST",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(p-value)",
             "nebula/pod_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "POD")

plot_volcano(pod_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
             "fdr",
             NULL,
             "logFC Treatment(Dapagliflozin):Visit(POST)", 
             "-log10(FDR adjusted p-value)",
             "nebula/pod_kpmp_DiD",
             formula = "treatment * visit",
             cell_type = "POD")
```

```{r echo = F}
pod_plots <- create_gene_expression_plots(
  main_results = pod_kpmp,
  subtype_results_list = list(
    "POD" = pod_kpmp),
  cell_type_labels = c("POD"),
  cell_type_prefix = "POD",
  formula = "treatment * visit",
  output_prefix = "pod",
  full_formula = T,
  volcano_text_size = 15,
  volcano_caption_size = 12,
  output_dir = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Dot Plots/"
)
```
## Combined volcano

```{r echo = F}
# plot_volcano(pt_hvg_kpmp, "logFC_treatmentDapagliflozin:visitPOST", 
#              "fdr",
#              "PT (REML & pooled Offset)", 
#              "logFC Treatment(Dapagliflozin):Visit(POST)", 
#              "-log10(FDR adjusted p-value)",
#              "nebula/pt_hvg_kpmp_DiD")

combined_nebula_reml_pooled <- 
  rbind(pt_hvg_kpmp %>%
          mutate(celltype = "PT"), 
        tal_hvg_kpmp %>%
          mutate(celltype = "TAL"),
        pc_hvg_kpmp %>%
          mutate(celltype = "PC"),
        immune_hvg_kpmp %>%
          mutate(celltype = "Immune"),
        ic_hvg_kpmp %>%
          mutate(celltype = "IC"),
        ec_hvg_kpmp %>%
          mutate(celltype = "EC"),
        fibvsmcp_hvg_kpmp %>%
          mutate(celltype = "FIB/VSMC/P")) %>%
  mutate(fdr_cat = case_when(fdr < 0.05 & 
                               `logFC_treatmentDapagliflozin:visitPOST` > 0 ~
                               "Positive & P < 0.05",
                             fdr < 0.05 & 
                               `logFC_treatmentDapagliflozin:visitPOST` < 0 ~
                               "Negative & P < 0.05",
                             T ~ "P > 0.05"))


# volcano plot with no label
combined_nebula_reml_pooled %>%
  filter(`logFC_treatmentDapagliflozin:visitPOST` < 10) %>%
  ggplot(aes(x = celltype, 
             y = `logFC_treatmentDapagliflozin:visitPOST`, 
             color = fdr_cat)) +
  geom_jitter(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  theme(panel.grid = element_blank(),
        panel.background = element_blank(),
        legend.position = "none") +
  labs(x = NULL, 
       y = "Interaction logFC") +
  scale_color_manual(values = c("#457b9d", "#ced4da", "#f28482"))


# find genes that are significant in more than one celltype
shared_genes <- combined_nebula_reml_pooled %>%
  filter(fdr < 0.05) %>%
  group_by(Gene) %>%
  dplyr::summarise(sig_gene_count = n(), .groups = "drop") %>%
  filter(sig_gene_count > 1) %>%
  arrange(desc(sig_gene_count)) %>%
  pull(Gene)

combined_nebula_reml_pooled %>%
  filter(`logFC_treatmentDapagliflozin:visitPOST` < 10) %>%
  ggplot(aes(x = celltype, 
             y = `logFC_treatmentDapagliflozin:visitPOST`, 
             color = fdr_cat)) +
  geom_jitter(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_text_repel(data = . %>% filter(Gene %in% shared_genes),
                  aes(label = Gene),
                  size = 3,
                  max.overlaps = 100,
                  box.padding = 0.3,
                  point.padding = 0.2,
                  segment.size = 0.2,
                  show.legend = FALSE,
                  color = "black",
                  fontface = "bold") +
  theme(panel.grid = element_blank(),
        panel.background = element_blank(),
        legend.position = "none") +
  labs(x = NULL, 
       y = "Interaction logFC") +
  scale_color_manual(values = c("#457b9d", "#ced4da", "#f28482"))

# label genes in TCA cycle
tca_genes <- c(
  "ACO1", "ACO2", "IDH1", "IDH2", "IDH3A", "IDH3B", "IDH3G", "OGDH", "OGDHL",
  "SUCLA2", "SUCLG1", "SUCLG2", "SDHA", "SDHB", "SDHC", "SDHD", "FH", "MDH1",
  "MDH2", "FAS", "CS"
)

combined_nebula_reml_pooled %>%
  filter(`logFC_treatmentDapagliflozin:visitPOST` < 10) %>%
  ggplot(aes(x = celltype, 
             y = `logFC_treatmentDapagliflozin:visitPOST`, 
             color = fdr_cat)) +
  geom_jitter(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_text_repel(data = . %>% filter(Gene %in% tca_genes),
                  aes(label = Gene),
                  size = 3,
                  max.overlaps = 100,
                  box.padding = 0.3,
                  point.padding = 0.2,
                  min.segment.length = 0,
                  force = 150,
                  segment.size = 0.2,
                  show.legend = FALSE,
                  fontface = "bold") +
  theme(panel.grid = element_blank(),
        panel.background = element_blank(),
        legend.position = "none") +
  labs(x = NULL, 
       y = "Interaction logFC") +
  scale_color_manual(values = c("#457b9d", "#ced4da", "#f28482"))

# label genes in oxphos cycle
oxphos_genes <- c(
  "NDUFS6",  "SDHB", "SDHC", "SDHD",
  "UQCRC1", "UQCRC2", "COX4I1", "COX4I2", "ATP5PF"
)
combined_nebula_reml_pooled %>%
  filter(`logFC_treatmentDapagliflozin:visitPOST` < 10) %>%
  ggplot(aes(x = celltype, 
             y = `logFC_treatmentDapagliflozin:visitPOST`, 
             color = fdr_cat)) +
  geom_jitter(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_text_repel(data = . %>% filter(Gene %in% oxphos_genes),
                  aes(label = Gene),
                  size = 3,
                  max.overlaps = 100,
                  box.padding = 0.3,
                  point.padding = 0.2,
                  min.segment.length = 0,
                  force = 150,
                  segment.size = 0.2,
                  show.legend = FALSE,
                  fontface = "bold") +
  theme(panel.grid = element_blank(),
        panel.background = element_blank(),
        legend.position = "none") +
  labs(x = NULL, 
       y = "Interaction logFC") +
  scale_color_manual(values = c("#457b9d", "#ced4da", "#f28482"))

# ggsave(
#   filename = "",
#   width = 4,
#   height = 4,
#   dpi = 300
# )

```

## Number of DEGs
```{r echo = F}
celltype_list <- c("pt", "tal", "pc", "immune", "immune_myeloid", "immune_lymphoid", "ic", "ec", "fibvsmcp")
names_hvg_kpmp <- paste0(celltype_list, "_hvg_kpmp")

# Create a named list of data frames
df_list <- mget(names_hvg_kpmp)
names(df_list) <- toupper(celltype_list)  # Set uppercase names for celltype labeling

# Combine and add celltype column
combined <- bind_rows(df_list, .id = "celltype")

# Create the summary table
deg_summary <- combined %>%
  mutate(direction_fdr = case_when(
    `logFC_treatmentDapagliflozin:visitPOST` > 0 & fdr < 0.05 ~ "+",
    `logFC_treatmentDapagliflozin:visitPOST` < 0 & fdr < 0.05 ~ "-",
    TRUE ~ "NS")) %>%
  filter(direction_fdr != "NS") %>%
  dplyr::select(direction_fdr, celltype) %>%
  table() %>%
  as.data.frame()
deg_summary$celltype <- factor(deg_summary$celltype, levels = c("PT", "TAL", "PC", "IC", "EC", 
                                                                "FIBVSMCP", "IMMUNE",
                                                                "IMMUNE_MYELOID", "IMMUNE_LYMPHOID"))
# Create the summary table
deg_summary_wide <- combined %>%
  mutate(direction_fdr = case_when(
    `logFC_treatmentDapagliflozin:visitPOST` > 0 & fdr < 0.05 ~ "+",
    `logFC_treatmentDapagliflozin:visitPOST` < 0 & fdr < 0.05 ~ "-",
    TRUE ~ "NS")) %>%
  filter(direction_fdr != "NS") %>%
  count(direction_fdr, celltype) %>%
  pivot_wider(names_from = celltype, values_from = n, values_fill = 0) %>%
  as.data.frame()

save(deg_summary_wide, file = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/model comparison/celltype_deg_comparison.RData")

deg_summary %>%
  mutate(Freq = case_when(direction_fdr == "-" ~ -Freq, T ~ Freq)) %>%
  ggplot(aes(x = celltype, y = Freq, fill = direction_fdr)) +
  geom_col(position = "stack") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "#343a40") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        axis.text.x = element_text(angle = 40, hjust = 1),
        legend.position = c(0.8, 0.8),
        text = element_text(size = 15)) +
  scale_fill_manual(values = c("-" = "#457b9d",
                               "+" = "#f28482")) +
  labs(fill = "DiD Direction", 
       x = NULL)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Cell type comparison/celltype_deg_stacked_barplot.jpeg",
       width = 5, height = 4)

```

## Transcript overlap analysis

```{r echo = F}
# upset plot
# combined
# upset_combined_dat <- combined %>%
#   filter(fdr < 0.05) %>%
#   mutate(direction_fdr = case_when(`logFC_treatmentDapagliflozin:visitPOST` > 0 & fdr < 0.05 ~ "+",
#                                    `logFC_treatmentDapagliflozin:visitPOST` < 0 & fdr < 0.05 ~ "-")) %>%
#   dplyr::select(celltype, Gene) %>%
#   mutate(present = 1) %>%
#   distinct() %>%
#   pivot_wider(names_from = celltype, values_from = present, values_fill = 0) %>%
#   as.data.frame()


# UpSetR::upset(upset_combined_dat)


upset_combined_df <- combined %>%
  filter(celltype %nin% c("IMMUNE_MYELOID", "IMMUNE_LYMPHOID")) %>%
  filter(fdr < 0.05) %>%
  dplyr::select(celltype, Gene, `logFC_treatmentDapagliflozin:visitPOST`, fdr) %>%
  group_by(Gene) %>%
  dplyr::summarize(
    celltype = list(unique(celltype))
  ) %>%
  arrange(lengths(celltype))
set_sizes <- upset_combined_df %>%
  unnest(celltype) %>%
  dplyr::count(celltype, name = "size") %>%
  arrange(desc(size))

ordered <- set_sizes$celltype           # vector of cell types in the desired order
combo_ordered <- data.frame(combo_strings = map_chr(unique(upset_combined_df$celltype), ~ str_c(sort(.x), collapse = "-")),
                            combo_ranks = map(unique(upset_combined_df$celltype), ~ match(.x, ordered)) %>%
                              map(~ .x[!is.na(.x)]) %>%
                              map_chr(~ str_c(sprintf("%02d", .x), collapse = "-"))) %>%
  mutate(combo_size = str_count(combo_ranks, "-") + 1,
         combo_first = as.numeric(map_chr(combo_ranks, ~ {
           nums <- as.integer(str_split(.x, "-", simplify = TRUE))
           sprintf("%02d", min(nums, na.rm = TRUE))
         }))) %>%  # count number of ranks
  arrange(combo_first, combo_size)

upset_plot <- upset_combined_df %>%
  mutate(overlap_category = case_when(lengths(celltype) > 2 ~ "2+",
                                      T ~ "1-2")) %>%
  ggplot(aes(x = celltype)) +
  geom_bar_rounded(aes(fill = overlap_category)) +
  scale_x_mergelist(sep = "-", position = "bottom",
                    limits = combo_ordered$combo_strings) +
  axis_combmatrix(sep = "-", levels = ordered,
                  override_plotting_function = function(df){
                    print(class(df))
                    print(df)
                    df %>%
                      mutate(celltype_lengths = case_when(
                        ! observed ~ "Not observed",
                        T ~ as.character(lengths(labels_split)))) %>%
                      ggplot(aes(x= at, y= single_label)) +
                      geom_rect(aes(fill= index %% 2 == 0), ymin=df$index-0.5, ymax=df$index+0.5, xmin=0, xmax=1) +
                      geom_point(aes(color= celltype_lengths), size = 4) +
                      geom_line(data= function(dat) dat[dat$observed, ,drop=FALSE], aes(group = labels, color= celltype_lengths), linewidth= 0.5) +
                      ylab("") + xlab("") +
                      scale_x_continuous(limits = c(0, 1), expand = c(0, 0)) +
                      scale_fill_manual(values= c(`TRUE` = "white", `FALSE` = "white")) +
                      scale_color_manual(values= c("1" = "#bbc7dc",
                                                   "2" = "#bbc7dc",
                                                   "3" = "#6d90b9",
                                                   "4" = "#6d90b9",
                                                   "5" = "#6d90b9",
                                                   "6" = "#6d90b9",
                                                   "7" = "#6d90b9",
                                                   "Not observed" = "#F7F7F7")) +
                      guides(color="none", fill="none") +
                      theme(
                        panel.background = element_blank(),
                        axis.text.x = element_blank(),
                        axis.ticks.y = element_blank(),
                        axis.ticks.length = unit(0, "pt"),
                        axis.title.y = element_blank(),
                        axis.title.x = element_blank(),
                        axis.line = element_blank(),
                        panel.border = element_blank(),
                        text = element_text(size = 20)
                      )
                  }) +
  scale_fill_manual(values= c("1-2" = "#bbc7dc",
                              "2+" = "#6d90b9")) +
  geom_text(stat='count', aes(label=after_stat(count), 
                              color = overlap_category),
            vjust=0.5, hjust = -0.2, angle = 90, size = 6) +
  scale_color_manual(values= c("1-2" = "#bbc7dc",
                               "2+" = "#6d90b9")) +
  theme_bw() +
  labs(x = NULL, y = "Count", fill = "# of overlaps") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 25),
        legend.position = c(0.92,0.9),
        legend.key.size = unit(60, "pt")) +
  guides(color = "none")

p_side <- ggplot(set_sizes, aes(x = -size, y = fct_rev(factor(celltype, levels = c(ordered))))) +
  geom_col(width = 0.6, color = "#385674") +
  labs(x = NULL, y = NULL) +
  scale_x_continuous(labels = abs) + 
  theme_minimal(base_size = 25) +
  theme(
    panel.grid = element_blank(),
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank(), 
    text = element_text(size = 25)) +
  coord_cartesian(expand = FALSE)

library(cowplot)

ggdraw() +
  draw_plot(
    cowplot::plot_grid(
      cowplot::plot_grid(
        NULL,
        p_side + theme(plot.margin = unit(c(1, -3, -15, 10), "pt")),
        ncol = 1, rel_heights = c(5.5, 1)
      ),
      upset_plot,
      nrow = 1,
      rel_widths = c(0.3, 3)
    ),
    x = 0.05, y = 0.05, width = 0.95, height = 0.95  # shrink to add outer padding
  )
ggsave(filename = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Upset/celltype_deg_upset.jpeg",
       width = 30, height = 15)

```
```{r echo = F}

combined_sig <- combined %>%
  filter(fdr < 0.05) %>%
  dplyr::select(Gene, celltype) %>%
  filter(celltype %nin% c("IMMUNE_MYELOID", "IMMUNE_LYMPHOID"))

unique_genes_per_celltype <- combined_sig %>%
  group_by(Gene) %>%
  mutate(n_celltypes = n()) %>%
  ungroup() %>%
  filter(n_celltypes == 1) %>%  # Genes appearing in only one cell type
  count(celltype) %>%
  dplyr::rename(unique_genes = n) %>%
  mutate(unique_genes = unique_genes/2) # duplicates plotted

chord_plot_dat <- combined_sig %>%
  # Self-join to find all celltype pairs for each gene
  inner_join(combined_sig, by = "Gene", suffix = c("_1", "_2"), relationship = "many-to-many") %>%
  # # Remove self-pairs (same celltype)
  filter(celltype_1 != celltype_2) %>%
  # Count shared genes between each celltype pair
  count(celltype_1, celltype_2) %>%
  # Create symmetric matrix
  pivot_wider(names_from = celltype_2, values_from = n, values_fill = 0) %>%
  column_to_rownames("celltype_1") %>%
  as.matrix()
chord_plot_dat <- chord_plot_dat[, rownames(chord_plot_dat)]
# Add unique genes to the diagonal
for(ct in unique_genes_per_celltype$celltype) {
  if(ct %in% rownames(chord_plot_dat)) {
    chord_plot_dat[ct, ct] <- unique_genes_per_celltype$unique_genes[unique_genes_per_celltype$celltype == ct]
  }
}

chord_plot_dat[upper.tri(chord_plot_dat)] <- 0

cell_types <- rownames(chord_plot_dat)
cell_colors <- setNames(c("#f26b21", "#fcec52", "#cbdb47", "#99ca3c", 
                          "#208b3a", "#fbb040", "#f78e31"), cell_types)

# cell_colors <- setNames(c("#1", "#4", "#5", "#6", 
#                           "#7", "#3", "#2"), cell_types)

# Create blended colors for ribbons
col_fun_blend <- function(mat) {
  n <- nrow(mat)
  col_mat <- matrix(NA, n, n)
  for(i in 1:n) {
    for(j in 1:n) {
      if(mat[i,j] > 0) {
        # Blend the two cell type colors
        col1 <- col2rgb(cell_colors[rownames(mat)[i]])
        col2 <- col2rgb(cell_colors[rownames(mat)[j]])
        blended <- rgb((col1[1] + col2[1])/2/255,
                       (col1[2] + col2[2])/2/255,
                       (col1[3] + col2[3])/2/255,
                       alpha = 0.6)
        col_mat[i,j] <- blended
      }
    }
  }
  return(col_mat)
}

chord_colors_blended <- col_fun_blend(chord_plot_dat)


# Create a logical matrix with same dimensions as chord_plot_dat
logical_matrix <- matrix(TRUE, 
                         nrow = nrow(chord_plot_dat), 
                         ncol = ncol(chord_plot_dat),
                         dimnames = list(rownames(chord_plot_dat), 
                                         colnames(chord_plot_dat)))

# Set diagonal to FALSE
diag(logical_matrix) <- FALSE

# Open PNG device
png("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Proportions/celltype_deg_chordplot.png", width = 800, height = 800, res = 150)

# Your plotting code
circos.clear()
chordDiagram(chord_plot_dat, transparency = 0.1,
             grid.col = cell_colors,
             col = chord_colors_blended,
             annotationTrack = c("name", "grid"),
             link.largest.ontop = T,
             self.link = 1,
             link.visible = logical_matrix,
             link.sort = T,
             link.decreasing = T)

# Close the device
dev.off()
circos.clear()
```

```{r echo = F}
# Create set sizes data frame
set_sizes_df <- combined_sig %>%
  count(celltype) %>%
  filter(celltype %in% cell_types) %>%
  arrange(match(celltype, cell_types))

# Initialize the plot
circos.clear()
circos.par("track.height" = 0.1, 
           "gap.after" = rep(3, length(cell_types)),
           "start.degree" = 90)

# par(
#   family = "Outfit", cex = 2, col = "black", # font family, size, color
#   mai = rep(0.5, 4) # plot margin in inches
# ) 

# Create chord diagram
chordDiagram(chord_plot_dat, 
             transparency = 0.1,
             grid.col = cell_colors,
             col = chord_colors_blended,
             annotationTrack = c("name", "grid"),
             link.largest.ontop = T,
             self.link = 1,
             link.visible = logical_matrix,
             link.sort = T,
             link.decreasing = T,
             link.border = "black", link.lwd = 0.2,
             preAllocateTracks = list(track.height = 0.001)
)

# Add barplot track
circos.track(ylim = c(0, max(set_sizes_df$n) * 1.1),
             bg.border = NA,
             track.height = 0.2,
             panel.fun = function(x, y) {
               sector.index = get.cell.meta.data("sector.index")
               xlim = get.cell.meta.data("xlim")
               
               # Get the value for this sector
               value = set_sizes_df$n[set_sizes_df$celltype == sector.index]
               
               # Draw rectangle (bar)
               circos.rect(xlim[1], 0, xlim[2], value,
                           col = cell_colors[sector.index],
                           border = cell_colors[sector.index])
               
               # Add text label
               circos.text(mean(xlim), value + max(set_sizes_df$n) * 0.02,
                           labels = value,
                           sector.index = sector.index,
                           facing = "inside",
                           niceFacing = TRUE,
                           cex = 1,
                           adj = c(0.5, 0))
             })

# Add y-axis for the barplot
circos.yaxis(side = "left", 
             sector.index = cell_types[1],
             labels.cex = 0.5,
             at = pretty(c(0, max(set_sizes_df$n)), n = 3))

circos.clear()
```

```{r echo = F}
upset_combined_df %>%
  arrange(desc(lengths(celltype)))

combined_wide <- combined %>%
  filter(fdr < 0.05) %>%
  filter(celltype %nin% c("IMMUNE_MYELOID", "IMMUNE_LYMPHOID")) %>%
  mutate(logFC_direction = case_when(`logFC_treatmentDapagliflozin:visitPOST` < 0 ~ "-",
                                     `logFC_treatmentDapagliflozin:visitPOST` > 0 ~ "+")) %>%
  dplyr::select(Gene, celltype, logFC_direction) %>%
  pivot_wider(
    names_from = celltype,
    values_from = logFC_direction,
    values_fn = list(direction = identity)) %>%
  rowwise() %>%
  dplyr::mutate(n_pos = sum(c_across(PT:FIBVSMCP) == "+", na.rm = TRUE),
                n_neg = sum(c_across(PT:FIBVSMCP) == "-", na.rm = TRUE),
                n_total = sum(!is.na(c_across(PT:FIBVSMCP)))) %>%
  ungroup() %>%
  arrange(desc(n_total))

save(combined_wide, file = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/model comparison/celltype_deg_concordance.RData")


gene_list_4 <- combined_wide %>%
  filter(n_total >= 4) %>%
  pull(Gene)

save(gene_list_4, file = "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/model comparison/gene_list_greater_than_3.RData")

```

## Investigate outlier

```{r echo = F}
combined_nebula_reml_pooled %>%
  filter(`logFC_treatmentDapagliflozin:visitPOST` > 10)

# immune cell: TRHDE-AS1
# immune cell: FGF14
# fib/vsmc/p: PSAT1
```

## IPA pathway results

```{r echo = F}
text1 = 6.5
text2 = 18
text3 = 20
scenario_colors = c("Activated in D, stable/inhibited in P" = "#81171b",
                    "Activated in both, more in D" = "#ad2e24",
                    "Stable in D, inhibited in P" = "#c75146",
                    "Inhibited in both, less in D" = "#ea8c55",
                    "Activated in P, stable/inhibited in D" = "#1d3461",
                    "Activated in both, less in D" = "#004ba8",
                    "Stable in P, inhibited in D" = "#2c7da0", 
                    "Inhibited in both, more in D" = "#22aed1")
```

### PT

```{r echo = F}
pt_pathways_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/pt_DiD_pathways_nebula.xls", skip = 1)
pt_dapa_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/pt_dapa_pathways_nebula.xls", skip = 1)
pt_placebo_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/pt_placebo_pathways_nebula.xls", skip = 1)

colnames(pt_pathways_nebula) <- c("pathway", "neg_log_p", "ratio", "z", "genes")
colnames(pt_dapa_nebula) <- c("pathway", "neg_log_p_dapa", "ratio_dapa", "z_dapa", "genes_dapa")
colnames(pt_placebo_nebula) <- c("pathway", "neg_log_p_placebo", "ratio_placebo", "z_placebo", "genes_placebo")

pt_pathways_merged_nebula <- pt_pathways_nebula %>%
  full_join(pt_dapa_nebula) %>% full_join(pt_placebo_nebula) %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo) %>%
  mutate(scenario = case_when(
    z_dapa > 0 & z_placebo > 0 & z_placebo < z_dapa ~ "Activated in both, more in D",
    z_dapa > 0 & z_placebo > 0 & z_placebo > z_dapa ~ "Activated in both, less in D",
    z_dapa > 0 & (z_placebo < 0  | z_placebo == 0) ~ "Activated in D, stable/inhibited in P",
    z_dapa < 0 & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo < z_dapa ~ "Inhibited in both, less in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo > z_dapa ~ "Inhibited in both, more in D",
    (z_dapa == 0) & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    (z_dapa == 0) & z_placebo < 0 ~ "Stable in D, inhibited in P",
    z_dapa < 0 & (z_placebo == 0) ~ "Stable in P, inhibited in D"))
```


```{r echo = F}
pt_pathways_merged_nebula$scenario <- factor(pt_pathways_merged_nebula$scenario,
                                             levels = c("Activated in D, stable/inhibited in P","Activated in both, more in D",
                                                        "Stable in D, inhibited in P","Inhibited in both, less in D",
                                                        "Activated in P, stable/inhibited in D","Activated in both, less in D",
                                                        "Stable in P, inhibited in D", "Inhibited in both, more in D"))
```

#### Inhibited Pathways
```{r echo = F}
pt_pathways_inhibited_nebula <- pt_pathways_merged_nebula %>%
  filter(z < 0) %>%
  arrange(dplyr::desc(neg_log_p))

pt_pathways_inhibited_nebula$pathway <- reorder(pt_pathways_inhibited_nebula$pathway, pt_pathways_inhibited_nebula$neg_log_p)

pt_top30_inhibited_nebula <- pt_pathways_inhibited_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.1) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "PT Top 30 Inhibited Pathways")   +
  scale_x_continuous(limits = c(0, 5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_pt_pathways_inhibited_nebula <- pt_pathways_inhibited_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()
## pt_inhibited_scenarios <- as.data.frame(table(pt_pathways_inhibited_nebula$scenario))[5:8,] %>%
##   mutate(percent = (Freq / nrow(pt_pathways_inhibited_nebula))*100) %>%
##   ggplot(aes(x = Var1, y = percent, fill = Var1)) + 
##   geom_col() +
##   scale_fill_manual(values = scenario_colors) +
##   scale_x_discrete(drop = T) +
##   theme_minimal() +
##   theme(panel.grid = element_blank(),
##         axis.text.x = element_text(size = text2,
##                                    angle = 30,
##                                    hjust = 1),
##         axis.ticks.y = element_blank(), 
##         legend.position = "none",
##         text = element_text(size = text3),
##         panel.background = element_rect(color="black")) +
##   labs(y = "Percent",
##        x = NULL,
##        fill = "Scenario") +
##   ylim(c(0,50))
## 
## pt_top30_inhibited_nebula + inset_element(pt_inhibited_scenarios, 
##                                left = 0.45, bottom = 0.01,
##                                right = 0.8, top = 0.6)

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_top30_inhibited_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z < -2
pt_pathways_inhibited_sig_nebula <- pt_pathways_inhibited_nebula %>%
  filter(z <= -2)
pt_top30_inhibited_2_nebula <- pt_pathways_inhibited_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(-pt_pathways_inhibited_sig_nebula$z), max(-pt_pathways_inhibited_sig_nebula$z)),
                        labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.03) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "PT Top Inhibited Pathways (Z < -2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors)  +
  scale_y_discrete(expand = expansion(mult = c(0.1, 0.1))) 

## top30_inhibited_nebula + inset_element(inhibited_scenarios, 
##                                left = 0.45, bottom = 0.01,
##                                right = 0.80, top = 0.6)
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_top_inhibited_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Activated Pathways
```{r echo = F}
pt_pathways_activated_nebula <- pt_pathways_merged_nebula %>%
  filter(z > 0) %>%
  arrange(dplyr::desc(neg_log_p))

pt_pathways_activated_nebula$pathway <- reorder(pt_pathways_activated_nebula$pathway, pt_pathways_activated_nebula$neg_log_p)

pt_top30_activated_nebula <- pt_pathways_activated_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.1) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "PT Top 30 Activated Pathways")   +
  scale_x_continuous(limits = c(0, 3), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_pt_pathways_activated_nebula <- pt_pathways_activated_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_top30_activated_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z > 2
pt_pathways_activated_sig_nebula <- pt_pathways_activated_nebula %>%
  filter(z > 2)
pt_top30_activated_2_nebula <- pt_pathways_activated_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(pt_pathways_activated_sig_nebula$z), max(pt_pathways_activated_sig_nebula$z))) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "PT Top Activated Pathways (Z > 2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(mult = c(0.125, 0.025))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pt_top_activated_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Z-Score Bar charts
```{r echo = F, warning = F}
## z-scores in bar charts
pt_neg_pathways_merged_long_nebula <- pt_pathways_merged_nebula %>% 
  filter(z < 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
pt_neg_pathways_merged_long_nebula$name <- factor(pt_neg_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

pt_neg_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "PT Top 10 Inhibited Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/pt_top10_inhibited_pathway_zscores.jpeg",
       scale = 1.5)

pt_pos_pathways_merged_long_nebula <- pt_pathways_merged_nebula %>% 
  filter(z > 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
pt_pos_pathways_merged_long_nebula$name <- factor(pt_pos_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

pt_pos_pathways_merged_long_nebula
pt_pos_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 20, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "PT Top 10 Activated Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/pt_top10_activated_pathway_zscores.jpeg",
       scale = 1.5)
```

### TAL

```{r echo = F}
tal_pathways_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/tal_DiD_pathways_nebula.xls", skip = 1)
tal_dapa_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/tal_dapa_pathways_nebula.xls", skip = 1)
tal_placebo_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/tal_placebo_pathways_nebula.xls", skip = 1)

colnames(tal_pathways_nebula) <- c("pathway", "neg_log_p", "ratio", "z", "genes")
colnames(tal_dapa_nebula) <- c("pathway", "neg_log_p_dapa", "ratio_dapa", "z_dapa", "genes_dapa")
colnames(tal_placebo_nebula) <- c("pathway", "neg_log_p_placebo", "ratio_placebo", "z_placebo", "genes_placebo")

tal_pathways_merged_nebula <- tal_pathways_nebula %>%
  full_join(tal_dapa_nebula) %>% full_join(tal_placebo_nebula) %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo)  %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo) %>%
  mutate(scenario = case_when(
    z_dapa > 0 & z_placebo > 0 & z_placebo < z_dapa ~ "Activated in both, more in D",
    z_dapa > 0 & z_placebo > 0 & z_placebo > z_dapa ~ "Activated in both, less in D",
    z_dapa > 0 & (z_placebo < 0  | z_placebo == 0) ~ "Activated in D, stable/inhibited in P",
    z_dapa < 0 & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo < z_dapa ~ "Inhibited in both, less in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo > z_dapa ~ "Inhibited in both, more in D",
    (z_dapa == 0) & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    (z_dapa == 0) & z_placebo < 0 ~ "Stable in D, inhibited in P",
    z_dapa < 0 & (z_placebo == 0) ~ "Stable in P, inhibited in D"))

tal_pathways_merged_nebula$scenario <- factor(tal_pathways_merged_nebula$scenario,
                                              levels = c("Activated in D, stable/inhibited in P","Activated in both, more in D",
                                                         "Stable in D, inhibited in P","Inhibited in both, less in D",
                                                         "Activated in P, stable/inhibited in D","Activated in both, less in D",
                                                         "Stable in P, inhibited in D", "Inhibited in both, more in D"))
```

#### Inhibited Pathways
```{r echo = F}
tal_pathways_inhibited_nebula <- tal_pathways_merged_nebula %>%
  filter(z < 0) %>%
  arrange(dplyr::desc(neg_log_p))

tal_pathways_inhibited_nebula$pathway <- reorder(tal_pathways_inhibited_nebula$pathway, tal_pathways_inhibited_nebula$neg_log_p)

tal_top30_inhibited_nebula <- tal_pathways_inhibited_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.03) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "TAL Top 30 Inhibited Pathways")   +
  scale_x_continuous(limits = c(0, 3), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_tal_pathways_inhibited_nebula <- tal_pathways_inhibited_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_top30_inhibited_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z < -2
tal_pathways_inhibited_sig_nebula <- tal_pathways_inhibited_nebula %>%
  filter(z < -2)
tal_top30_inhibited_2_nebula <- tal_pathways_inhibited_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(-tal_pathways_inhibited_sig_nebula$z), max(-tal_pathways_inhibited_sig_nebula$z)),
                        labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "TAL Top Inhibited Pathways (Z < -2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors)  +
  scale_y_discrete(expand = expansion(mult = c(0.5, 0.01))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_top_inhibited_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Activated Pathways
```{r echo = F}
tal_pathways_activated_nebula <- tal_pathways_merged_nebula %>%
  filter(z > 0) %>%
  arrange(dplyr::desc(neg_log_p))

tal_pathways_activated_nebula$pathway <- reorder(tal_pathways_activated_nebula$pathway, tal_pathways_activated_nebula$neg_log_p)

tal_top30_activated_nebula <- tal_pathways_activated_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "TAL Top 30 Activated Pathways")   +
  scale_x_continuous(limits = c(0, 2.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_tal_pathways_activated_nebula <- tal_pathways_activated_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_top30_activated_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z > 2
tal_pathways_activated_sig_nebula <- tal_pathways_activated_nebula %>%
  filter(z > 2)
tal_top30_activated_2_nebula <- tal_pathways_activated_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(tal_pathways_activated_sig_nebula$z), max(tal_pathways_activated_sig_nebula$z))) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "TAL Top Activated Pathways (Z > 2)")   +
  scale_x_continuous(limits = c(0, 2), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(mult = c(0.1, 0.025))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/tal_top_activated_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```
#### Z-Score Bar charts
```{r echo = F, warning = F}
## z-scores in bar charts
tal_neg_pathways_merged_long_nebula <- tal_pathways_merged_nebula %>% 
  filter(z < 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
tal_neg_pathways_merged_long_nebula$name <- factor(tal_neg_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

tal_neg_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 50, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "TAL Top 10 Inhibited Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/tal_top10_inhibited_pathway_zscores.jpeg",
       scale = 1.5)

tal_pos_pathways_merged_long_nebula <- tal_pathways_merged_nebula %>% 
  filter(z > 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
tal_pos_pathways_merged_long_nebula$name <- factor(tal_pos_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

tal_pos_pathways_merged_long_nebula
tal_pos_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "TAL Top 10 Activated Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/tal_top10_activated_pathway_zscores.jpeg",
       scale = 1.5)
```

### PC

```{r echo = F}
pc_pathways_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/pc_DiD_pathways_nebula.xls", skip = 1)
pc_dapa_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/pc_dapa_pathways_nebula.xls", skip = 1)
pc_placebo_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/pc_placebo_pathways_nebula.xls", skip = 1)

colnames(pc_pathways_nebula) <- c("pathway", "neg_log_p", "ratio", "z", "genes")
colnames(pc_dapa_nebula) <- c("pathway", "neg_log_p_dapa", "ratio_dapa", "z_dapa", "genes_dapa")
colnames(pc_placebo_nebula) <- c("pathway", "neg_log_p_placebo", "ratio_placebo", "z_placebo", "genes_placebo")

pc_pathways_merged_nebula <- pc_pathways_nebula %>%
  full_join(pc_dapa_nebula) %>% full_join(pc_placebo_nebula) %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo) %>%
  mutate(scenario = case_when(
    z_dapa > 0 & z_placebo > 0 & z_placebo < z_dapa ~ "Activated in both, more in D",
    z_dapa > 0 & z_placebo > 0 & z_placebo > z_dapa ~ "Activated in both, less in D",
    z_dapa > 0 & (z_placebo < 0  | z_placebo == 0) ~ "Activated in D, stable/inhibited in P",
    z_dapa < 0 & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo < z_dapa ~ "Inhibited in both, less in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo > z_dapa ~ "Inhibited in both, more in D",
    (z_dapa == 0) & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    (z_dapa == 0) & z_placebo < 0 ~ "Stable in D, inhibited in P",
    z_dapa < 0 & (z_placebo == 0) ~ "Stable in P, inhibited in D"))

pc_pathways_merged_nebula$scenario <- factor(pc_pathways_merged_nebula$scenario,
                                             levels = c("Activated in D, stable/inhibited in P","Activated in both, more in D",
                                                        "Stable in D, inhibited in P","Inhibited in both, less in D",
                                                        "Activated in P, stable/inhibited in D","Activated in both, less in D",
                                                        "Stable in P, inhibited in D", "Inhibited in both, more in D"))
```

#### Inhibited Pathways
```{r echo = F}
pc_pathways_inhibited_nebula <- pc_pathways_merged_nebula %>%
  filter(z < 0) %>%
  arrange(dplyr::desc(neg_log_p))

pc_pathways_inhibited_nebula$pathway <- reorder(pc_pathways_inhibited_nebula$pathway, pc_pathways_inhibited_nebula$neg_log_p)

pc_top30_inhibited_nebula <- pc_pathways_inhibited_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "PC Top 30 Inhibited Pathways")   +
  scale_x_continuous(limits = c(0, 3), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_pc_pathways_inhibited_nebula <- pc_pathways_inhibited_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_top30_inhibited_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z < -2
pc_pathways_inhibited_sig_nebula <- pc_pathways_inhibited_nebula %>%
  filter(z < -2)
pc_top30_inhibited_2_nebula <- pc_pathways_inhibited_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(-pc_pathways_inhibited_sig_nebula$z), max(-pc_pathways_inhibited_sig_nebula$z)),
                        labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "PC Top Inhibited Pathways (Z < -2)")   +
  scale_x_continuous(limits = c(0, 2), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors)  +
  scale_y_discrete(expand = expansion(mult = c(0.1, 0))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_top_inhibited_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Activated Pathways
```{r echo = F}
pc_pathways_activated_nebula <- pc_pathways_merged_nebula %>%
  filter(z > 0) %>%
  arrange(dplyr::desc(neg_log_p))

pc_pathways_activated_nebula$pathway <- reorder(pc_pathways_activated_nebula$pathway, pc_pathways_activated_nebula$neg_log_p)

pc_top30_activated_nebula <- pc_pathways_activated_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.05) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "PC Top 30 Activated Pathways")   +
  scale_x_continuous(limits = c(0, 5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_pc_pathways_activated_nebula <- pc_pathways_activated_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_top30_activated_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z > 2
pc_pathways_activated_sig_nebula <- pc_pathways_activated_nebula %>%
  filter(z > 2)
pc_top30_activated_2_nebula <- pc_pathways_activated_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(pc_pathways_activated_sig_nebula$z), max(pc_pathways_activated_sig_nebula$z))) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "PC Top Activated Pathways (Z > 2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(mult = c(0.4, 0))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/pc_top_activated_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```
#### Z-Score Bar charts
```{r echo = F, warning = F}
## z-scores in bar charts
pc_neg_pathways_merged_long_nebula <- pc_pathways_merged_nebula %>% 
  filter(z < 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
pc_neg_pathways_merged_long_nebula$name <- factor(pc_neg_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

pc_neg_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 50, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "PC Top 10 Inhibited Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/pc_top10_inhibited_pathway_zscores.jpeg",
       scale = 1.5)

pc_pos_pathways_merged_long_nebula <- pc_pathways_merged_nebula %>% 
  filter(z > 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
pc_pos_pathways_merged_long_nebula$name <- factor(pc_pos_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

pc_pos_pathways_merged_long_nebula
pc_pos_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 50, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "PC Top 10 Activated Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/pc_top10_activated_pathway_zscores.jpeg",
       scale = 1.5)
```

### Immune (very few cells)

```{r echo = F}
immune_pathways_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/immune_DiD_pathways_nebula.xls", skip = 1)
immune_dapa_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/immune_dapa_pathways_nebula.xls", skip = 1)
immune_placebo_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/immune_placebo_pathways_nebula.xls", skip = 1)

colnames(immune_pathways_nebula) <- c("pathway", "neg_log_p", "ratio", "z", "genes")
colnames(immune_dapa_nebula) <- c("pathway", "neg_log_p_dapa", "ratio_dapa", "z_dapa", "genes_dapa")
colnames(immune_placebo_nebula) <- c("pathway", "neg_log_p_placebo", "ratio_placebo", "z_placebo", "genes_placebo")

immune_pathways_merged_nebula <- immune_pathways_nebula %>%
  full_join(immune_dapa_nebula) %>% full_join(immune_placebo_nebula) %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo) %>%
  mutate(scenario = case_when(
    z_dapa > 0 & z_placebo > 0 & z_placebo < z_dapa ~ "Activated in both, more in D",
    z_dapa > 0 & z_placebo > 0 & z_placebo > z_dapa ~ "Activated in both, less in D",
    z_dapa > 0 & (z_placebo < 0  | z_placebo == 0) ~ "Activated in D, stable/inhibited in P",
    z_dapa < 0 & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo < z_dapa ~ "Inhibited in both, less in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo > z_dapa ~ "Inhibited in both, more in D",
    (z_dapa == 0) & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    (z_dapa == 0) & z_placebo < 0 ~ "Stable in D, inhibited in P",
    z_dapa < 0 & (z_placebo == 0) ~ "Stable in P, inhibited in D"))

immune_pathways_merged_nebula$scenario <- factor(immune_pathways_merged_nebula$scenario,
                                                 levels = c("Activated in D, stable/inhibited in P","Activated in both, more in D",
                                                            "Stable in D, inhibited in P","Inhibited in both, less in D",
                                                            "Activated in P, stable/inhibited in D","Activated in both, less in D",
                                                            "Stable in P, inhibited in D", "Inhibited in both, more in D"))
```

#### Inhibited Pathways
```{r echo = F}
immune_pathways_inhibited_nebula <- immune_pathways_merged_nebula %>%
  filter(z < 0) %>%
  arrange(dplyr::desc(neg_log_p))

immune_pathways_inhibited_nebula$pathway <- reorder(immune_pathways_inhibited_nebula$pathway, immune_pathways_inhibited_nebula$neg_log_p)

immune_top30_inhibited_nebula <- immune_pathways_inhibited_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.05) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "Immune Top 30 Inhibited Pathways")   +
  scale_x_continuous(limits = c(0, 5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_immune_pathways_inhibited_nebula <- immune_pathways_inhibited_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_top30_inhibited_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z < -2
immune_pathways_inhibited_sig_nebula <- immune_pathways_inhibited_nebula %>%
  filter(z < -2)
immune_top30_inhibited_2_nebula <- immune_pathways_inhibited_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(-immune_pathways_inhibited_sig_nebula$z), max(-immune_pathways_inhibited_sig_nebula$z)),
                        labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "Immune Top Inhibited Pathways (Z < -2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors)  +
  scale_y_discrete(expand = expansion(mult = c(0.2, 0))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_top_inhibited_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Activated Pathways
```{r echo = F}
immune_pathways_activated_nebula <- immune_pathways_merged_nebula %>%
  filter(z > 0) %>%
  arrange(dplyr::desc(neg_log_p))

immune_pathways_activated_nebula$pathway <- reorder(immune_pathways_activated_nebula$pathway, immune_pathways_activated_nebula$neg_log_p)

immune_top30_activated_nebula <- immune_pathways_activated_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.03) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "Immune Top 30 Activated Pathways")   +
  scale_x_continuous(limits = c(0, 3), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_immune_pathways_activated_nebula <- immune_pathways_activated_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_top30_activated_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z > 2
immune_pathways_activated_sig_nebula <- immune_pathways_activated_nebula %>%
  filter(z > 2)
immune_top30_activated_2_nebula <- immune_pathways_activated_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(immune_pathways_activated_sig_nebula$z), max(immune_pathways_activated_sig_nebula$z))) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "Immune Top Activated Pathways (Z > 2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(mult = c(0.1, 0.025))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/immune_top_activated_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```
#### Z-Score Bar charts
```{r echo = F, warning = F}
## z-scores in bar charts
immune_neg_pathways_merged_long_nebula <- immune_pathways_merged_nebula %>% 
  filter(z < 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
immune_neg_pathways_merged_long_nebula$name <- factor(immune_neg_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

immune_neg_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 60, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "Immune Top 10 Inhibited Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/immune_top10_inhibited_pathway_zscores.jpeg",
       scale = 1.5)

immune_pos_pathways_merged_long_nebula <- immune_pathways_merged_nebula %>% 
  filter(z > 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
immune_pos_pathways_merged_long_nebula$name <- factor(immune_pos_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

immune_pos_pathways_merged_long_nebula
immune_pos_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "Immune Top 10 Activated Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/immune_top10_activated_pathway_zscores.jpeg",
       scale = 1.5)
```

### IC

```{r echo = F}
ic_pathways_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/ic_DiD_pathways_nebula.xls", skip = 1)
ic_dapa_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/ic_dapa_pathways_nebula.xls", skip = 1)
ic_placebo_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/ic_placebo_pathways_nebula.xls", skip = 1)

colnames(ic_pathways_nebula) <- c("pathway", "neg_log_p", "ratio", "z", "genes")
colnames(ic_dapa_nebula) <- c("pathway", "neg_log_p_dapa", "ratio_dapa", "z_dapa", "genes_dapa")
colnames(ic_placebo_nebula) <- c("pathway", "neg_log_p_placebo", "ratio_placebo", "z_placebo", "genes_placebo")

ic_pathways_merged_nebula <- ic_pathways_nebula %>%
  full_join(ic_dapa_nebula) %>% full_join(ic_placebo_nebula) %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo) %>%
  mutate(scenario = case_when(
    z_dapa > 0 & z_placebo > 0 & z_placebo < z_dapa ~ "Activated in both, more in D",
    z_dapa > 0 & z_placebo > 0 & z_placebo > z_dapa ~ "Activated in both, less in D",
    z_dapa > 0 & (z_placebo < 0  | z_placebo == 0) ~ "Activated in D, stable/inhibited in P",
    z_dapa < 0 & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo < z_dapa ~ "Inhibited in both, less in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo > z_dapa ~ "Inhibited in both, more in D",
    (z_dapa == 0) & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    (z_dapa == 0) & z_placebo < 0 ~ "Stable in D, inhibited in P",
    z_dapa < 0 & (z_placebo == 0) ~ "Stable in P, inhibited in D"))

ic_pathways_merged_nebula$scenario <- factor(ic_pathways_merged_nebula$scenario,
                                             levels = c("Activated in D, stable/inhibited in P","Activated in both, more in D",
                                                        "Stable in D, inhibited in P","Inhibited in both, less in D",
                                                        "Activated in P, stable/inhibited in D","Activated in both, less in D",
                                                        "Stable in P, inhibited in D", "Inhibited in both, more in D"))
```

#### Inhibited Pathways
```{r echo = F}
ic_pathways_inhibited_nebula <- ic_pathways_merged_nebula %>%
  filter(z < 0) %>%
  arrange(dplyr::desc(neg_log_p))

ic_pathways_inhibited_nebula$pathway <- reorder(ic_pathways_inhibited_nebula$pathway, ic_pathways_inhibited_nebula$neg_log_p)

ic_top30_inhibited_nebula <- ic_pathways_inhibited_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.05) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "IC Top 30 Inhibited Pathways")   +
  scale_x_continuous(limits = c(0, 5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_ic_pathways_inhibited_nebula <- ic_pathways_inhibited_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_top30_inhibited_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z < -2
ic_pathways_inhibited_sig_nebula <- ic_pathways_inhibited_nebula %>%
  filter(z < -2)
ic_top30_inhibited_2_nebula <- ic_pathways_inhibited_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(-ic_pathways_inhibited_sig_nebula$z), max(-ic_pathways_inhibited_sig_nebula$z)),
                        labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "IC Top Inhibited Pathways (Z < -2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors)  +
  scale_y_discrete(expand = expansion(mult = c(0.2, 0))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_top_inhibited_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Activated Pathways
```{r echo = F}
ic_pathways_activated_nebula <- ic_pathways_merged_nebula %>%
  filter(z > 0) %>%
  arrange(dplyr::desc(neg_log_p))

ic_pathways_activated_nebula$pathway <- reorder(ic_pathways_activated_nebula$pathway, ic_pathways_activated_nebula$neg_log_p)

ic_top30_activated_nebula <- ic_pathways_activated_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.05) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "IC Top 30 Activated Pathways")   +
  scale_x_continuous(limits = c(0, 5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_ic_pathways_activated_nebula <- ic_pathways_activated_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_top30_activated_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z > 2
ic_pathways_activated_sig_nebula <- ic_pathways_activated_nebula %>%
  filter(z > 2)
ic_top30_activated_2_nebula <- ic_pathways_activated_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(ic_pathways_activated_sig_nebula$z), max(ic_pathways_activated_sig_nebula$z))) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "IC Top Activated Pathways (Z > 2)")   +
  scale_x_continuous(limits = c(0, 2), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(mult = c(0.1, 0.025))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ic_top_activated_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Z-Score Bar charts
```{r echo = F, warning = F}
## z-scores in bar charts
ic_neg_pathways_merged_long_nebula <- ic_pathways_merged_nebula %>% 
  filter(z < 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
ic_neg_pathways_merged_long_nebula$name <- factor(ic_neg_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

ic_neg_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "IC Top 10 Inhibited Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/ic_top10_inhibited_pathway_zscores.jpeg",
       scale = 1.5)

ic_pos_pathways_merged_long_nebula <- ic_pathways_merged_nebula %>% 
  filter(z > 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
ic_pos_pathways_merged_long_nebula$name <- factor(ic_pos_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

ic_pos_pathways_merged_long_nebula
ic_pos_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 50, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "IC Top 10 Activated Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/ic_top10_activated_pathway_zscores.jpeg",
       scale = 1.5)
```

### EC

```{r echo = F}
ec_pathways_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/ec_DiD_pathways_nebula.xls", skip = 1)
ec_dapa_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/ec_dapa_pathways_nebula.xls", skip = 1)
ec_placebo_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/ec_placebo_pathways_nebula.xls", skip = 1)

colnames(ec_pathways_nebula) <- c("pathway", "neg_log_p", "ratio", "z", "genes")
colnames(ec_dapa_nebula) <- c("pathway", "neg_log_p_dapa", "ratio_dapa", "z_dapa", "genes_dapa")
colnames(ec_placebo_nebula) <- c("pathway", "neg_log_p_placebo", "ratio_placebo", "z_placebo", "genes_placebo")

ec_pathways_merged_nebula <- ec_pathways_nebula %>%
  full_join(ec_dapa_nebula) %>% full_join(ec_placebo_nebula) %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo) %>%
  mutate(scenario = case_when(
    z_dapa > 0 & z_placebo > 0 & z_placebo < z_dapa ~ "Activated in both, more in D",
    z_dapa > 0 & z_placebo > 0 & z_placebo > z_dapa ~ "Activated in both, less in D",
    z_dapa > 0 & (z_placebo < 0  | z_placebo == 0) ~ "Activated in D, stable/inhibited in P",
    z_dapa < 0 & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo < z_dapa ~ "Inhibited in both, less in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo > z_dapa ~ "Inhibited in both, more in D",
    (z_dapa == 0) & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    (z_dapa == 0) & z_placebo < 0 ~ "Stable in D, inhibited in P",
    z_dapa < 0 & (z_placebo == 0) ~ "Stable in P, inhibited in D"))

ec_pathways_merged_nebula$scenario <- factor(ec_pathways_merged_nebula$scenario,
                                             levels = c("Activated in D, stable/inhibited in P","Activated in both, more in D",
                                                        "Stable in D, inhibited in P","Inhibited in both, less in D",
                                                        "Activated in P, stable/inhibited in D","Activated in both, less in D",
                                                        "Stable in P, inhibited in D", "Inhibited in both, more in D"))
```

#### Inhibited Pathways
```{r echo = F}
ec_pathways_inhibited_nebula <- ec_pathways_merged_nebula %>%
  filter(z < 0) %>%
  arrange(dplyr::desc(neg_log_p))

ec_pathways_inhibited_nebula$pathway <- reorder(ec_pathways_inhibited_nebula$pathway, ec_pathways_inhibited_nebula$neg_log_p)

ec_top30_inhibited_nebula <- ec_pathways_inhibited_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "EC Top 30 Inhibited Pathways")   +
  scale_x_continuous(limits = c(0, 3), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_ec_pathways_inhibited_nebula <- ec_pathways_inhibited_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_top30_inhibited_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z < -2
ec_pathways_inhibited_sig_nebula <- ec_pathways_inhibited_nebula %>%
  filter(z < -2)
ec_top30_inhibited_2_nebula <- ec_pathways_inhibited_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(-ec_pathways_inhibited_sig_nebula$z), max(-ec_pathways_inhibited_sig_nebula$z)),
                        labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "EC Top Inhibited Pathways (Z < -2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors)  +
  scale_y_discrete(expand = expansion(mult = c(0.2, 0))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_top_inhibited_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Activated Pathways
```{r echo = F}
ec_pathways_activated_nebula <- ec_pathways_merged_nebula %>%
  filter(z > 0) %>%
  arrange(dplyr::desc(neg_log_p))

ec_pathways_activated_nebula$pathway <- reorder(ec_pathways_activated_nebula$pathway, ec_pathways_activated_nebula$neg_log_p)

ec_top30_activated_nebula <- ec_pathways_activated_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "EC Top 30 Activated Pathways")   +
  scale_x_continuous(limits = c(0, 3), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_ec_pathways_activated_nebula <- ec_pathways_activated_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_top30_activated_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z > 2
ec_pathways_activated_sig_nebula <- ec_pathways_activated_nebula %>%
  filter(z > 2)
ec_top30_activated_2_nebula <- ec_pathways_activated_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(ec_pathways_activated_sig_nebula$z), max(ec_pathways_activated_sig_nebula$z))) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "EC Top Activated Pathways (Z > 2)")   +
  scale_x_continuous(limits = c(0, 2), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(mult = c(1, 0))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/ec_top_activated_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```
#### Z-Score Bar charts
```{r echo = F, warning = F}
## z-scores in bar charts
ec_neg_pathways_merged_long_nebula <- ec_pathways_merged_nebula %>% 
  filter(z < 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
ec_neg_pathways_merged_long_nebula$name <- factor(ec_neg_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

ec_neg_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "EC Top 10 Inhibited Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/ec_top10_inhibited_pathway_zscores.jpeg",
       scale = 1.5)

ec_pos_pathways_merged_long_nebula <- ec_pathways_merged_nebula %>% 
  filter(z > 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
ec_pos_pathways_merged_long_nebula$name <- factor(ec_pos_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

ec_pos_pathways_merged_long_nebula
ec_pos_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "EC Top 10 Activated Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/ec_top10_activated_pathway_zscores.jpeg",
       scale = 1.5)
```

### DTL (very few cells)

```{r echo = F, eval = F}
dtl_pathways_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/dtl_DiD_pathways_nebula.xls", skip = 1)
dtl_dapa_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/dtl_dapa_pathways_nebula.xls", skip = 1)
dtl_placebo_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/dtl_placebo_pathways_nebula.xls", skip = 1)

colnames(dtl_pathways_nebula) <- c("pathway", "neg_log_p", "ratio", "z", "genes")
colnames(dtl_dapa_nebula) <- c("pathway", "neg_log_p_dapa", "ratio_dapa", "z_dapa", "genes_dapa")
colnames(dtl_placebo_nebula) <- c("pathway", "neg_log_p_placebo", "ratio_placebo", "z_placebo", "genes_placebo")

dtl_pathways_merged_nebula <- dtl_pathways_nebula %>%
  full_join(dtl_dapa_nebula) %>% full_join(dtl_placebo_nebula) %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo) %>%
  mutate(scenario = case_when(
    z_dapa > 0 & z_placebo > 0 & z_placebo < z_dapa ~ "Activated in both, more in D",
    z_dapa > 0 & z_placebo > 0 & z_placebo > z_dapa ~ "Activated in both, less in D",
    z_dapa > 0 & (z_placebo < 0  | z_placebo == 0) ~ "Activated in D, stable/inhibited in P",
    z_dapa < 0 & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo < z_dapa ~ "Inhibited in both, less in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo > z_dapa ~ "Inhibited in both, more in D",
    (z_dapa == 0) & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    (z_dapa == 0) & z_placebo < 0 ~ "Stable in D, inhibited in P",
    z_dapa < 0 & (z_placebo == 0) ~ "Stable in P, inhibited in D"))

dtl_pathways_merged_nebula$scenario <- factor(dtl_pathways_merged_nebula$scenario,
                                              levels = c("Activated in D, stable/inhibited in P","Activated in both, more in D",
                                                         "Stable in D, inhibited in P","Inhibited in both, less in D",
                                                         "Activated in P, stable/inhibited in D","Activated in both, less in D",
                                                         "Stable in P, inhibited in D", "Inhibited in both, more in D"))
```

#### Inhibited Pathways
```{r echo = F, eval = F}
dtl_pathways_inhibited_nebula <- dtl_pathways_merged_nebula %>%
  filter(z < 0) %>%
  arrange(dplyr::desc(neg_log_p))

dtl_pathways_inhibited_nebula$pathway <- reorder(dtl_pathways_inhibited_nebula$pathway, dtl_pathways_inhibited_nebula$neg_log_p)

dtl_top30_inhibited_nebula <- dtl_pathways_inhibited_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.03) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "DTL Top 30 Inhibited Pathways")   +
  scale_x_continuous(limits = c(0, 4), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_dtl_pathways_inhibited_nebula <- dtl_pathways_inhibited_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/dtl_top30_inhibited_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z < -2 (none significant)
## dtl_pathways_inhibited_sig_nebula <- dtl_pathways_inhibited_nebula %>%
##   filter(z < -2)
## dtl_top30_inhibited_2_nebula <- dtl_pathways_inhibited_sig_nebula[1:30,] %>%
##   ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
##   geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
##   scale_size_continuous(range = c(min(-dtl_pathways_inhibited_sig_nebula$z), max(-dtl_pathways_inhibited_sig_nebula$z)),
##                         labels = function(x) paste0("-", x)) +
##   geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
##   geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
##   theme_bw() +
##   theme(axis.text.y = element_blank(),
##         panel.grid = element_blank(),
##         axis.text.x = element_text(size = text3),
##         axis.title = element_text(size = text3),
##         axis.ticks.y = element_blank(), 
##         legend.position = c(0.9,0.2),
##         legend.background = element_blank(),
##         legend.box.background = element_rect(color = "black"),
##         legend.title = element_text(size = text2),
##         legend.text = element_text(size = text2),
##         title = element_text (size = text3)) +
##   labs(x = "-log(p-value)",
##        y = "Pathways",
##        color = "Scenario",
##        size = "Z-score",
##        title = "DTL Top Inhibited Pathways (Z < -2)")   +
##   scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
##   scale_color_manual(values = scenario_colors)  +
##   scale_y_discrete(expand = expansion(mult = c(0.5, 0.01))) 
## 
## ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/dtl_top_inhibited_pathways_2.jpeg",
##        width = 27.5, height = 10, scale = 1)
```

#### Activated Pathways
```{r echo = F, eval = F}
dtl_pathways_activated_nebula <- dtl_pathways_merged_nebula %>%
  filter(z > 0) %>%
  arrange(dplyr::desc(neg_log_p))

dtl_pathways_activated_nebula$pathway <- reorder(dtl_pathways_activated_nebula$pathway, dtl_pathways_activated_nebula$neg_log_p)

dtl_top30_activated_nebula <- dtl_pathways_activated_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.03) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "DTL Top 30 Activated Pathways")   +
  scale_x_continuous(limits = c(0, 4), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_dtl_pathways_activated_nebula <- dtl_pathways_activated_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/dtl_top30_activated_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z > 2
dtl_pathways_activated_sig_nebula <- dtl_pathways_activated_nebula %>%
  filter(z > 2)
dtl_top30_activated_2_nebula <- dtl_pathways_activated_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(dtl_pathways_activated_sig_nebula$z), max(dtl_pathways_activated_sig_nebula$z))) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "DTL Top Activated Pathways (Z > 2)")   +
  scale_x_continuous(limits = c(0, 4), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(mult = c(0.05, 0.05))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/dtl_top_activated_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Z-Score Bar charts
```{r echo = F, eval = F}
## z-scores in bar charts
dtl_neg_pathways_merged_long_nebula <- dtl_pathways_merged_nebula %>% 
  filter(z < 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
dtl_neg_pathways_merged_long_nebula$name <- factor(dtl_neg_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

dtl_neg_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "DTL Top 10 Inhibited Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/dtl_top10_inhibited_pathway_zscores.jpeg",
       scale = 1.5)

dtl_pos_pathways_merged_long_nebula <- dtl_pathways_merged_nebula %>% 
  filter(z > 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
dtl_pos_pathways_merged_long_nebula$name <- factor(dtl_pos_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

dtl_pos_pathways_merged_long_nebula
dtl_pos_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "DTL Top 10 Activated Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/dtl_top10_activated_pathway_zscores.jpeg",
       scale = 1.5)
```

### FIB/VSMC/P

```{r echo = F}
fibvsmcp_pathways_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/fibvsmc_DiD_pathways_nebula.xls", skip = 1)
fibvsmcp_dapa_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/fibvsmc_dapa_pathways_nebula.xls", skip = 1)
fibvsmcp_placebo_nebula <- read_excel("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/IPA/nebula/fibvsmc_placebo_pathways_nebula.xls", skip = 1)

colnames(fibvsmcp_pathways_nebula) <- c("pathway", "neg_log_p", "ratio", "z", "genes")
colnames(fibvsmcp_dapa_nebula) <- c("pathway", "neg_log_p_dapa", "ratio_dapa", "z_dapa", "genes_dapa")
colnames(fibvsmcp_placebo_nebula) <- c("pathway", "neg_log_p_placebo", "ratio_placebo", "z_placebo", "genes_placebo")

fibvsmcp_pathways_merged_nebula <- fibvsmcp_pathways_nebula %>%
  full_join(fibvsmcp_dapa_nebula) %>% full_join(fibvsmcp_placebo_nebula) %>%
  dplyr::select(pathway, neg_log_p, z, neg_log_p_dapa, z_dapa, neg_log_p_placebo, z_placebo) %>%
  mutate(scenario = case_when(
    z_dapa > 0 & z_placebo > 0 & z_placebo < z_dapa ~ "Activated in both, more in D",
    z_dapa > 0 & z_placebo > 0 & z_placebo > z_dapa ~ "Activated in both, less in D",
    z_dapa > 0 & (z_placebo < 0  | z_placebo == 0) ~ "Activated in D, stable/inhibited in P",
    z_dapa < 0 & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo < z_dapa ~ "Inhibited in both, less in D",
    z_dapa < 0 & z_placebo < 0 & z_placebo > z_dapa ~ "Inhibited in both, more in D",
    (z_dapa == 0) & z_placebo > 0 ~ "Activated in P, stable/inhibited in D",
    (z_dapa == 0) & z_placebo < 0 ~ "Stable in D, inhibited in P",
    z_dapa < 0 & (z_placebo == 0) ~ "Stable in P, inhibited in D"))

fibvsmcp_pathways_merged_nebula$scenario <- factor(fibvsmcp_pathways_merged_nebula$scenario,
                                                   levels = c("Activated in D, stable/inhibited in P","Activated in both, more in D",
                                                              "Stable in D, inhibited in P","Inhibited in both, less in D",
                                                              "Activated in P, stable/inhibited in D","Activated in both, less in D",
                                                              "Stable in P, inhibited in D", "Inhibited in both, more in D"))
```

#### Inhibited Pathways
```{r echo = F}
fibvsmcp_pathways_inhibited_nebula <- fibvsmcp_pathways_merged_nebula %>%
  filter(z < 0) %>%
  arrange(dplyr::desc(neg_log_p))

fibvsmcp_pathways_inhibited_nebula$pathway <- reorder(fibvsmcp_pathways_inhibited_nebula$pathway, fibvsmcp_pathways_inhibited_nebula$neg_log_p)

fibvsmcp_top30_inhibited_nebula <- fibvsmcp_pathways_inhibited_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "FIB/VSMC/P Top 30 Inhibited Pathways")   +
  scale_x_continuous(limits = c(0, 3), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_fibvsmcp_pathways_inhibited_nebula <- fibvsmcp_pathways_inhibited_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmcp_top30_inhibited_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z < -2
fibvsmcp_pathways_inhibited_sig_nebula <- fibvsmcp_pathways_inhibited_nebula %>%
  filter(z < -2)
fibvsmcp_top30_inhibited_2_nebula <- fibvsmcp_pathways_inhibited_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(-fibvsmcp_pathways_inhibited_sig_nebula$z), max(-fibvsmcp_pathways_inhibited_sig_nebula$z)),
                        labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.01) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "FIB/VSMC/P Top Inhibited Pathways (Z < -2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors)  +
  scale_y_discrete(expand = expansion(mult = c(0.3, 0))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmcp_top_inhibited_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Activated Pathways
```{r echo = F}
fibvsmcp_pathways_activated_nebula <- fibvsmcp_pathways_merged_nebula %>%
  filter(z > 0) %>%
  arrange(dplyr::desc(neg_log_p))

fibvsmcp_pathways_activated_nebula$pathway <- reorder(fibvsmcp_pathways_activated_nebula$pathway, fibvsmcp_pathways_activated_nebula$neg_log_p)

fibvsmcp_top30_activated_nebula <- fibvsmcp_pathways_activated_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(0,10),labels = function(x) paste0("-", x)) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "FIB/VSMC/P Top 30 Activated Pathways")   +
  scale_x_continuous(limits = c(0, 3), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(add = 1)) 
n_fibvsmcp_pathways_activated_nebula <- fibvsmcp_pathways_activated_nebula %>%
  filter(neg_log_p > -log10(0.05)) %>%
  nrow()

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmcp_top30_activated_pathways_nebula.jpeg",
       width = 27.5, height = 14, scale = 1)

########### Limited to z > 2
fibvsmcp_pathways_activated_sig_nebula <- fibvsmcp_pathways_activated_nebula %>%
  filter(z > 2)
fibvsmcp_top30_activated_2_nebula <- fibvsmcp_pathways_activated_sig_nebula[1:30,] %>%
  ggplot(aes(x = neg_log_p, y = pathway, label = pathway)) +
  geom_point(aes(size = abs(z), color = scenario), alpha = 0.8) +
  scale_size_continuous(range = c(min(fibvsmcp_pathways_activated_sig_nebula$z), max(fibvsmcp_pathways_activated_sig_nebula$z))) +
  geom_vline(xintercept = -log10(0.05), linetype = "dashed") +
  geom_text(aes(group = pathway, color = scenario), hjust = 0, size = text1, nudge_x = 0.02) +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank(),
        axis.text.x = element_text(size = text3),
        axis.title = element_text(size = text3),
        axis.ticks.y = element_blank(), 
        legend.position = c(0.9,0.2),
        legend.background = element_blank(),
        legend.box.background = element_rect(color = "black"),
        legend.title = element_text(size = text2),
        legend.text = element_text(size = text2),
        title = element_text (size = text3)) +
  labs(x = "-log(p-value)",
       y = "Pathways",
       color = "Scenario",
       size = "Z-score",
       title = "FIB/VSMC/P Top Activated Pathways (Z > 2)")   +
  scale_x_continuous(limits = c(0, 1.5), expand = c(0, 0)) +
  scale_color_manual(values = scenario_colors) +
  scale_y_discrete(expand = expansion(mult = c(0.1, 0.025))) 

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Pathways/nebula/fibvsmcp_top_activated_pathways_2.jpeg",
       width = 27.5, height = 10, scale = 1)
```

#### Z-Score Bar charts
```{r echo = F, warning = F}
## z-scores in bar charts
fibvsmcp_neg_pathways_merged_long_nebula <- fibvsmcp_pathways_merged_nebula %>% 
  filter(z < 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
fibvsmcp_neg_pathways_merged_long_nebula$name <- factor(fibvsmcp_neg_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

fibvsmcp_neg_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 12, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "FIB/VSMC/P Top 10 Inhibited Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")
ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/fibvsmcp_top10_inhibited_pathway_zscores.jpeg",
       scale = 1.5)

fibvsmcp_pos_pathways_merged_long_nebula <- fibvsmcp_pathways_merged_nebula %>% 
  filter(z > 0) %>%
  head(10) %>%
  pivot_longer(cols = c("z", "z_dapa", "z_placebo")) %>%
  mutate(name = case_when(name == "z" ~ "DiD",
                          name == "z_dapa" ~ "Dapagliflozin",
                          name == "z_placebo" ~ "Placebo"),
         w = case_when(name == "DiD" ~ 0.5,
                       name == "Dapagliflozin" ~ 0.3,
                       name == "Placebo" ~ 0.3),
         a = case_when(name == "DiD" ~ 0.7,
                       name == "Dapagliflozin" ~ 0.8,
                       name == "Placebo" ~ 0.8))
fibvsmcp_pos_pathways_merged_long_nebula$name <- factor(fibvsmcp_pos_pathways_merged_long_nebula$name, levels = c("DiD", "Placebo", "Dapagliflozin"))

fibvsmcp_pos_pathways_merged_long_nebula
fibvsmcp_pos_pathways_merged_long_nebula %>%
  mutate(pathway = factor(pathway, levels = unique(pathway))) %>%
  ggplot(aes(x = pathway, y = value, fill = name)) +
  geom_bar(stat = "identity", position = "identity",
           aes(width=w, alpha = a)) +
  scale_alpha_continuous(range = c(0.7, 0.8)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1),
        panel.grid = element_blank(),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 12),
        plot.margin = margin(10, 10, 10, 10, unit = "pt")) +
  scale_fill_manual(values = c("Placebo" = "#f28482",
                               "Dapagliflozin" = "#669bbc",
                               "DiD" = "#bb8588")) +
  labs(y = "Z-score",
       x = NULL,
       fill = "Treatment",
       title = "FIB/VSMC/P Top 10 Activated Pathways") +
  guides(alpha = "none") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "darkgray")

ggsave("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/Figures/Z score bar plots/nebula/fibvsmcp_top10_activated_pathway_zscores.jpeg",
       scale = 1.5)
```


# Model comparison

* Model 1: Nested visit, zero inflation

* Model 2: No nested visit, zero inflation

```{r echo = F}
## PT
pt_nc <- c(pt_nonconverged_percentage_mod1,
           pt_nonconverged_percentage_mod2)
```


```{r echo = F}
## TAL
tal_nc <- c(tal_nonconverged_percentage_mod1,
            tal_nonconverged_percentage_mod2)
```

```{r echo = F}
## PC
pc_nc <- c(pc_nonconverged_percentage_mod1,
           pc_nonconverged_percentage_mod2)
```

```{r echo = F}
## Immune
immune_nc <- c(immune_nonconverged_percentage_mod1,
               immune_nonconverged_percentage_mod2)
```

```{r echo = F}
## IC
ic_nc <- c(ic_nonconverged_percentage_mod1,
           ic_nonconverged_percentage_mod2)

```

```{r echo = F}
## EC
ec_nc <- c(ec_nonconverged_percentage_mod1,
           ec_nonconverged_percentage_mod2)
```

```{r echo = F}
## FIB/VSMC/P
fibvsmcp_nc <- c(fibvsmcp_nonconverged_percentage_mod1,
                 fibvsmcp_nonconverged_percentage_mod2)
```


```{r echo = F}
mods <- c("Model 1 (Nested Visit, ZINB)",
          "Model 2 (No nested visit, ZINB)")
mods_df <- data.frame(mods, pt_nc, tal_nc, pc_nc, immune_nc, ic_nc, ec_nc, fibvsmcp_nc)
colnames(mods_df) <- c("Model", "PT", "TAL", "PC", "Immune", "IC", "EC", "FIB, VSMC/P")
kable(mods_df, digits = 2)
```

```{r echo = F}
prefixes <- c("pt", "tal", "pc", "ic", "ec", "fibvsmcp", "immune")
mods <- paste0("mod", 1:2)

base_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/model comparison/"

for (prefix in prefixes) {
  for (mod in mods) {
    obj_name <- paste0(prefix, "_nonconverged_genes_", mod)
    save_path <- file.path(base_path, paste0(obj_name, "_zi.rds"))
    saveRDS(get(obj_name), file = save_path)
  }
}
```

```{r echo = F}
sheet_list <- list()  # Store all data frames here
mods <- paste0("mod", 1:2)
for (prefix in prefixes) {
  for (mod in mods) {
    # Construct the name of the data frame (e.g., pt_emmeans_diff_DiD_mod1)
    df_name <- paste0(prefix, "_emmeans_diff_DiD_", mod)
    
    # Check if the data frame exists
    if (exists(df_name)) {
      df <- get(df_name)
      
      # Positive top 20
      pos_top20 <- df %>%
        arrange(`Expr p-value`) %>%
        filter(`Expr Other` > 0) %>%
        head(20)
      
      sheet_name_pos <- paste0(toupper(prefix), "_", mod, "_POS_Top20")
      sheet_list[[sheet_name_pos]] <- pos_top20
      
      # Negative top 20
      neg_top20 <- df %>%
        arrange((`Expr p-value`)) %>%
        filter(`Expr Other` < 0) %>%
        head(20)
      
      sheet_name_neg <- paste0(toupper(prefix), "_", mod, "_NEG_Top20")
      sheet_list[[sheet_name_neg]] <- neg_top20
    }
  }
}

# Write all to an Excel file
library(writexl)

write_xlsx(sheet_list, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/ATTEMPT/Results/model comparison/DiD_Top20_By_CellType_Mod_zi.xlsx")
```


# Non-intuitive transcripts

```{r echo = F}
vars <- c("mgfr_jodal", "mgfr_jodal_bsa", "hba1c", "weight")
celltype_list <- c("pt", "tal", "pc", "ic", "fibvsmcp")

# Create fallback mapping
var_fallback_map <- list(
  "mgfr_jodal" = c("gfr_raw_plasma", "mgfr_jodal"),
  "mgfr_jodal_bsa" = c("gfr_bsa_plasma", "mgfr_jodal_bsa"),
  "hba1c" = c("hba1c"),
  "weight" = c("weight")
)

# Create an empty list to store results
croc_res_select_vars <- list()

# Loop through combinations
for (ct in celltype_list) {
  for (v in vars) {
    # Get list of variable names to try
    vars_to_try <- var_fallback_map[[v]]
    
    # Construct S3 path
    s3_path <- paste0("/associations/nebula/", v, "/croc_", ct, "_", v, "_select_transcripts.rds")
    
    # Try each variable name until one works
    success <- FALSE
    for (var_name in vars_to_try) {
      
      message("Trying to read: ", s3_path)
      result <- tryCatch({
        rds_obj <- s3readRDS(s3_path, bucket = "attempt", region = "")
        
        # Process results
        processed <- process_nebula_results(rds_obj, pval_col = paste0("p_", var_name))$results
        
        # Select and rename columns to standardize them
        processed <- processed %>%
          dplyr::select(
            logFC = matches(paste0("logFC_", var_name)),
            p_value = matches(paste0("p_", var_name)),
            fdr,
            Gene,
            gene_id,
            gene
          )
        
        # Add cell type and variable columns
        processed$cell_type <- ct
        processed$variable <- v
        
        # Store in list with descriptive name
        name <- paste(ct, v, sep = "_")
        croc_res_select_vars[[name]] <- processed
        
        success <- TRUE
        message("Successfully read: ", s3_path)
        "success"
        
      }, warning = function(w) {
        message("Warning encountered: ", w$message)
        message("Trying alternative variable name...")
        "warning"
      }, error = function(e) {
        message("Error encountered: ", e$message)
        message("Trying alternative variable name...")
        "error"
      })
      
      if (result == "success") {
        break
      }
    }
    
    if (!success) {
      message(paste("Could not read data for cell type:", ct, "and variable:", v))
    }
  }
}

# Combine all dataframes into one
combined_df <- do.call(rbind, croc_res_select_vars)
rownames(combined_df) <- NULL

combined_df

croc_res_select_vars$tal_mgfr_jodal

# heatmap

# combined_df %>%
#   filter(variable == "mgfr_jodal") %>%
#   ggplot(aes(x = Gene, y = toupper(cell_type), fill = logFC)) +
#   geom_tile()
# 
# combined_df %>%
#   filter(variable == "hba1c") %>%
#   ggplot(aes(x = Gene, y = toupper(cell_type), fill = logFC)) +
#   geom_tile()


```

```{r echo = F}
# ATTEMPT BL

vars <- c("mgfr_jodal", "mgfr_jodal_bsa", "hba1c", "weight")
celltype_list <- c("pt", "tal", "pc", "ic", "fibvsmcp")

# Create fallback mapping
var_fallback_map <- list(
  "mgfr_jodal" = c("gfr_raw_plasma", "mgfr_jodal"),
  "mgfr_jodal_bsa" = c("gfr_bsa_plasma", "mgfr_jodal_bsa"),
  "hba1c" = c("hba1c"),
  "weight" = c("weight")
)

# Create an empty list to store results
attempt_res_select_vars <- list()

# Loop through combinations
for (ct in celltype_list) {
  for (v in vars) {
    # Get list of variable names to try
    vars_to_try <- var_fallback_map[[v]]
    
    # Construct S3 path
    s3_path <- paste0("/associations/nebula/", v, "/attempt_", ct, "_", v, "_select_transcripts.rds")
    
    # Try each variable name until one works
    success <- FALSE
    for (var_name in vars_to_try) {
      
      message("Trying to read: ", s3_path)
      result <- tryCatch({
        rds_obj <- s3readRDS(s3_path, bucket = "attempt", region = "")
        
        # Process results
        processed <- process_nebula_results(rds_obj, pval_col = paste0("p_", var_name))$results
        
        # Select and rename columns to standardize them
        processed <- processed %>%
          dplyr::select(
            logFC = matches(paste0("logFC_", var_name)),
            p_value = matches(paste0("p_", var_name)),
            fdr,
            Gene,
            gene_id,
            gene
          )
        
        # Add cell type and variable columns
        processed$cell_type <- ct
        processed$variable <- v
        
        # Store in list with descriptive name
        name <- paste(ct, v, sep = "_")
        attempt_res_select_vars[[name]] <- processed
        
        success <- TRUE
        message("Successfully read: ", s3_path)
        "success"
        
      }, warning = function(w) {
        message("Warning encountered: ", w$message)
        message("Trying alternative variable name...")
        "warning"
      }, error = function(e) {
        message("Error encountered: ", e$message)
        message("Trying alternative variable name...")
        "error"
      })
      
      if (result == "success") {
        break
      }
    }
    
    if (!success) {
      message(paste("Could not read data for cell type:", ct, "and variable:", v))
    }
  }
}

# Combine all dataframes into one
combined_df <- do.call(rbind, attempt_res_select_vars)
rownames(combined_df) <- NULL

combined_df

attempt_res_select_vars$tal_mgfr_jodal

# heatmap

combined_df %>%
  filter(variable == "mgfr_jodal") %>%
  ggplot(aes(x = Gene, y = toupper(cell_type), fill = logFC)) +
  geom_tile()

combined_df %>%
  filter(variable == "hba1c") %>%
  ggplot(aes(x = Gene, y = toupper(cell_type), fill = logFC)) +
  geom_tile() +
  scale_fill_gradient2(low = "#89c2d9", mid = "white", high = "#ee7674", midpoint = 0) +
  theme_minimal() +
  theme(legend.title.position = "top",
        legend.title = element_text(hjust = 0.5, size = 10),
        legend.position = "top",
        panel.grid = element_blank(),
        text = element_text(size = 15),
        legend.text = element_text(size = 10),
        axis.text.x = element_text(angle = 30, hjust = 1)) +
  labs(x = NULL, y = NULL)


```