---
title: "ATTEMPT Plasma SOMA Scan Analysis"
author: "Ye Ji Choi and Laura Pyle"
date: "`r lubridate::today()`"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
    message: false
    warning: false
---

```{r echo = F, include = F}
library(jsonlite)
library(aws.s3)
library(dplyr)
library(ggplot2)
library(knitr)
library(ensr)
library(kableExtra)
library(ggrepel)
library(purrr)
library(tidyverse)
library(limma)
library(arsenal)
library(fgsea)
library(correlation)
library(psych)
library(openxlsx)
library(SomaPlotr)
library(lme4)
library(lmerTest)

# specify user for paths
user <- Sys.info()[["user"]]

if (user == "choiyej") {
  root_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/"
  git_path <- "/Users/choiyej/GitHub/CHCO-Code/Petter Bjornstad/"
} else if (user == "pylell") {
  root_path <- "/Users/pylell/Library/CloudStorage/OneDrive-SharedLibraries-UW/Bjornstad/Biostatistics Core Shared Drive/"
  git_path <- "/Users/pylell/Documents/GitHub/CHCO-Code/Petter Bjornstad/"
} else {
  stop("Unknown user: please specify root path for this user.")
}

source(file.path(git_path, "ATTEMPT/attempt_functions.R"))
source(file.path(git_path, "Resources/YC/R Functions/correlation_function.R"))

bg_path <- file.path(root_path, "GSEA/")
load(file.path(root_path, "KNIGHT/Somalogic data/analytes.Rdata"))

# load urine creatinine
urine_creat <- read.xlsx(file.path(root_path, 'ATTEMPT/Data Raw/Urine Proteomics Sample Manifest Jun 25 2025.xlsx'), sheet = "Working")
names(urine_creat) <- c("position", "record_id", "visit", "box", "creatinine_u_proteomics", "comments")
# SOMA analytes names/info
load(file.path(root_path, "Data Harmonization/Combined SomaScan/analytes_2.Rdata"))

```

```{r include = F}
## Create an S3 client
keys <- fromJSON("/Users/choiyej/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Bjornstad Pyle Lab/keys.json")

Sys.setenv(
  "AWS_ACCESS_KEY_ID" = keys$MY_ACCESS_KEY,
  "AWS_SECRET_ACCESS_KEY" = keys$MY_SECRET_KEY,
  "AWS_DEFAULT_REGION" = "",
  "AWS_REGION" = "",
  "AWS_S3_ENDPOINT" = "s3.kopah.uw.edu"
)
```


```{r echo = F}
harm_dat_raw <- read.csv(file.path(root_path, "Data Harmonization/Data Clean/soma_harmonized_dataset.csv"), na.strings = "") 

attempt_redcap <- harm_dat_raw %>% filter(study == "ATTEMPT") %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = c(record_id, visit)) %>%
  dplyr::mutate(race_ethnicity_condensed = case_when(race == "White" &
                                                       ethnicity == "Not Hispanic or Latino" ~ "Not Hispanic or Latino White",
                                                     race == "Black or African American" &
                                                       ethnicity == "Not Hispanic or Latino" ~ "Not Hispanic or Latino Black",
                                                     ethnicity == "Hispanic or Latino" ~ "Hispanic or Latino",
                                                     T ~ "Not Hispanic or Latino Other")) %>%
  arrange(record_id) %>%
  dplyr::select(-hba1c, -starts_with("seq."))

attempt_redcap_denver <- attempt_redcap %>%
  filter(grepl("^3", record_id)) %>%
  mutate(visit = case_when(visit == "baseline" ~ 0,
                           visit == "4_weeks_post" ~ 4,
                           visit == "4_months_post" ~ 16,
                           visit == "screening"  ~ -4,
                           visit == "follow_up" ~ 18),
         record_id = as.integer(record_id)) %>%
  dplyr::select(-c(ethnicity, bmi, gfr_raw_plasma, gfr_bsa_plasma, date, sex, mri_date, PWV,
                   creatinine_s, cystatin_c_s, temp, pulse, height, avg_c_r2, avg_k_r2, 
                   sbp, dbp, hct, age, weight)) %>%
  rowwise() %>%
  mutate(avg_c_t1 = mean(c(t1_r_cortex, t1_l_cortex), na.rm = T),
         avg_k_t1 = mean(c(t1_r_kidney, t1_l_kidney), na.rm = T),
         tkv = (volume_left + volume_right)) %>%
  ungroup() %>%
  dplyr::rename(subject_id = record_id)

# clinical dataset from Antoine (merged version)
s3load("Clinical Data/ATTEMPT_AC.RData", "attempt", region = "")
attempt_dat <- merged_data
attempt_dat[attempt_dat == ""] <- NA
attempt_dat <- attempt_dat %>%
  filter(visit %in% c("baseline", "4_weeks_post", "4_months_post", "screening", "follow_up")) %>%
  mutate(visit = case_when(visit == "baseline" ~ 0,
                           visit == "4_weeks_post" ~ 4,
                           visit == "4_months_post" ~ 16,
                           visit == "screening"  ~ -4,
                           visit == "follow_up" ~ 18),
         record_id = as.integer(record_id)) %>%
  dplyr::rename(subject_id = record_id,
                treatment = treatment_arm)

# extract IDs with biopsy
attempt_clean_so_metadata <- s3readRDS("cleaned_data/attempt_clean_so_metadata.rds", "attempt", region = "")
attempt_biopsy_yn <- attempt_clean_so_metadata %>%
  dplyr::select(subject_id, visit) %>%
  distinct(subject_id, visit, .keep_all = T) %>%
  mutate(visit = case_when(visit == "PRE" ~ 0,
                           visit == "POST" ~ 16),
         biopsy_yn = "Yes")
attempt_biopsy_yn <- attempt_biopsy_yn %>%
  rbind(attempt_biopsy_yn %>%
          filter(visit == 0) %>%
          mutate(visit = -4))

# merge REDCap version (for Denver) and dataset from Antoine
attempt_dat <- left_join(attempt_dat, attempt_redcap_denver) %>%
  left_join(attempt_biopsy_yn) %>%
  mutate(biopsy_yn = case_when(biopsy_yn == "Yes" ~ "Yes",
                               T ~ "No"))
attempt_dat$treatment <- factor(attempt_dat$treatment, levels = c("Placebo", "Dapagliflozin 5mg"))
```

```{r echo = F}
harm_dat <- harm_dat_raw %>%
  filter(study == "ATTEMPT") %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = c(record_id, visit)) %>%
  mutate(visit = case_when(visit == "baseline" ~ 0,
                           visit == "4_weeks_post" ~ 4,
                           visit == "4_months_post" ~ 16,
                           visit == "screening"  ~ -4,
                           visit == "follow_up" ~ 18),
         record_id_visit = paste0(record_id, "_", visit),
         treatment_arm = case_when(treatment_arm == "Placebo" ~ "Placebo",
                                   T ~ "Dapagliflozin")) %>%
  filter(visit %in% c(0, 16))

# load SOMA and exclude the 5 with mix up
soma <- harm_dat %>%
  filter(!is.na(seq.10030.8)) %>%
  filter(urine_creat_proteomics > 1) # filtering out those with extremely low creatinine (mix up with serum)

soma$visit <- factor(soma$visit, levels = c(0, 16), label = c("PRE", "POST"))
```

# SOMA

```{r echo = F, results='asis'}
summary(arsenal::tableby(visit ~ age + sex + bmi + diabetes_duration, 
                         data = soma, strata = treatment_arm), test = F, 
        labelTranslations = c("age" = "Age", "sex" = "Sex", "acr_u" = "UACR", "bmi" = "BMI", "diabetes_duration" = "Diabetes duration"))
```

## Placebo
```{r echo = F}
placebo_res_plasma <- run_limma_proteomics(data = soma,
                                           analyte_info = analytes_attempt,
                                           treatment = "Placebo",
                                           feature_suffix = "",
                                           model_type = "within_treatment")
```

```{r echo = F}
plot_volcano_proteomics(data = placebo_res_plasma$results_annotated, fc = "logFC",
                        p_col = "P.Value",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(p-value)",
                        positive_text = "Positive after placebo treatment",
                        negative_text = "Negative after placebo treatment",
                        formula = "visit",
                        file_suffix = "_placebo_plasma_proteomics")
plot_volcano_proteomics(data = placebo_res_plasma$results_annotated, fc = "logFC",
                        p_col = "adj.P.Val",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(adj.p-value)",
                        positive_text = "Positive after placebo treatment",
                        negative_text = "Negative after placebo treatment",
                        formula = "visit",
                        file_suffix = "_placebo_plasma_proteomics_adjp")
```

## Dapagliflozin
```{r echo = F}
dapa_res_plasma <- run_limma_proteomics(data = soma,
                                        analyte_info = analytes_attempt,
                                        treatment = "Dapagliflozin",
                                        feature_suffix = "",
                                        model_type = "within_treatment")
```

```{r echo = F}
plot_volcano_proteomics(data = dapa_res_plasma$results_annotated, fc = "logFC",
                        p_col = "P.Value",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(p-value)",
                        positive_text = "Positive after dapagliflozin treatment",
                        negative_text = "Negative after dapagliflozin treatment",
                        formula = "visit",
                        file_suffix = "_dapa_plasma_proteomics")
plot_volcano_proteomics(data = dapa_res_plasma$results_annotated, fc = "logFC",
                        p_col = "adj.P.Val",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(adj.p-value)",
                        positive_text = "Positive after dapagliflozin treatment",
                        negative_text = "Negative after dapagliflozin treatment",
                        formula = "visit",
                        file_suffix = "_dapa_plasma_proteomics_adjp")
```

## PRE (Placebo vs. Dapa)
```{r echo = F}
pre_res_plasma <- run_limma_proteomics(data = soma,
                                       analyte_info = analytes_attempt,
                                       visit = "PRE",
                                       feature_suffix = "",
                                       model_type = "within_visit")
```

```{r echo = F}
plot_volcano_proteomics(data = pre_res_plasma$results_annotated, fc = "logFC",
                        p_col = "P.Value",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(p-value)",
                        positive_text = "Positive in dapagliflozin\ncompared to placebo (at baseline)",
                        negative_text = "Negative in dapagliflozin\ncompared to placebo (at baseline)",
                        formula = "treatment",
                        file_suffix = "_pre_plasma_proteomics")
plot_volcano_proteomics(data = pre_res_plasma$results_annotated, fc = "logFC",
                        p_col = "adj.P.Val",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(adj.p-value)",
                        positive_text = "Positive in dapagliflozin\ncompared to placebo (at baseline)",
                        negative_text = "Negative in dapagliflozin\ncompared to placebo (at baseline)",
                        formula = "treatment",
                        file_suffix = "_pre_plasma_proteomics_adjp")
```

## POST (Placebo vs. Dapa)
```{r echo = F}
post_res_plasma <- run_limma_proteomics(data = soma,
                                        analyte_info = analytes_attempt,
                                        visit = "POST",
                                        feature_suffix = "",
                                        model_type = "within_visit")
```

```{r echo = F}
plot_volcano_proteomics(data = post_res_plasma$results_annotated, fc = "logFC",
                        p_col = "P.Value",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(p-value)",
                        positive_text = "Positive in dapagliflozin\ncompared to placebo (at follow-up)",
                        negative_text = "Negative in dapagliflozin\ncompared to placebo (at follow-up)",
                        formula = "treatment",
                        file_suffix = "_post_plasma_proteomics")
plot_volcano_proteomics(data = post_res_plasma$results_annotated, fc = "logFC",
                        p_col = "adj.P.Val",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(adj.p-value)",
                        positive_text = "Positive in dapagliflozin\ncompared to placebo (at follow-up)",
                        negative_text = "Negative in dapagliflozin\ncompared to placebo (at follow-up)",
                        formula = "treatment",
                        file_suffix = "_post_plasma_proteomics_adjp")
```

# DiD
```{r echo = F}
# using creatinine adjusted proteins
did_res_plasma <- run_limma_proteomics(data = soma,
                                       analyte_info = analytes_attempt,
                                       feature_suffix = "",
                                       model_type = "interaction")

did_res_plasma_mixed <- run_limma_proteomics(data = soma,
                                             analyte_info = analytes_attempt,
                                             feature_suffix = "",
                                             model_type = "interaction_random")
# 6 out of 7289 singularity warning (0.1%)
```

```{r echo = F}
plot_volcano_proteomics(data = did_res_plasma$results_annotated, 
                        fc = "logFC",
                        p_col = "P.Value",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(p-value)",
                        positive_text = "Positive DiD",
                        negative_text = "Negative DiD",
                        formula = "treatment:visit",
                        file_suffix = "_DiD_plasma_proteomics")

plot_volcano_proteomics(data = did_res_plasma$results_annotated, 
                        fc = "logFC",
                        p_col = "adj.P.Val",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(adj.p-value)",
                        positive_text = "Positive DiD",
                        negative_text = "Negative DiD",
                        formula = "treatment:visit",
                        file_suffix = "_DiD_plasma_proteomics_adjp")

plot_volcano_proteomics(data = did_res_plasma_mixed$results_annotated, 
                        fc = "logFC",
                        p_col = "P.Value",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(p-value)",
                        positive_text = "Positive DiD",
                        negative_text = "Negative DiD",
                        formula = "treatment:visit + (1|subject)",
                        file_suffix = "_DiD_plasma_proteomics_mixed")

plot_volcano_proteomics(data = did_res_plasma_mixed$results_annotated, 
                        fc = "logFC",
                        p_col = "adj.P.Val",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(adj.p-value)",
                        positive_text = "Positive DiD",
                        negative_text = "Negative DiD",
                        formula = "treatment:visit + (1|subject)",
                        file_suffix = "_DiD_plasma_proteomics_adjp_mixed")
```

## GSEA (fgsea)

```{r echo = F}
soma_DiD_fgsea <- run_fgsea_analysis(bg_path = bg_path,
                                     results_annotated = did_res_plasma_mixed$results_annotated,
                                     stat_col = "statistic")
soma_DiD_fgsea$summary
```

```{r echo = F}
# KEGG
plot_fgsea_transpose(soma_DiD_fgsea$kegg, 
                     title = "SOMA DiD Top 30 KEGG",
                     xmax = 30)
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Pathways/plasma_SOMA_DiD_KEGG.jpeg"),
       width = 27.5, height = 14, scale = 1)
# REACTOME
plot_fgsea_transpose(soma_DiD_fgsea$reactome, 
                     title = "SOMA DiD Top 30 REACTOME", 
                     xmax = 30)
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Pathways/plasma_SOMA_DiD_REACTOME.jpeg"),
       width = 27.5, height = 14, scale = 1)
# GO
plot_fgsea_transpose(soma_DiD_fgsea$go, 
                     title = "SOMA DiD Top 30 GO", 
                     xmax = 30)
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Pathways/plasma_SOMA_DiD_GO.jpeg"),
       width = 27.5, height = 14, scale = 1)
```

## Correlations with clinical variables

### mGFR

```{r echo = F, warning=FALSE, quiet = TRUE}
# mGFR 
plasma_soma_mgfr <- soma_corr(
  clinical_raw = attempt_dat,
  soma_raw     = soma,
  did_df       = did_res_plasma_mixed$results_annotated,
  analytes_info= analytes_attempt,
  clinical_var = "mgfr_jodal",
  feature_suffix = "",
  proper_name = "mGFR",
  pre_visit = -4
)

# correlation table
plasma_soma_mgfr$correlation_table

# plots
plasma_soma_mgfr$plot_all
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Volcano Plots/Correlations/volcano_mixed_spearman_plasma_mgfr.jpeg"),
       plasma_soma_mgfr$plot_all, width = 10, height = 7)
```

### mGFR adjusted

```{r echo = F, warning=FALSE}
plasma_soma_mgfr_adj <- soma_corr(
  clinical_raw = attempt_dat,
  soma_raw     = soma,
  did_df       = did_res_plasma_mixed$results_annotated,
  analytes_info= analytes_attempt,
  clinical_var = "mgfr_jodal_bsa",
  feature_suffix = "",
  proper_name = "mGFR (BSA)",
  pre_visit = -4
)

# correlation table
plasma_soma_mgfr_adj$correlation_table

# plots
plasma_soma_mgfr_adj$plot_all
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Volcano Plots/Correlations/volcano_mixed_spearman_plasma_mgfr_bsa.jpeg"),
       plasma_soma_mgfr_adj$plot_all, width = 10, height = 7)
```

### HbA1c

```{r echo = F, warning=FALSE}
plasma_soma_hba1c <- soma_corr(
  clinical_raw = attempt_dat,
  soma_raw     = soma,
  did_df       = did_res_plasma_mixed$results_annotated,
  analytes_info= analytes_attempt,
  clinical_var = "hba1c",
  feature_suffix = "",
  proper_name = "HbA1c"
)

# correlation table
plasma_soma_hba1c$correlation_table

# plots
plasma_soma_hba1c$plot_all
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Volcano Plots/Correlations/volcano_mixed_spearman_plasma_hba1c.jpeg"),
       plasma_soma_hba1c$plot_all, width = 10, height = 7)
```

### TIR

```{r echo = F, warning=FALSE}
plasma_soma_tir <- soma_corr(
  clinical_raw = attempt_dat,
  soma_raw     = soma,
  did_df       = did_res_plasma_mixed$results_annotated,
  analytes_info= analytes_attempt,
  clinical_var = "cgm_tir",
  feature_suffix = "",
  proper_name = "TIR"
)

# correlation table
plasma_soma_tir$correlation_table

# plots
plasma_soma_tir$plot_all
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Volcano Plots/Correlations/volcano_mixed_spearman_plasma_tir.jpeg"),
       plasma_soma_tir$plot_all, width = 10, height = 7)
```

### Weight

```{r echo = F, warning=FALSE}
plasma_soma_weight <- soma_corr(
  clinical_raw = attempt_dat,
  soma_raw     = soma,
  did_df       = did_res_plasma_mixed$results_annotated,
  analytes_info= analytes_attempt,
  clinical_var = "weight",
  feature_suffix = "",
  proper_name = "Weight"
)

# correlation table
plasma_soma_weight$correlation_table

# plots
plasma_soma_weight$plot_all
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Volcano Plots/Correlations/volcano_mixed_spearman_plasma_weight.jpeg"),
       plasma_soma_weight$plot_all, width = 10, height = 7)
```

### PWV

```{r echo = F, warning=FALSE}
plasma_soma_PWV <- soma_corr(
  clinical_raw = attempt_dat,
  soma_raw     = soma,
  did_df       = did_res_plasma_mixed$results_annotated,
  analytes_info= analytes_attempt,
  clinical_var = "PWV",
  feature_suffix = "",
  proper_name = "PWV",
  pre_visit = -4
)

# correlation table
plasma_soma_PWV$correlation_table

# plots
plasma_soma_PWV$plot_all
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Volcano Plots/Correlations/volcano_mixed_spearman_plasma_PWV.jpeg"),
       plasma_soma_PWV$plot_all, width = 10, height = 7)
```

### Cortical R2*

```{r echo = F, warning=FALSE}
plasma_soma_avg_c_r2 <- soma_corr(
  clinical_raw = attempt_dat,
  soma_raw     = soma,
  did_df       = did_res_plasma_mixed$results_annotated,
  analytes_info= analytes_attempt,
  clinical_var = "avg_c_r2",
  feature_suffix = "",
  proper_name = "Cortical R2*",
  pre_visit = -4
)

# correlation table
plasma_soma_avg_c_r2$correlation_table

# plots
plasma_soma_avg_c_r2$plot_all
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Volcano Plots/Correlations/volcano_mixed_spearman_plasma_avg_c_r2.jpeg"),
       plasma_soma_avg_c_r2$plot_all, width = 10, height = 7)
```

### Kidney R2*

```{r echo = F, warning=FALSE}
plasma_soma_avg_k_r2 <- soma_corr(
  clinical_raw = attempt_dat,
  soma_raw     = soma,
  did_df       = did_res_plasma_mixed$results_annotated,
  analytes_info= analytes_attempt,
  clinical_var = "avg_k_r2",
  feature_suffix = "",
  proper_name = "Kidney R2*",
  pre_visit = -4
)

# correlation table
plasma_soma_avg_k_r2$correlation_table

# plots
plasma_soma_avg_k_r2$plot_all
ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Proteomics/Volcano Plots/Correlations/volcano_mixed_spearman_plasma_avg_k_r2.jpeg"),
       plasma_soma_avg_k_r2$plot_all, width = 10, height = 7)
```

```{r echo = F}
# # write correlation results to file
# wb <- createWorkbook()
# addWorksheet(wb,"Change in mgfr_si")
# writeData(wb,"Change in mgfr_si",corr_delta_mgfr_si_mat,rowNames = F)
# addWorksheet(wb,"Change in mgfr_si_adjusted")
# writeData(wb,"Change in mgfr_si_adjusted",corr_delta_mgfr_si_adjusted_mat,rowNames = F)
# addWorksheet(wb,"Change in HbA1c")
# writeData(wb,"Change in HbA1c",corr_delta_hba1c_percent_mat,rowNames = F)
# addWorksheet(wb,"Change in PWV")
# writeData(wb,"Change in PWV",corr_delta_PWV_mat,rowNames = F)
# 
# saveWorkbook(wb,file.path(root_path, "ATTEMPT/Results/Somascan/Somascan_clinical_correlations.xlsx"),overwrite = TRUE)
```
