---
title: "ATTEMPT Plasma SOMA Scan Analysis"
author: "Ye Ji Choi and Laura Pyle"
date: "`r lubridate::today()`"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
    message: false
    warning: false
---

```{r echo = F, include = F}
library(dplyr)
library(ggplot2)
library(knitr)
library(ensr)
library(kableExtra)
library(ggrepel)
library(purrr)
library(tidyverse)
library(limma)
library(arsenal)
library(fgsea)
library(correlation)
library(psych)
library(openxlsx)
library(SomaPlotr)

# specify user for paths
user <- Sys.info()[["user"]]

if (user == "choiyej") {
  root_path <- "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/"
  git_path <- "/Users/choiyej/GitHub/CHCO-Code/Petter Bjornstad/"
} else if (user == "pylell") {
  root_path <- "/Users/pylell/Library/CloudStorage/OneDrive-SharedLibraries-UW/Bjornstad/Biostatistics Core Shared Drive/"
  git_path <- "/Users/pylell/Documents/GitHub/CHCO-Code/Petter Bjornstad/"
} else {
  stop("Unknown user: please specify root path for this user.")
}

bg_path <- file.path(root_path, "GSEA/")
load(file.path(root_path, "KNIGHT/Somalogic data/analytes.Rdata"))
```


```{r echo = F, include = F}
# SOMA analytes names/info
load(file.path(root_path, "Data Harmonization/Combined SomaScan/analytes_2.Rdata"))
```

```{r echo = F}
harm_dat_raw <- read.csv(file.path(root_path, "Data Harmonization/Data Clean/soma_harmonized_dataset.csv"), na.strings = "") 

harm_dat <- harm_dat_raw %>%
  filter(study == "ATTEMPT") %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = c(record_id, visit)) %>%
  mutate(visit = case_when(visit == "baseline" ~ 0,
                           visit == "4_weeks_post" ~ 4,
                           visit == "4_months_post" ~ 16,
                           visit == "screening"  ~ -4,
                           visit == "follow_up" ~ 18),
         record_id_visit = paste0(record_id, "_", visit),
         treatment_arm = case_when(treatment_arm == "Placebo" ~ "Placebo",
                                   T ~ "Dapagliflozin")) %>%
  filter(visit %in% c(0, 16))

# load SOMA and exclude the 5 with mix up
soma <- harm_dat %>%
  filter(!is.na(seq.10030.8)) %>%
  filter(urine_creat_proteomics > 1) # filtering out those with extremely low creatinine (mix up with serum)

soma$visit <- factor(soma$visit, levels = c(0, 16), label = c("PRE", "POST"))
```

# SOMA

```{r echo = F, results='asis'}
summary(arsenal::tableby(visit ~ age + sex + bmi + diabetes_duration, 
                         data = soma, strata = treatment_arm), test = F, 
        labelTranslations = c("age" = "Age", "sex" = "Sex", "acr_u" = "UACR", "bmi" = "BMI", "diabetes_duration" = "Diabetes duration"))
```

## Placebo
#### Top 20 DE
```{r echo = F}
placebo_res_plasma <- run_limma_proteomics(data = soma,
                                     analyte_info = analytes_attempt,
                                     treatment = "Placebo",
                                     feature_suffix = "_urine_cradj",
                                    model_type = "within_treatment")
```

```{r echo = F}
plot_volcano_proteomics(data = placebo_res$results_annotated, fc = "logFC",
             p_col = "P.Value",
             title = NULL,
             x_axis = "LogFC", 
             y_axis = "-log10(p-value)",
             positive_text = "Positive after placebo treatment",
             negative_text = "Negative after placebo treatment",
             formula = "visit",
             file_suffix = "_placebo_urine_proteomics")
plot_volcano_proteomics(data = placebo_res$results_annotated, fc = "logFC",
             p_col = "adj.P.Val",
             title = NULL,
             x_axis = "LogFC", 
             y_axis = "-log10(adj.p-value)",
             positive_text = "Positive after placebo treatment",
             negative_text = "Negative after placebo treatment",
             formula = "visit",
             file_suffix = "_placebo_urine_proteomics_adjp")
```

## Dapagliflozin
#### Top 20 DE
```{r echo = F}
# filter soma scan data to baseline data only and log transform
soma_dapa <- soma %>% arrange(record_id) %>%
  filter(treatment_arm == "Dapagliflozin") 

soma_dapa_filtered <- soma_dapa %>% 
  arrange(record_id) %>%
  remove_rownames() %>% column_to_rownames(var = "record_id_visit") %>%
  dplyr::select(starts_with("seq"))

y <- t(soma_dapa_filtered)
y <- log2(y)

# Design matrix
cond = as.factor(soma_dapa$visit)
design_mat <- model.matrix(~0 + visit, data = soma_dapa)
colnames(design_mat) = gsub("visit","",colnames(design_mat))
# Fit
contrast = makeContrasts(contrasts = c("POST-PRE"), levels = design_mat)
fit <- lmFit(y, design_mat)
fit <- contrasts.fit(fit, contrasts = contrast)
fit <- eBayes(fit)
res <- topTable(fit, coef = 1, number = dim(y)[1], sort.by = "p")
res$EntrezGeneSymbol <- analytes_attempt$EntrezGeneSymbol[match(rownames(res), analytes_attempt$AptName)]
res$TargetFullName <- analytes_attempt$TargetFullName[match(rownames(res), analytes_attempt$AptName)]
kbl(head(res, 50)) %>%
  kable_paper() %>%
  scroll_box(width = "100%", height = "500px")
res_save <- res %>%
  rownames_to_column("AptName") %>%
  dplyr::select(-c(EntrezGeneSymbol, TargetFullName)) %>%
  left_join(analytes_attempt, by = "AptName")
```

```{r echo = F}
plot_volcano(res, "adj.P.Val",
             "Dapagliflozin (PRE/POST DE)", 
             "LogFC", 
             "-log10(adj.p-value)")

plot_volcano(res, "P.Value",
             "Dapagliflozin (PRE/POST DE)", 
             "LogFC", 
             "-log10(p-value)")
```

## PRE (Placebo vs. Dapa)
#### Top 20 DE
```{r echo = F}
# filter soma scan data to baseline data only and log transform
soma_pre <- soma %>% arrange(record_id) %>%
  filter(visit == "PRE") 

soma_pre_filtered <- soma_pre %>% 
  arrange(record_id) %>%
  remove_rownames() %>% column_to_rownames(var = "record_id_visit") %>%
  dplyr::select(starts_with("seq"))

y <- t(soma_pre_filtered)
y <- log2(y)

# Design matrix
cond = as.factor(soma_pre$treatment_arm)
design_mat <- model.matrix(~0 + treatment_arm, data = soma_pre)
colnames(design_mat) = gsub("treatment_arm","",colnames(design_mat))
# Fit
contrast = makeContrasts(contrasts = c("Dapagliflozin-Placebo"), levels = design_mat)
fit <- lmFit(y, design_mat)
fit <- contrasts.fit(fit, contrasts = contrast)
fit <- eBayes(fit)
res <- topTable(fit, coef = 1, number = dim(y)[1], sort.by = "p")
res$EntrezGeneSymbol <- analytes_attempt$EntrezGeneSymbol[match(rownames(res), analytes_attempt$AptName)]
res$TargetFullName <- analytes_attempt$TargetFullName[match(rownames(res), analytes_attempt$AptName)]
kbl(head(res, 50)) %>%
  kable_paper() %>%
  scroll_box(width = "100%", height = "500px")
res_save <- res %>%
  rownames_to_column("AptName") %>%
  dplyr::select(-c(EntrezGeneSymbol, TargetFullName)) %>%
  left_join(analytes_attempt, by = "AptName")
```

```{r echo = F}
plot_volcano(res, "adj.P.Val",
             "PRE (Placebo / Dapa DE)", 
             "LogFC", 
             "-log10(adj.p-value)")

plot_volcano(res, "P.Value",
             "PRE (Placebo / Dapa DE)", 
             "LogFC", 
             "-log10(p-value)")
```

## POST (Placebo vs. Dapa)
#### Top 20 DE
```{r echo = F}
# filter soma scan data to baseline data only and log transform
soma_post <- soma %>% arrange(record_id) %>%
  filter(visit == "POST") 

soma_post_filtered <- soma_post %>% 
  arrange(record_id) %>%
  remove_rownames() %>% column_to_rownames(var = "record_id_visit") %>%
  dplyr::select(starts_with("seq"))

y <- t(soma_post_filtered)
y <- log2(y)

# Design matrix
cond = as.factor(soma_post$treatment_arm)
design_mat <- model.matrix(~0 + treatment_arm, data = soma_post)
colnames(design_mat) = gsub("treatment_arm","",colnames(design_mat))
# Fit
contrast = makeContrasts(contrasts = c("Dapagliflozin-Placebo"), levels = design_mat)
fit <- lmFit(y, design_mat)
fit <- contrasts.fit(fit, contrasts = contrast)
fit <- eBayes(fit)
res <- topTable(fit, coef = 1, number = dim(y)[1], sort.by = "p")
res$EntrezGeneSymbol <- analytes_attempt$EntrezGeneSymbol[match(rownames(res), analytes_attempt$AptName)]
res$TargetFullName <- analytes_attempt$TargetFullName[match(rownames(res), analytes_attempt$AptName)]
kbl(head(res, 50)) %>%
  kable_paper() %>%
  scroll_box(width = "100%", height = "500px")
res_save <- res %>%
  rownames_to_column("AptName") %>%
  dplyr::select(-c(EntrezGeneSymbol, TargetFullName)) %>%
  left_join(analytes_attempt, by = "AptName")
```

```{r echo = F}
plot_volcano(res, "adj.P.Val",
             "PRE (Placebo / Dapa DE)", 
             "LogFC", 
             "-log10(adj.p-value)")

plot_volcano(res, "P.Value",
             "PRE (Placebo / Dapa DE)", 
             "LogFC", 
             "-log10(p-value)")
```

# DiD
## Top 20 DE
```{r echo = F}
did_res_plasma <- run_limma_proteomics(data = soma,
                                 analyte_info = analytes_attempt,
                                 feature_suffix = "",
                                 model_type = "interaction")

did_res_mixed_plasma <- run_limma_proteomics(data = soma,
                                 analyte_info = analytes_attempt,
                                 feature_suffix = "",
                                 model_type = "interaction_random")
# 87 out of 10776 singularity warning (0.8%)
```

```{r echo = F}
plot_volcano_proteomics(data = did_res_plasma$results_annotated, 
                        fc = "logFC",
                        p_col = "P.Value",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(p-value)",
                        positive_text = "Positive DiD",
                        negative_text = "Negative DiD",
                        formula = "treatment:visit",
                        file_suffix = "_DiD_plasma_proteomics")

plot_volcano_proteomics(data = did_res_plasma$results_annotated, 
                        fc = "logFC",
                        p_col = "adj.P.Val",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(adj.p-value)",
                        positive_text = "Positive DiD",
                        negative_text = "Negative DiD",
                        formula = "treatment:visit",
                        file_suffix = "_DiD_plasma_proteomics_adjp")

plot_volcano_proteomics(data = did_res_mixed_plasma$results_annotated, 
                        fc = "logFC",
                        p_col = "P.Value",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(p-value)",
                        positive_text = "Positive DiD",
                        negative_text = "Negative DiD",
                        formula = "treatment:visit + (1|subject)",
                        file_suffix = "_DiD_plasma_proteomics_mixed")

plot_volcano_proteomics(data = did_res_mixed_plasma$results_annotated, 
                        fc = "logFC",
                        p_col = "adj.P.Val",
                        title = NULL,
                        x_axis = "LogFC", 
                        y_axis = "-log10(adj.p-value)",
                        positive_text = "Positive DiD",
                        negative_text = "Negative DiD",
                        formula = "treatment:visit + (1|subject)",
                        file_suffix = "_DiD_plasma_proteomics_adjp_mixed")
```

#### GSEA (fgsea)
```{r echo = F}
# For GSEA
# Filter out the gmt files for KEGG, Reactome and GOBP
list.files(bg_path)
gmt_files <- list.files(path = bg_path, pattern = '.gmt', full.names = TRUE)
gmt_files
kegg_legacy <- prepare_gmt(gmt_files[1], unique(res$EntrezGeneSymbol), savefile = FALSE)
reactome <- prepare_gmt(gmt_files[3], unique(res$EntrezGeneSymbol), savefile = FALSE)
go <- prepare_gmt(gmt_files[4], unique(res$EntrezGeneSymbol), savefile = FALSE)

# rank genes by t-stats in DiD
rankings_soma_DiD <- res$t
names(rankings_soma_DiD) <- res$EntrezGeneSymbol
rankings_soma_DiD <- sort(rankings_soma_DiD, decreasing = TRUE)
plot(rankings_soma_DiD)
min(rankings_soma_DiD)
max(rankings_soma_DiD)
```

```{r echo = F}
set.seed(1234)

kegg_legacy_res_soma_DiD <- fgsea(pathways = kegg_legacy,
                                 stats = rankings_soma_DiD,
                                 scoreType = 'std', 
                                 minSize = 3,
                                 maxSize = 500,
                                 nproc = 1)

reactome_res_soma_DiD <- fgsea(pathways = reactome,
                              stats = rankings_soma_DiD,
                              scoreType = 'std', 
                              minSize = 3,
                              maxSize = 500,
                              nproc = 1)
go_res_soma_DiD <- fgsea(pathways = go,
                         stats = rankings_soma_DiD,
                         scoreType = "std",
                         minSize = 5,
                         maxSize = 500,
                         nPermSimple = 10000,
                         nproc = 1)

soma_DiD_fgsea <- data.frame("KEGG Legacy"=c(sum(kegg_legacy_res_soma_DiD[, padj < 0.05]), sum(kegg_legacy_res_soma_DiD[, pval < 0.05])),
                         "REACTOME"=c(sum(reactome_res_soma_DiD[, padj < 0.05]), sum(reactome_res_soma_DiD[, pval < 0.05])),
                         "GO"=c(sum(go_res_soma_DiD[, padj < 0.05]), sum(go_res_soma_DiD[, pval < 0.05])))
rownames(soma_DiD_fgsea) <- c("adj.pval", "p.val")
soma_DiD_fgsea
```
##### KEGG Legacy
```{r echo = F}
plot_fgsea(kegg_legacy_res_soma_DiD, title = "SOMA DiD Top 30 KEGG", xlim= 20)

ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Pathways/SOMA_DiD_KEGG.jpeg"),
  width = 27.5, height = 14, scale = 1)


```

##### REACTOME
```{r echo = F}
plot_fgsea(reactome_res_soma_DiD, title = "SOMA DiD Top 30 REACTOME", xlimit = 30)

ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Pathways/SOMA_DiD_REACTOME.jpeg"),
  width = 27.5, height = 14, scale = 1)

```
##### GO
```{r echo = F}
plot_fgsea(go_res_soma_DiD, title = "SOMA DiD Top 30 GO", xlimit = 30)

ggsave(file.path(root_path, "ATTEMPT/Results/Figures/Pathways/SOMA_DiD_GO.jpeg"),
  width = 27.5, height = 14, scale = 1)
```

# Correlations with clinical variables

## mGFR

### All aptamers

```{r include = FALSE}
is_seq <- function(.x) grepl("seq", .x)

# read in clinical variables
attempt_clin <- read.csv(file.path(root_path, "ATTEMPT/Data Raw/ATTEMPT_DenverDataRequest_20250314.csv"), na.strings = "") 

attempt_clin <- attempt_clin %>% filter(visit %in% c("V1 Screening", "V4 Final"))
attempt_clin$record_id <- attempt_clin$subject_id

# reshape to wide
attempt_clin_keep <- attempt_clin %>% dplyr::select(record_id, visit, mgfr_si, mgfr_si_adjusted, PWV, hba1c_percent)
attempt_clin_wide <- reshape(attempt_clin_keep, timevar = "visit", idvar = "record_id", direction = "wide")
# calculate deltas
attempt_clin_wide$delta_mgfr_si <- attempt_clin_wide$`mgfr_si.V4 Final` - attempt_clin_wide$`mgfr_si.V1 Screening`
attempt_clin_wide$delta_mgfr_si_adjusted <- attempt_clin_wide$`mgfr_si_adjusted.V4 Final` - attempt_clin_wide$`mgfr_si_adjusted.V1 Screening`
attempt_clin_wide$delta_PWV <- attempt_clin_wide$`PWV.V4 Final` - attempt_clin_wide$`PWV.V1 Screening`
attempt_clin_wide$delta_hba1c_percent <- attempt_clin_wide$`hba1c_percent.V4 Final` - attempt_clin_wide$`hba1c_percent.V1 Screening`
attempt_clin_wide <- attempt_clin_wide %>% dplyr::select(record_id, delta_mgfr_si, delta_mgfr_si_adjusted, delta_PWV, delta_hba1c_percent)

# reshape the soma data to wide
seq <- names(soma)[is_seq(names(soma))]
soma_keep <- soma %>% dplyr::select(record_id, visit, starts_with("seq"))
soma_wide <- reshape(soma_keep, timevar = "visit", idvar = "record_id", direction = "wide")
#predictors <- colnames(base_log[seq])
for (i in 1:length(seq)) {
  soma_wide[,paste0("delta_",seq[i])] <- soma_wide[,paste0(seq[i],".POST")] - soma_wide[,paste0(seq[i],".PRE")]
}

# calculate correlation between change in mGFR, HbA1c, UACR, PWV
# create CSV with all results as well as volcano plot
source(file.path(git_path, "Resources/YC/R Functions/correlation_function.R"))
```

```{r echo = F, warning=FALSE, quiet = TRUE}
# mGFR 
y <- soma_wide %>%
  dplyr::select(contains("delta")) 
x <- attempt_clin_wide %>% 
  dplyr::select(delta_mgfr_si)
corr_delta_mgfr_si <- corr.test(x = x, y = y, method = "spearman", adjust = "none")
corr_delta_mgfr_si_r <- data.frame(spearman_delta_mgfr_si = (corr_delta_mgfr_si$r %>% t() ))
corr_delta_mgfr_si_p <- data.frame(p.value = (corr_delta_mgfr_si$p.adj %>% t() ))
corr_delta_mgfr_si_mat <- cbind(corr_delta_mgfr_si_r, corr_delta_mgfr_si_p)
colnames(corr_delta_mgfr_si_mat) <- c("spearman_delta_mgfr_si", "p.value")
corr_delta_mgfr_si_mat$AptName <- rownames(corr_delta_mgfr_si_mat)
corr_delta_mgfr_si_mat$AptName <- str_remove(corr_delta_mgfr_si_mat$AptName, "delta_")
corr_delta_mgfr_si_mat <- corr_delta_mgfr_si_mat %>%
  left_join(analytes_attempt, by = "AptName") 
  # column_to_rownames("Target") %>%
  #dplyr::select(spearman_delta_testosterone, p.value, Target)
corr_delta_mgfr_si_mat$Target_apt <- paste0(corr_delta_mgfr_si_mat$Target, " (", corr_delta_mgfr_si_mat$AptName, ")")
corr_delta_mgfr_si_mat <- corr_delta_mgfr_si_mat %>%
  column_to_rownames("Target_apt") 
corr_delta_mgfr_si_mat <- corr_delta_mgfr_si_mat %>% arrange(p.value)

# create dfs for those proteins significantly up and down in the DiD analysis
corr_delta_mgfr_si_mat_did_up <- corr_delta_mgfr_si_mat %>% filter(AptName %in% res_save_did_sig_up$AptName)
corr_delta_mgfr_si_mat_did_down <- corr_delta_mgfr_si_mat %>% filter(AptName %in% res_save_did_sig_down$AptName)

p <- plotVolcano_mod_new(data = corr_delta_mgfr_si_mat, 
            FC = spearman_delta_mgfr_si, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_mgfr_si_mat[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

### Aptamers significantly up in dapagliflozin compared to placebo in DiD analysis

```{r echo = F, warning=FALSE, quiet = TRUE}
p <- plotVolcano_mod_new(data = corr_delta_mgfr_si_mat_did_up, 
            FC = spearman_delta_mgfr_si, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_mgfr_si_mat_did_up[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

### Aptamers significantly down in dapagliflozin compared to placebo in DiD analysis

```{r echo = F, warning=FALSE, quiet = TRUE}
p <- plotVolcano_mod_new(data = corr_delta_mgfr_si_mat_did_down, 
            FC = spearman_delta_mgfr_si, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_mgfr_si_mat_did_down[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

## mGFR adjusted

### All aptamers

```{r echo = F, warning=FALSE}
y <- soma_wide %>%
  dplyr::select(contains("delta")) 
x <- attempt_clin_wide %>% 
  dplyr::select(delta_mgfr_si_adjusted)
corr_delta_mgfr_si_adjusted <- corr.test(x = x, y = y, method = "spearman", adjust = "none")
corr_delta_mgfr_si_adjusted_r <- data.frame(spearman_delta_mgfr_si_adjusted = (corr_delta_mgfr_si_adjusted$r %>% t() ))
corr_delta_mgfr_si_adjusted_p <- data.frame(p.value = (corr_delta_mgfr_si_adjusted$p.adj %>% t() ))
corr_delta_mgfr_si_adjusted_mat <- cbind(corr_delta_mgfr_si_adjusted_r, corr_delta_mgfr_si_adjusted_p)
colnames(corr_delta_mgfr_si_adjusted_mat) <- c("spearman_delta_mgfr_si_adjusted", "p.value")
corr_delta_mgfr_si_adjusted_mat$AptName <- rownames(corr_delta_mgfr_si_adjusted_mat)
corr_delta_mgfr_si_adjusted_mat$AptName <- str_remove(corr_delta_mgfr_si_adjusted_mat$AptName, "delta_")
corr_delta_mgfr_si_adjusted_mat <- corr_delta_mgfr_si_adjusted_mat %>%
  left_join(analytes_attempt, by = "AptName") 
  # column_to_rownames("Target") %>%
  #dplyr::select(spearman_delta_testosterone, p.value, Target)
corr_delta_mgfr_si_adjusted_mat$Target_apt <- paste0(corr_delta_mgfr_si_adjusted_mat$Target, " (", corr_delta_mgfr_si_adjusted_mat$AptName, ")")
corr_delta_mgfr_si_adjusted_mat <- corr_delta_mgfr_si_adjusted_mat %>%
  column_to_rownames("Target_apt") 
corr_delta_mgfr_si_adjusted_mat <- corr_delta_mgfr_si_adjusted_mat %>% arrange(p.value)

# create dfs for those proteins significantly up and down in the DiD analysis
corr_delta_mgfr_si_adjusted_mat_did_up <- corr_delta_mgfr_si_adjusted_mat %>% filter(AptName %in% res_save_did_sig_up$AptName)
corr_delta_mgfr_si_adjusted_mat_did_down <- corr_delta_mgfr_si_adjusted_mat %>% filter(AptName %in% res_save_did_sig_down$AptName)

p <- plotVolcano_mod_new(data = corr_delta_mgfr_si_adjusted_mat, 
            FC = spearman_delta_mgfr_si_adjusted, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_mgfr_si_mat[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

### Aptamers significantly up in dapagliflozin compared to placebo in DiD analysis

```{r echo = F, warning=FALSE, quiet = TRUE}
p <- plotVolcano_mod_new(data = corr_delta_mgfr_si_adjusted_mat_did_up, 
            FC = spearman_delta_mgfr_si_adjusted, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_mgfr_si_adjusted_mat_did_up[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

### Aptamers significantly down in dapagliflozin compared to placebo in DiD analysis

```{r echo = F, warning=FALSE, quiet = TRUE}
p <- plotVolcano_mod_new(data = corr_delta_mgfr_si_adjusted_mat_did_down, 
            FC = spearman_delta_mgfr_si_adjusted, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_mgfr_si_adjusted_mat_did_down[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

## HbA1c

### All aptamers

```{r echo = F, warning=FALSE}
y <- soma_wide %>%
  dplyr::select(contains("delta")) 
x <- attempt_clin_wide %>% 
  dplyr::select(delta_hba1c_percent)
corr_delta_hba1c_percent <- corr.test(x = x, y = y, method = "spearman", adjust = "none")
corr_delta_hba1c_percent_r <- data.frame(spearman_delta_hba1c_percent = (corr_delta_hba1c_percent$r %>% t() ))
corr_delta_hba1c_percent_p <- data.frame(p.value = (corr_delta_hba1c_percent$p.adj %>% t() ))
corr_delta_hba1c_percent_mat <- cbind(corr_delta_hba1c_percent_r, corr_delta_hba1c_percent_p)
colnames(corr_delta_hba1c_percent_mat) <- c("spearman_delta_hba1c_percent", "p.value")
corr_delta_hba1c_percent_mat$AptName <- rownames(corr_delta_hba1c_percent_mat)
corr_delta_hba1c_percent_mat$AptName <- str_remove(corr_delta_hba1c_percent_mat$AptName, "delta_")
corr_delta_hba1c_percent_mat <- corr_delta_hba1c_percent_mat %>%
  left_join(analytes_attempt, by = "AptName") 
  # column_to_rownames("Target") %>%
  #dplyr::select(spearman_delta_testosterone, p.value, Target)
corr_delta_hba1c_percent_mat$Target_apt <- paste0(corr_delta_hba1c_percent_mat$Target, " (", corr_delta_hba1c_percent_mat$AptName, ")")
corr_delta_hba1c_percent_mat <- corr_delta_hba1c_percent_mat %>%
  column_to_rownames("Target_apt") 
corr_delta_hba1c_percent_mat <- corr_delta_hba1c_percent_mat %>% arrange(p.value)

# create dfs for those proteins significantly up and down in the DiD analysis
corr_delta_hba1c_percent_mat_did_up <- corr_delta_hba1c_percent_mat %>% filter(AptName %in% res_save_did_sig_up$AptName)
corr_delta_hba1c_percent_mat_did_down <- corr_delta_hba1c_percent_mat %>% filter(AptName %in% res_save_did_sig_down$AptName)

p <- plotVolcano_mod_new(data = corr_delta_hba1c_percent_mat, 
            FC = spearman_delta_hba1c_percent, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_hba1c_percent_mat[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

### Aptamers significantly up in dapagliflozin compared to placebo in DiD analysis

```{r echo = F, warning=FALSE, quiet = TRUE}
p <- plotVolcano_mod_new(data = corr_delta_hba1c_percent_mat_did_up, 
            FC = spearman_delta_hba1c_percent, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_hba1c_percent_mat_did_up[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

### Aptamers significantly down in dapagliflozin compared to placebo in DiD analysis

```{r echo = F, warning=FALSE, quiet = TRUE}
p <- plotVolcano_mod_new(data = corr_delta_hba1c_percent_mat_did_down, 
            FC = spearman_delta_hba1c_percent, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_hba1c_percent_mat_did_down[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

## PWV

### All aptamers

```{r echo = F, warning=FALSE}
y <- soma_wide %>%
  dplyr::select(contains("delta")) 
x <- attempt_clin_wide %>% 
  dplyr::select(delta_PWV)
corr_delta_PWV <- corr.test(x = x, y = y, method = "spearman", adjust = "none")
corr_delta_PWV_r <- data.frame(spearman_delta_PWV = (corr_delta_PWV$r %>% t() ))
corr_delta_PWV_p <- data.frame(p.value = (corr_delta_PWV$p.adj %>% t() ))
corr_delta_PWV_mat <- cbind(corr_delta_PWV_r, corr_delta_PWV_p)
colnames(corr_delta_PWV_mat) <- c("spearman_delta_PWV", "p.value")
corr_delta_PWV_mat$AptName <- rownames(corr_delta_PWV_mat)
corr_delta_PWV_mat$AptName <- str_remove(corr_delta_PWV_mat$AptName, "delta_")
corr_delta_PWV_mat <- corr_delta_PWV_mat %>%
  left_join(analytes_attempt, by = "AptName") 
  # column_to_rownames("Target") %>%
  #dplyr::select(spearman_delta_testosterone, p.value, Target)
corr_delta_PWV_mat$Target_apt <- paste0(corr_delta_PWV_mat$Target, " (", corr_delta_PWV_mat$AptName, ")")
corr_delta_PWV_mat <- corr_delta_PWV_mat %>%
  column_to_rownames("Target_apt") 

corr_delta_PWV_mat <- corr_delta_PWV_mat %>% arrange(p.value)

# create dfs for those proteins significantly up and down in the DiD analysis
corr_delta_PWV_mat_did_up <- corr_delta_PWV_mat %>% filter(AptName %in% res_save_did_sig_up$AptName)
corr_delta_PWV_mat_did_down <- corr_delta_PWV_mat %>% filter(AptName %in% res_save_did_sig_down$AptName)

p <- plotVolcano_mod_new(data = corr_delta_PWV_mat, 
            FC = spearman_delta_PWV, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_PWV_mat[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p

# write correlation results to file
wb <- createWorkbook()
addWorksheet(wb,"Change in mgfr_si")
writeData(wb,"Change in mgfr_si",corr_delta_mgfr_si_mat,rowNames = F)
addWorksheet(wb,"Change in mgfr_si_adjusted")
writeData(wb,"Change in mgfr_si_adjusted",corr_delta_mgfr_si_adjusted_mat,rowNames = F)
addWorksheet(wb,"Change in HbA1c")
writeData(wb,"Change in HbA1c",corr_delta_hba1c_percent_mat,rowNames = F)
addWorksheet(wb,"Change in PWV")
writeData(wb,"Change in PWV",corr_delta_PWV_mat,rowNames = F)
saveWorkbook(wb,file.path(root_path, "ATTEMPT/Results/Somascan/Somascan_clinical_correlations.xlsx"),overwrite = TRUE)
```

### Aptamers significantly up in dapagliflozin compared to placebo in DiD analysis

```{r echo = F, warning=FALSE, quiet = TRUE}
p <- plotVolcano_mod_new(data = corr_delta_PWV_mat_did_up, 
            FC = spearman_delta_PWV, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_PWV_mat_did_up[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

### Aptamers significantly down in dapagliflozin compared to placebo in DiD analysis

```{r echo = F, warning=FALSE, quiet = TRUE}
p <- plotVolcano_mod_new(data = corr_delta_PWV_mat_did_down, 
            FC = spearman_delta_PWV, 
            p.value = p.value, 
            labels = Target, 
            label_apt = T, 
            identify = F,
            identify_manual = corr_delta_PWV_mat_did_down[1:20, "Target"],
            fc.cutoff = 0,
            cutoff = 0.05,
            x.lab = "Correlation",
            main = "",
            pt.size = 1,
            fc_lab = "p > 0.05",
            fc_lab_col = "#dad7cd",
            sig_fc_pos_lab = "p < 0.05 (Positive correlation)",
            sig_fc_neg_lab = "p < 0.05 (Negative correlation)") 
p
```

