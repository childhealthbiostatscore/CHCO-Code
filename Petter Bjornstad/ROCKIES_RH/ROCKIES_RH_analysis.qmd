---
title: "ROCKIES/RH2"
author: "Ye Ji Choi"
date: "`r lubridate::today()`"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
---

## Main structure of the manuscript

1.	Show that k2 / oxidative rate is elevated in T2D vs. controls 
2.	Show that high k2 associates with markers of DKD (albuminuria) and IR
3.	Show that transcripts of TCA and ox phos are higher in T2D vs. controls, and also higher in those with albuminuria (or associated with markers of DKD and histopathology)
a.	Determine pseudotemporal trajectories of PT in T2D vs. controls, and DKD y/n (and their expression of TCA and ox phos)
4.	Show that SGLT2i cross-sectionally is associated with lower k2, and transcripts of TCA and ox phos
5.	Validate these findings functionally in ROCKIES in a trial setting with placebo
6.	State that these findings are seen across the lifespan of people with T2D from young to older adults 

**Comments from PB on 10/30/24:**

* Q1. Can you subset it down to those who had a biopsy PET?

* Q2. Albuminuria should be limited to those with T2D+OB

* Q3. SGLT2i should be limited to those with T2D+OB

* Q4. Some w/ GLP1RA

* Q5. k2 figures and k2/F are missing


```{r echo = F, include = F}
library(dplyr)
library(arsenal)
library(ggplot2)
library(purrr)
source("/Users/choiyej/GitHub/YC_CHCO/R Functions/label_harmonized_function.R")
```

```{r echo = F, include = F}
dat <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/Data Harmonization/Data Clean/harmonized_dataset.csv", na.strings = "")

dat <- dat %>%
  filter(study %in% c("RENAL-HEIR", "RENAL-HEIRitage") & group != "Lean Control" | 
           study == "CROCODILE" & group == "Lean Control") %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = record_id) %>%
  mutate(race_ethnicity_condensed = case_when(race == "White" & 
                                                ethnicity == "Not Hispanic or Latino" ~ "Not Hispanic or Latino White",
                                              race == "Black or African American" & 
                                                ethnicity == "Not Hispanic or Latino" ~ "Not Hispanic or Latino Black",
                                              ethnicity == "Hispanic or Latino" ~ "Hispanic or Latino",
                                              T ~ "Not Hispanic or Latino Other"),
         albuminuria_yn = case_when(acr_u < 30 ~ "No", acr_u >= 30 ~ "Yes"),
         avg_c_f = rowMeans(dplyr::select(., lc_f, rc_f), na.rm = TRUE),
         avg_c_k1 = rowMeans(dplyr::select(., lc_k1, rc_k1), na.rm = TRUE),
         avg_c_k2 = rowMeans(dplyr::select(., lc_k2, rc_k2), na.rm = TRUE),
         avg_c_vb = rowMeans(dplyr::select(., lc_vb, rc_vb), na.rm = TRUE),
         avg_m_f = rowMeans(dplyr::select(., lm_f, rm_f), na.rm = TRUE),
         avg_m_k1 = rowMeans(dplyr::select(., lm_k1, rm_k1), na.rm = TRUE),
         avg_m_k2 = rowMeans(dplyr::select(., lm_k2, rm_k2), na.rm = TRUE),
         avg_m_vb = rowMeans(dplyr::select(., lm_vb, rm_vb), na.rm = TRUE),
         avg_pcascl = rowMeans(dplyr::select(., pcasl3d_left, pcasl3d_right), na.rm = TRUE),
         avg_k_r2_bl = rowMeans(dplyr::select(., bold_l_bl_kidney, bold_r_bl_kidney), na.rm = TRUE),
         avg_c_r2_bl = rowMeans(dplyr::select(., bold_l_bl_cortex, bold_r_bl_cortex), na.rm = TRUE),
         avg_m_r2_bl = rowMeans(dplyr::select(., bold_l_bl_medulla, bold_r_bl_medulla), na.rm = TRUE),
         avg_k_r2_pf = rowMeans(dplyr::select(., bold_l_pf_kidney, bold_r_pf_kidney), na.rm = TRUE),
         avg_c_r2_pf = rowMeans(dplyr::select(., bold_l_pf_cortex, bold_r_pf_cortex), na.rm = TRUE),
         avg_m_r2_pf = rowMeans(dplyr::select(., bold_l_pf_medulla, bold_r_pf_medulla), na.rm = TRUE),
         avg_k_fsoc = rowMeans(dplyr::select(., fsoc_l_kidney, fsoc_r_kidney), na.rm = TRUE),
         avg_c_fsoc = rowMeans(dplyr::select(., fsoc_l_cortex, fsoc_r_cortex), na.rm = TRUE),
         avg_m_fsoc = rowMeans(dplyr::select(., fsoc_l_medulla, fsoc_r_medulla), na.rm = TRUE),
         avg_c_adc = rowMeans(dplyr::select(., adc_left, adc_right), na.rm = TRUE),
         avg_c_t1 = rowMeans(dplyr::select(., t1_l_cortex, t1_r_cortex), na.rm = TRUE),
         avg_k_t1 = rowMeans(dplyr::select(., t1_l_kidney, t1_r_kidney), na.rm = TRUE),
         avg_c_k1_wo_cyst_vw = rowMeans(dplyr::select(., lc_k1_wo_cyst_vw, rc_k1_wo_cyst_vw), na.rm = TRUE),
         avg_m_k1_wo_cyst_vw = rowMeans(dplyr::select(., lm_k1_wo_cyst_vw, lm_k1_wo_cyst_vw), na.rm = TRUE),
         avg_c_k2_wo_cyst_vw = rowMeans(dplyr::select(., lc_k2_wo_cyst_vw, rc_k2_wo_cyst_vw), na.rm = TRUE),
         avg_m_k2_wo_cyst_vw = rowMeans(dplyr::select(., lm_k2_wo_cyst_vw, rm_k2_wo_cyst_vw), na.rm = TRUE),
         avg_tot_k1_wo_cyst = rowMeans(dplyr::select(., ltot_k1_wo_cyst, rtot_k1_wo_cyst), na.rm = TRUE),
         avg_tot_k2_wo_cyst = rowMeans(dplyr::select(., ltot_k2_wo_cyst, rtot_k2_wo_cyst), na.rm = TRUE),
         avg_c_k2_f = avg_c_k2/avg_c_f,
         group_t2ob = case_when(group == "Lean Control" ~ "Lean Control",
                                group == "Type 2 Diabetes" | group == "Obese Control" ~ "T2D/OB")) %>% 
  mutate_at(vars(starts_with("fsoc")), function(x) case_when(x < 0 ~ 0, T~x)) %>%
  filter(!is.na(avg_c_k1) & !is.na(kit_id))

dict <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/Data Harmonization/data_dictionary_master.csv") 
dict <- label_harmonized_dict(dat, dict) %>%
  dplyr::mutate(race_ethnicity_condensed = "Race/Ethnicity",
                avg_c_t1 = "Avg cortex T1",
                avg_k_t1 = "Avg kidney T1",
                t1_l_cortex = "Left cortex T1",
                t1_r_cortex = "Right cortex T1",
                t1_l_kidney = "Left kidney T1",
                t1_r_kidney = "Right kidney T1",
                avg_tot_k1_wo_cyst = "Avg kidney k1 (wo cyst)",
                avg_tot_k2_wo_cyst = "Avg kidney k2 (wo cyst)",
                avg_c_k1_wo_cyst_vw = "Avg cortex k1 (wo cyst)",
                avg_m_k1_wo_cyst_vw = "Avg medulla k2 (wo cyst)",
                avg_c_k2_f = "Avg cortex k2/F",
                group_t2ob = "Group")
dat <- label_harmonized(dat, dict[1,])

rhrh2_dat <- subset(dat, study !="CROCODILE")
```

```{r echo = F, results = 'asis'}
clinical_vars <- c("age", "sex", "race_ethnicity_condensed", "weight", "height", "bmi",  "sbp", "dbp", "pulse", "creatinine_s", "eGFR_CKD_epi", "glp1_agonist_timepoint", "diabetes_duration")

dexa_vars <- c("dexa_body_fat", "dexa_fat_kg", "dexa_lean_kg", "dexa_trunk_kg")

kidney_function_vars <- c("p2_raw_m", "p2_raw_leanm", "p2_gc_m", "p2_gc_leanm", "gfr_raw_plasma", "gfr_bsa_plasma", "erpf_raw_plasma", "erpf_bsa_plasma", "rvr", "glomerular_pressure", "baseline_ffa")

mri_vars <- c("total_kidney_volume_ml", "left_kidney_volume_ml", "right_kidney_volume_ml", "pcasl3d_left", "pcasl3d_right", "avg_c_r2", "bold_l_bl_cortex", "bold_r_bl_cortex", "avg_k_r2", "bold_l_bl_kidney", "bold_r_bl_kidney", "avg_m_r2", "bold_l_bl_medulla", "bold_r_bl_medulla", "avg_m_fsoc", "fsoc_l_medulla", "fsoc_r_medulla", "avg_c_adc", "adc_left", "adc_right")

pet_vars <- c("lc_f",	"rc_f",	"avg_c_f",	"lm_f",	"rm_f",	"avg_m_f",	"lc_k1",	"rc_k1",	"avg_c_k1",	"lm_k1",	"rm_k1", "avg_m_k1", "lc_k2", "rc_k2", "avg_c_k2", "lm_k2", "rm_k2", "avg_m_k2", "t1_l_cortex",	"t1_r_cortex",	"avg_c_t1", "t1_l_kidney",	"t1_r_kidney",	"avg_k_t1")

vw_vars <- c("lc_k2_wo_cyst_vw", "rc_k2_wo_cyst_vw", "avg_c_k2_wo_cyst_vw", "lm_k2_wo_cyst_vw", "rm_k2_wo_cyst_vw", "avg_m_k2_wo_cyst_vw", "lc_k1_wo_cyst_vw", "rc_k1_wo_cyst_vw", "avg_c_k1_wo_cyst_vw", "lm_k1_wo_cyst_vw", "rm_k1_wo_cyst_vw", "avg_m_k1_wo_cyst_vw", "ltot_k2_wo_cyst", "rtot_k2_wo_cyst", "avg_tot_k2_wo_cyst", "ltot_k1_wo_cyst", "rtot_k1_wo_cyst", "avg_tot_k1_wo_cyst")
```

## Tables

### 1.	Table of RH/RH2 and CROCODILE (diabetes vs. controls) | ? add ROCKIES
-	Demographics and participant description 
-	N=12 HC
-	N= 30-40 T2D/OB

#### 1a Clinical variables & labs

```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("group ~", 
                                 paste(c(clinical_vars, 
                                         'kwt(acr_u, "Nmiss", "medianq1q3", "range")', 
                                         'kwt(hba1c, "Nmiss", "medianq1q3", "range")'), 
                                       collapse = " + "))), 
                data = dat), 
        test = F)
dat$record_id
```

#### 1b DEXA
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("group ~", paste(dexa_vars,
                                                  collapse = " + "))), 
                data = dat), 
        test = F)
```

#### 1c MRI
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("group ~", paste(mri_vars,
                                                  collapse = " + "))), 
                data = dat), 
        test = F)
```

#### 1d PET
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("group ~", paste(pet_vars,
                                                  collapse = " + "))), 
                data = dat), 
        test = F)
```

#### 1e Voxelwise
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("group ~", paste(vw_vars,
                                                  collapse = " + "))), 
                data = dat), 
        test = F)

```
### 2.	Table RH/RH2 (albuminuria y/n, UACR >= 30 mg/g)
#### T2D+OB

##### 2a Clinical variables & labs

```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(c(clinical_vars, 
                                                             'kwt(acr_u, "Nmiss", "medianq1q3", "range")', 
                                                             'kwt(hba1c, "Nmiss", "medianq1q3", "range")'), 
                                                           collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 2b DEXA
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(dexa_vars,
                                                           collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 2c MRI
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(mri_vars,
                                                           collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 2d PET
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(pet_vars,
                                                           collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 2e Voxelwise
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(vw_vars,
                                                           collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

#### T2D only
##### 2a Clinical variables & labs

```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(c(clinical_vars, 
                                                             'kwt(acr_u, "Nmiss", "medianq1q3", "range")', 
                                                             'kwt(hba1c, "Nmiss", "medianq1q3", "range")'), 
                                                           collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 2b DEXA
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(dexa_vars,
                                                           collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 2c MRI
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(mri_vars,
                                                           collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 2d PET
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(pet_vars,
                                                           collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 2e Voxelwise
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("albuminuria_yn ~", paste(vw_vars,
                                                           collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

### 3.	Table RH/RH2 (SGLT2 y/n, current) 
#### T2D+OB

##### 3a Clinical variables & labs
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(c(clinical_vars, 
                                                              'kwt(acr_u, "Nmiss", "medianq1q3", "range")', 
                                                              'kwt(hba1c, "Nmiss", "medianq1q3", "range")'), 
                                                            collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 3b DEXA
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(dexa_vars,
                                                            collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 3c MRI
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(mri_vars,
                                                            collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 3d PET
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(pet_vars,
                                                            collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 3e Voxelwise
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(vw_vars,
                                                            collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

#### T2D only

##### 3a Clinical variables & labs
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(c(clinical_vars, 
                                                              'kwt(acr_u, "Nmiss", "medianq1q3", "range")', 
                                                              'kwt(hba1c, "Nmiss", "medianq1q3", "range")'), 
                                                            collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 3b DEXA
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(dexa_vars,
                                                            collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 3c MRI
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(mri_vars,
                                                            collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 3d PET
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(pet_vars,
                                                            collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 3e Voxelwise
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("sglti_timepoint ~", paste(vw_vars,
                                                            collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

### 4.	Table RH/RH2 (GLP1 y/n, current) 
#### T2D+OB
##### 4a Clinical variables & labs
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(c(clinical_vars, 
                                                                     'kwt(acr_u, "Nmiss", "medianq1q3", "range")', 
                                                                     'kwt(hba1c, "Nmiss", "medianq1q3", "range")'), 
                                                                   collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 4b DEXA
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(dexa_vars,
                                                                   collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 4c MRI
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(mri_vars,
                                                                   collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 4d PET
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(pet_vars,
                                                                   collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

##### 4e Voxelwise
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(vw_vars,
                                                                   collapse = " + "))), 
                data = rhrh2_dat), 
        test = F)
```

#### T2D only

##### 4a Clinical variables & labs
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(c(clinical_vars, 
                                                                     'kwt(acr_u, "Nmiss", "medianq1q3", "range")', 
                                                                     'kwt(hba1c, "Nmiss", "medianq1q3", "range")'), 
                                                                   collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 4b DEXA
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(dexa_vars,
                                                                   collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 4c MRI
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(mri_vars,
                                                                   collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 4d PET
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(pet_vars,
                                                                   collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```

##### 4e Voxelwise
```{r echo = F, results = 'asis'}
summary(tableby(as.formula(paste("glp1_agonist_timepoint ~", paste(vw_vars,
                                                                   collapse = " + "))), 
                data = subset(rhrh2_dat, group == "Type 2 Diabetes")), 
        test = F)
```


### 5.	Table ROCKIES SGLT2i vs. placebo

```{r echo = F, results = 'asis'}

```



## Figures

1.	PET data (k1, k2, k2/F) stratified by T2D status, albuminuria and SGLT2i (RH2, CRC)

### T2D status
#### K1
```{r echo = F, warning = F}
dat %>% ggplot(aes(x = group, y = avg_c_k1, color = group)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = label(dat$group),
       y = label(dat$avg_c_k1),
       color = label(dat$group)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#84a59d", "#457b9d", "#f28482"))

dat %>% ggplot(aes(x = group_t2ob, y = avg_c_k1, color = group_t2ob)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = label(dat$group_t2ob),
       y = label(dat$avg_c_k1),
       color = label(dat$group_t2ob)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#84a59d", "#f28482"))
```

#### k2
```{r echo = F, warning = F}
dat %>% ggplot(aes(x = group, y = avg_c_k2, color = group)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = label(dat$group),
       y = label(dat$avg_c_k2),
       color = label(dat$group)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#84a59d", "#457b9d", "#f28482"))

dat %>% ggplot(aes(x = group_t2ob, y = avg_c_k2, color = group_t2ob)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = label(dat$group_t2ob),
       y = label(dat$avg_c_k2),
       color = label(dat$group_t2ob)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#84a59d", "#f28482"))
```

#### k2/F
```{r echo = F, warning = F}
dat %>% ggplot(aes(x = group, y = avg_c_k2_f, color = group)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = label(dat$group),
       y = label(dat$avg_c_k2_f),
       color = label(dat$group)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#84a59d", "#457b9d", "#f28482"))

dat %>% ggplot(aes(x = group_t2ob, y = avg_c_k2_f, color = group_t2ob)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = label(dat$group_t2ob),
       y = label(dat$avg_c_k2_f),
       color = label(dat$group_t2ob)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#84a59d", "#f28482"))
```
### Albuminuria status

#### K1 (Excluding Lean Control)
```{r echo = F, warning = F}
subset(dat, !is.na(albuminuria_yn) & group != "Lean Control") %>% 
  ggplot(aes(x = albuminuria_yn, y = avg_c_k1, color = albuminuria_yn)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "Albuminuria",
       y = label(dat$avg_c_k1),
       color = "Albuminuria") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```


#### k2 (Excluding Lean Control)
```{r echo = F, warning = F}
subset(dat, !is.na(albuminuria_yn) & group != "Lean Control") %>% 
  ggplot(aes(x = albuminuria_yn, y = avg_c_k2, color = albuminuria_yn)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "Albuminuria",
       y = label(dat$avg_c_k2),
       color = "Albuminuria") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```


#### k2/F (Excluding Lean Control)
```{r echo = F, warning = F}
subset(dat, !is.na(albuminuria_yn) & group != "Lean Control") %>% 
  ggplot(aes(x = albuminuria_yn, y = avg_c_k2_f, color = albuminuria_yn)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "Albuminuria",
       y = label(dat$avg_c_k2_f),
       color = "Albuminuria") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```
### SGLT2i timepoint status
#### K1 (Everyone)
```{r echo = F, warning = F}
subset(dat, !is.na(sglti_timepoint)) %>% 
  ggplot(aes(x = sglti_timepoint, y = avg_c_k1, color = sglti_timepoint)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "SGLT2i at visit",
       y = label(dat$avg_c_k1),
       color = "SGLT2i at visit") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```

#### K1 (Excluding Lean Control)
```{r echo = F, warning = F}
subset(dat, !is.na(sglti_timepoint) & group != "Lean Control") %>% 
  ggplot(aes(x = sglti_timepoint, y = avg_c_k1, color = sglti_timepoint)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "SGLT2i at visit",
       y = label(dat$avg_c_k1),
       color = "SGLT2i at visit") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```

#### k2 (Everyone)
```{r echo = F, warning = F}
subset(dat, !is.na(sglti_timepoint)) %>% 
  ggplot(aes(x = sglti_timepoint, y = avg_c_k2, color = sglti_timepoint)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "SGLT2i at visit",
       y = label(dat$avg_c_k2),
       color = "SGLT2i at visit") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```

#### k2 (Excluding Lean Control)
```{r echo = F, warning = F}
subset(dat, !is.na(sglti_timepoint) & group != "Lean Control") %>% 
  ggplot(aes(x = sglti_timepoint, y = avg_c_k2, color = sglti_timepoint)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "SGLT2i at visit",
       y = label(dat$avg_c_k2),
       color = "SGLT2i at visit") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```

#### k2/F (Everyone)
```{r echo = F, warning = F}
subset(dat, !is.na(sglti_timepoint)) %>% 
  ggplot(aes(x = sglti_timepoint, y = avg_c_k2_f, color = sglti_timepoint)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "SGLT2i at visit",
       y = label(dat$avg_c_k2_f),
       color = "SGLT2i at visit") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```

#### k2/F (Excluding Lean Control)
```{r echo = F, warning = F}
subset(dat, !is.na(sglti_timepoint) & group != "Lean Control") %>% 
  ggplot(aes(x = sglti_timepoint, y = avg_c_k2_f, color = sglti_timepoint)) +
  geom_boxplot(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "SGLT2i at visit",
       y = label(dat$avg_c_k2_f),
       color = "SGLT2i at visit") +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14)) +
  scale_color_manual(values = c("#457b9d", "#f28482"))
```
### Diabetes duration (for T2D only)
#### K1
```{r echo = F, warning = F}
subset(dat, !is.na(avg_c_k1) & group == "Type 2 Diabetes") %>% 
  ggplot(aes(x = diabetes_duration, y = avg_c_k1)) +
  geom_point(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "Diabetes duration",
       y = label(dat$avg_c_k1)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14))
```

#### k2
```{r echo = F, warning = F}
subset(dat, !is.na(avg_c_k2) & group == "Type 2 Diabetes") %>% 
  ggplot(aes(x = diabetes_duration, y = avg_c_k2)) +
  geom_point(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "Diabetes duration",
       y = label(dat$avg_c_k2)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14))
```

#### k2/F
```{r echo = F, warning = F}
subset(dat, !is.na(avg_c_k2_f) & group == "Type 2 Diabetes") %>% 
  ggplot(aes(x = diabetes_duration, y = avg_c_k2_f)) +
  geom_point(size = 1) +
  geom_jitter(alpha = 0.3) +
  theme_bw() +
  labs(x = "Diabetes duration",
       y = label(dat$avg_c_k2_f)) +
  theme(panel.grid = element_blank(),
        text = element_text(size = 14))
```

## Misc. Investigation

Compare current data with previous JCI data

```{r echo = F, results = 'asis'}
jci_dat <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/T2D scRNA SGLT2i/Data raw/clinical_from_RDS.csv")
jci_dat$diabetes_duration <- jci_dat$diabetes_duration_months/12
summary(tableby(as.formula(T2D_HC ~ diabetes_duration), 
                data = jci_dat), 
        test = F, total = F)
```

2.	UMAP of single cell RNA sequencing (RH/RH2, CRC)
3.	Bar plot with key transcripts of ox phos and TCA cycle stratified by T2D status, albuminuria and SGLT2i (RH/RH2, CRC)
4.	Correlation / heat map showing association between PET data and transcripts (and consider estimates of insulin sensitivity) (RH/RH2, CRC)
5.	Pseudotime trajectories according to T2D status, albuminuria and SGLT2i as well as proportion of PT subpopulations across these groups (RH/RH2, CRC)
6.	PET data figures (SGLT2i vs. placebo) – current Kmono or get K1, K2 and F from Denis and Gabriel (ROCKIES)
7.	Heat map / association of changes of K1, K2 and F (insulin sensitivity [OGIS], tubular work load, PGLO, GFR, RPF) (ROCKIES)
8.	Omics from ROCKIES (urine metabolomics) (ROCKIES)
