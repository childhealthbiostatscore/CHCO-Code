---
title: "RH/RH2/ROCKIES"
author: "Ye Ji Choi"
date: "today"
date-format: long
execute: 
  echo: false
  warning: false
  messages: false
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

# Data with all subjects with scRNA from IMPROVE/RH/RH2 & CRC (HC)
scRNA data file: "PB_90samples_Harmony_rpca_Fadhl_PhilApproved_091024.RDS"

```{r libraries, message = F}
#| include: false
library(Seurat)
library(future)
library(tidyverse)
library(colorspace)
library(patchwork)
library(ggdendro)
library(cowplot)
library(ggpubr)
library(rstatix)
library(table1)
library(Biobase)
library(ReactomeGSA)
library(GSEABase)
library(msigdbr)
library(kableExtra)
library(knitr)
library(slingshot); library(SingleCellExperiment)
library(arsenal)
```

```{r data-setup, echo = F, message=F}
## Parallel processing
plan(multicore, workers = 16)
options(future.globals.maxSize=2e9)
so <- readRDS("/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/scRNA/data_raw/PB_90samples_Harmony_rpca_Fadhl_PhilApproved_091024.RDS")
source("/home/yejichoi2/Documents/CHCO-Code/Petter Bjornstad/CROCODILE/crocodile_functions.R")
source("/home/yejichoi2/Documents/CHCO-Code/Petter Bjornstad/Resources/YC/R Functions/label_harmonized_function.R")
dict <- read.csv("/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/Data Harmonization/data_dictionary_master.csv") %>%
  dplyr::select(variable_name, label)

dict <- setNames(data.frame(t(dict[ , - 1])), dict[ , 1])
dict <- dict %>%
  mutate(sce_PT.slingPseudotime_1 = "Pseudotime",
         gbm_thick_art_mean = "GBM thickness",
         p2_raw_m = "M-value",
         avg_c_k2 = "Cortical K2",
         bmi = "BMI",
         diabetes_duration = "Diabetes duration", 
         hba1c = "HbA1c")

dat <- read.csv("/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/Data Harmonization/Data Clean/harmonized_dataset.csv") %>%
  filter(study %in% c("RENAL-HEIR", "RENAL-HEIRitage") & group != "Lean Control" | study == "CROCODILE" & group == "Lean Control" |
           (study == "IMPROVE" & visit == "baseline")) %>%
  dplyr::mutate(across(where(is.character), ~ na_if(., ""))) %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = record_id) %>%
  mutate(kit_id = gsub("^K.*-", "KL-", kit_id),
         albuminuria_yn = case_when(acr_u < 30 ~ "No", acr_u >= 30 ~ "Yes"),
         avg_c_f = rowMeans(dplyr::select(., lc_f, rc_f), na.rm = TRUE),
         avg_c_k1 = rowMeans(dplyr::select(., lc_k1, rc_k1), na.rm = TRUE),
         avg_c_k2 = rowMeans(dplyr::select(., lc_k2, rc_k2), na.rm = TRUE),
         avg_c_vb = rowMeans(dplyr::select(., lc_vb, rc_vb), na.rm = TRUE),
         avg_m_f = rowMeans(dplyr::select(., lm_f, rm_f), na.rm = TRUE),
         avg_m_k1 = rowMeans(dplyr::select(., lm_k1, rm_k1), na.rm = TRUE),
         avg_m_k2 = rowMeans(dplyr::select(., lm_k2, rm_k2), na.rm = TRUE),
         avg_m_vb = rowMeans(dplyr::select(., lm_vb, rm_vb), na.rm = TRUE),
         avg_pcascl = rowMeans(dplyr::select(., pcasl3d_left, pcasl3d_right), na.rm = TRUE),
         avg_k_r2_bl = rowMeans(dplyr::select(., bold_l_bl_kidney, bold_r_bl_kidney), na.rm = TRUE),
         avg_c_r2_bl = rowMeans(dplyr::select(., bold_l_bl_cortex, bold_r_bl_cortex), na.rm = TRUE),
         avg_m_r2_bl = rowMeans(dplyr::select(., bold_l_bl_medulla, bold_r_bl_medulla), na.rm = TRUE),
         avg_k_r2_pf = rowMeans(dplyr::select(., bold_l_pf_kidney, bold_r_pf_kidney), na.rm = TRUE),
         avg_c_r2_pf = rowMeans(dplyr::select(., bold_l_pf_cortex, bold_r_pf_cortex), na.rm = TRUE),
         avg_m_r2_pf = rowMeans(dplyr::select(., bold_l_pf_medulla, bold_r_pf_medulla), na.rm = TRUE),
         avg_k_fsoc = rowMeans(dplyr::select(., fsoc_l_kidney, fsoc_r_kidney), na.rm = TRUE),
         avg_c_fsoc = rowMeans(dplyr::select(., fsoc_l_cortex, fsoc_r_cortex), na.rm = TRUE),
         avg_m_fsoc = rowMeans(dplyr::select(., fsoc_l_medulla, fsoc_r_medulla), na.rm = TRUE),
         avg_c_adc = rowMeans(dplyr::select(., adc_left, adc_right), na.rm = TRUE),
         avg_c_t1 = rowMeans(dplyr::select(., t1_l_cortex, t1_r_cortex), na.rm = TRUE),
         avg_k_t1 = rowMeans(dplyr::select(., t1_l_kidney, t1_r_kidney), na.rm = TRUE),
         avg_c_k1_wo_cyst_vw = rowMeans(dplyr::select(., lc_k1_wo_cyst_vw, rc_k1_wo_cyst_vw), na.rm = TRUE),
         avg_m_k1_wo_cyst_vw = rowMeans(dplyr::select(., lm_k1_wo_cyst_vw, lm_k1_wo_cyst_vw), na.rm = TRUE),
         avg_c_k2_wo_cyst_vw = rowMeans(dplyr::select(., lc_k2_wo_cyst_vw, rc_k2_wo_cyst_vw), na.rm = TRUE),
         avg_m_k2_wo_cyst_vw = rowMeans(dplyr::select(., lm_k2_wo_cyst_vw, rm_k2_wo_cyst_vw), na.rm = TRUE),
         avg_tot_k1_wo_cyst = rowMeans(dplyr::select(., ltot_k1_wo_cyst, rtot_k1_wo_cyst), na.rm = TRUE),
         avg_tot_k2_wo_cyst = rowMeans(dplyr::select(., ltot_k2_wo_cyst, rtot_k2_wo_cyst), na.rm = TRUE),
         group_t2ob = case_when(group == "Lean Control" ~ "LC",
                                group == "Type 2 Diabetes" | group == "Obese Control" ~ "T2D/OB"),
         group_sglt2i = case_when(group == "Type 2 Diabetes" & epic_ever_sglt2i_1 == "Yes" ~ "T2D(+)",
                                  group == "Type 2 Diabetes" & epic_ever_sglt2i_1 == "No" ~ "T2D(-)",
                                  group == "Obese Control" & epic_ever_sglt2i_1 == "Yes" ~ "OB(+)",
                                  group == "Obese Control" & epic_ever_sglt2i_1 == "No" ~ "OB(-)",
                                  T ~ "LC"),
         group_t2ob_sglt2i = case_when(epic_ever_sglt2i_1 == "Yes" ~ "T2D/OB(+)",
                                       group != "Lean Control" & epic_ever_sglt2i_1 == "No" ~ "T2D/OB(-)",
                                       T~ "LC"),
         group_t2d = case_when(group == "Type 2 Diabetes" ~ "T2D", T ~ "Non-T2D")) %>%
  dplyr::select(-c(cryostor_id)) %>%
  filter(!is.na(kit_id))

so_meta <- so@meta.data %>%
  dplyr::mutate(kit_id = gsub("(?i)^k.*-", "KL-", kit_id))
so_meta <- left_join(so_meta, dat, by = c("kit_id", "record_id"))
rownames(so_meta) <- so_meta$barcode
so <- AddMetaData(so, so_meta)
so <- subset(so, cells = rownames(so@meta.data[!is.na(so@meta.data$group), ]))
so <- subset(so, record_id != "CRC-55") ## remove control with IgAN
```

## Table of descriptives
```{r echo = F, results='asis'}
so_meta_sub <- so@meta.data %>%
  distinct(record_id, .keep_all = T)
summary(arsenal::tableby(group_sglt2i ~ age + sex + diabetes_duration + 
                           kwt(acr_u, "Nmiss", "medianq1q3", "range") + eGFR_CKD_epi,
                 data = so_meta_sub, test = F, total = F, digits = 1))
so_meta_sub$record_id
```

```{r echo = F, message = F, include = F}
options(future.globals.maxSize = 3000 * 1024^3)
## UMAP of single cell RNA sequencing (RH/RH2, CRC)
so <- NormalizeData(so)
so <- ScaleData(so)
ElbowPlot(so)
so <- RunPCA(so, ncomponents = 10, features = VariableFeatures(object = so))
so <- FindNeighbors(so)
so <- FindClusters(so)
so <- RunUMAP(so, dims = 1:30, reduction.key = "UMAP_")
## so <- RunTSNE(so, dimred = "UMAP")
```

```{r echo = F, message = F}
DimPlot(object = so, reduction = "umap", group.by = "celltype_rpca", raster = F)
DimPlot(object = so, reduction = "umap", group.by = "celltype_harmony", raster = F)
DimPlot(object = so, reduction = "umap", group.by = "group", raster = F)
```

```{r echo = F}
## Bar plot with key transcripts of ox phos and TCA cycle stratified by T2D status, albuminuria and SGLT2i (RH/RH2, CRC)
so$celltype_pt <- ifelse(grepl("PT-", so$celltype_harmony),
                         "PT",
                         as.character(so$celltype_harmony))
Idents(so) <- so$celltype_pt
so_group_t2ob <- subset(so, group_t2ob == "T2D/OB")

source("/home/yejichoi2/Documents/CHCO-Code/Petter Bjornstad/CROCODILE/crocodile_functions.R")

# function for plotting bar graphs of DEG
plot_de_markers <- function(so, genes, group_column, id1, id2, subset = NULL, suffix = "_plot") {
  ## Perform differential expression analysis
  de_results <- de.markers(so, genes, group_column, id1 = id1, id2 = id2, subset, suffix)
  de_results_name <- paste0("m", suffix)
  de_results <- get(de_results_name)
  
  ## Add direction column to the results
  de_results <- add_direction(de_results)
  
  ## Plot the results
  de_plot <- de_results %>%
    ggplot(aes(x = rownames(.), y = avg_log2FC, fill = direction)) + 
    geom_col(color = "white") +
    theme_bw() + 
    theme(panel.grid = element_blank(),
          text = element_text(size = 14),
          axis.text.x = element_text(angle = 70, hjust = 1)) +
    labs(x = "Transcripts", 
         y = "Avg Log2FC",
         fill = "Direction") +
    scale_fill_manual(values = c("NS" = "grey", "Upregulated" = "#f28482", "Downregulated" = "#457b9d"))
  
  return(de_plot)
}

## calculate counts for each group
grp_count <- function(data, celltype_var = "celltype_pt",
                      cellsubtype_var = "celltype_harmony",
                      celltype_filter = "PT", 
                      cellsubtype_exclude = "PT_lowQuality",
                      group_var = "group",
                      group = NULL) {
  
  filtered_data <- data %>%
    filter(!!sym(celltype_var) %in% celltype_filter &
             !!sym(cellsubtype_var) %nin% cellsubtype_exclude &
             !!sym(group_var) == !!group)
  nrow(filtered_data)
}
```

## PT subtype proportions
### PT-1,-2,-3,-4,-5
```{r echo = F, warning  = F}
n_LC <- grp_count(so@meta.data, group_var = "group", group = "Lean Control")
n_OB <- grp_count(so@meta.data, group_var = "group", group = "Obese Control")
n_T2D <- grp_count(so@meta.data, group_var = "group", group = "Type 2 Diabetes")
n_OB_ni <- grp_count(so@meta.data, group_var = "group_sglt2i", group = "OB(-)")
n_T2D_ni <- grp_count(so@meta.data, group_var = "group_sglt2i", group = "T2D(-)")
n_OB_i <- grp_count(so@meta.data, group_var = "group_sglt2i", group = "OB(+)")
n_T2D_i <- grp_count(so@meta.data, group_var = "group_sglt2i", group = "T2D(+)")

so@meta.data$celltype_harmony <- factor(so@meta.data$celltype_harmony, levels = c("PT-1", "PT-2", "PT-3", "PT-4", "PT-5"))
```

```{r echo = F, warning = F}
## By PT subtypes (by group)
cellcount_bygrp <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  dplyr::group_by(group, celltype_harmony) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::mutate(n = case_when(group == "Lean Control" ~ n_LC, 
                              group == "Obese Control" ~ n_OB,
                              group == "Type 2 Diabetes" ~ n_T2D),
         ratio = count / n) %>% ungroup() %>%
  arrange(as.numeric(sub("PT-", "", celltype_harmony))) %>%
  group_by(celltype_harmony) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  dplyr::select(proportion, group, celltype_harmony) %>%
  ggplot(aes(x= celltype_harmony, y= proportion, fill = group)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a"))
cellcount_bygrp
```

```{r echo = F}
## By PT subtypes (by group (SGLT2i))
cellcount_bysgltgrp <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  dplyr::group_by(group_sglt2i, celltype_harmony) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::mutate(n = case_when(group_sglt2i == "LC" ~ n_LC, 
                              group_sglt2i == "OB(-)" ~ n_OB_ni,
                              group_sglt2i == "OB(+)" ~ n_OB_i,
                              group_sglt2i == "T2D(-)" ~ n_T2D_ni,
                              group_sglt2i == "T2D(+)" ~ n_T2D_i),
         ratio = count / n) %>% ungroup() %>%
  arrange(as.numeric(sub("PT-", "", celltype_harmony))) %>%
  group_by(celltype_harmony) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  dplyr::select(proportion, group_sglt2i, celltype_harmony) %>%
  ggplot(aes(x= celltype_harmony, y= proportion, fill = group_sglt2i)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261"))
cellcount_bysgltgrp
```

```{r echo = F}
## By group (by PT subtypes)
cellcount_bysubtype <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  ggplot(aes(group, fill = celltype_harmony)) + 
  geom_bar(stat = "count", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Cell type") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))
cellcount_bysubtype
```

```{r echo = F}
## By SGLT2i group (by PT subtypes)
cellcount_bysubtype_sglt <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  ggplot(aes(group_sglt2i, fill = celltype_harmony)) + 
  geom_bar(stat = "count", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Cell type") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))
cellcount_bysubtype_sglt
```


## DEG in PT
### Key transcripts of TCA cycle
#### Combined (T2D + OB + LC)
##### By T2D status (T2D vs. OB + LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so, genes, "group_t2d", "T2D", "Non-T2D", "PT","_tca_t2d")
kable(m_tca_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB + LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
so_sub_not2d_sglt2i <- subset(so, group_sglt2i != "T2D(+)")
so_sub_not2d_sglt2i$group_t2dsglt2i <- ifelse(so_sub_not2d_sglt2i$group_sglt2i != "T2D(-)", "Non-T2D", "T2D(-)")
plot_de_markers(so_sub_not2d_sglt2i, genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_tca_t2dneg")
kable(m_tca_t2dneg, digits = 3)
```

##### By T2D status (T2D + OB vs. LC)
Group 1 = "T2D/OB"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D/OB group compared to LC group.

```{r echo = F}
plot_de_markers(so, genes, "group_t2ob", id1 = "T2D/OB", id2 = "LC", "PT","_tca_t2ob")
kable(m_tca_t2ob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) + OB(-) vs. LC)

Group 1 = "T2D(-)/OB(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
so_sub_not2d_sglt2i$group_t2dobsglt2i <- ifelse(so_sub_not2d_sglt2i$group_sglt2i == "LC", "LC", "T2D(-)/OB(-)")
plot_de_markers(so_sub_not2d_sglt2i, genes, "group_t2dobsglt2i", "T2D(-)/OB(-)", "LC", "PT","_tca_t2dobneg")
kable(m_tca_t2dobneg, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. LC)

Group 1 = "T2D(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_sub_not2d_sglt2i, genes, "group_sglt2i", "T2D(-)", "LC", "PT","_tca_t2dlcneg")
kable(m_tca_t2dlcneg, digits = 3)
```

#### T2D & OB only (T2D + OB)
##### By T2D status (T2D vs. OB)

Group 1 = "T2D"

Group 2 = "Obese Control"

**Negative values** indicate that the transcript has a lower expression T2D group compared to Obese group.

```{r echo = F}
plot_de_markers(so_group_t2ob, genes, "group", id1 = "Type 2 Diabetes", id2 = "Obese Control", "PT","_tca_t2d_t2dob")
kable(m_tca_t2d_t2dob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB(-))

Group 1 = "T2D(-)"

Group 2 = "OB(-)"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so, genes, "group_sglt2i", "T2D(-)", "OB(-)", "PT","_tca_t2dneg_obneg")
kable(m_tca_t2dneg_obneg, digits = 3)
```

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_group_t2ob, genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2dob")
kable(m_tca_alb_t2dob, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_group_t2ob, genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_ever_t2dob")
kable(m_tca_sglt2i_ever_t2dob, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_group_t2ob, genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_timpoint_t2dob")
kable(m_tca_sglt2i_timpoint_t2dob, digits = 3)
```

#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
so_t2d <- subset(so, group == "Type 2 Diabetes")
plot_de_markers(so_t2d, genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2d")
kable(m_tca_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so, group_sglt2i == "T2D(-)"), genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2dneg")
kable(m_tca_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so, group_sglt2i == "T2D(+)"), genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2dpos")
kable(m_tca_alb_t2dpos, digits = 3)
```


##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_t2d, genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_ever_t2d")
kable(m_tca_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_t2d, genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_timpoint_t2d")
kable(m_tca_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots

##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_t2d, celltype_harmony == "PT-1"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_t2d, celltype_harmony == "PT-2"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_t2d, celltype_harmony == "PT-3"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_t2d, celltype_harmony == "PT-4"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_t2d, celltype_harmony == "PT-5"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-1"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-2"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-3"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-4"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-5"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
genes_subset.2 <- ""
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_tca_t2dsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_t2d, celltype_harmony %in%  c("PT-4", "PT-5")), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_t2d,  celltype_harmony %in% c("PT-4", "PT-5")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(genes = rownames(m.123))
match_45 <- (genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(genes = rownames(m.45))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_tca_t2dsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so, celltype_harmony == "PT-1"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so, celltype_harmony == "PT-2"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so, celltype_harmony == "PT-3"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so, celltype_harmony == "PT-4"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so, celltype_harmony == "PT-5"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-1"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-2"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-3"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-4"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-5"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
genes_subset.2 <- ""
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_tca_t2dlc.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so, celltype_harmony %in%  c("PT-4", "PT-5")), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") & celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &  celltype_harmony %in% c("PT-4", "PT-5")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(genes = rownames(m.123))
match_45 <- (genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(genes = rownames(m.45))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_tca_t2dlcsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

### Key transcripts of Oxidative Phosphorylation
#### Combined (T2D + OB + LC)
##### By T2D status (T2D vs. OB + LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so, oxy_phos_genes, "group_t2d", "T2D", "Non-T2D", "PT","_oxphos_t2d")
kable(m_oxphos_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB + LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_sub_not2d_sglt2i, oxy_phos_genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_oxphos_t2dneg")
kable(m_oxphos_t2dneg, digits = 3)
```

##### By T2D status (T2D + OB vs. LC)
Group 1 = "T2D/OB"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D/OB group compared to LC group.

```{r echo = F}
plot_de_markers(so, oxy_phos_genes, "group_t2ob", id1 = "T2D/OB", id2 = "LC", "PT","_oxphos_t2ob")
kable(m_oxphos_t2ob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) + OB(-) vs. LC)

Group 1 = "T2D(-)/OB(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_sub_not2d_sglt2i, oxy_phos_genes, "group_t2dobsglt2i", "T2D(-)/OB(-)", "LC", "PT","_oxphos_t2dobneg")
kable(m_oxphos_t2dobneg, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. LC)

Group 1 = "T2D(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_sub_not2d_sglt2i, oxy_phos_genes, "group_sglt2i", "T2D(-)", "LC", "PT","_oxphos_t2dlcneg")
kable(m_oxphos_t2dlcneg, digits = 3)
```
#### T2D & OB only (T2D + OB)
##### By T2D status (T2D vs. OB)

Group 1 = "T2D"

Group 2 = "Obese Control"

**Negative values** indicate that the transcript has a lower expression T2D group compared to Obese group.

```{r echo = F}
so_group_t2ob <- subset(so, group_t2ob == "T2D/OB")
plot_de_markers(so_group_t2ob, oxy_phos_genes, "group", id1 = "Type 2 Diabetes", id2 = "Obese Control", "PT","_oxphos_t2d_t2dob")
kable(m_oxphos_t2d_t2dob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB(-))

Group 1 = "T2D(-)"

Group 2 = "OB(-)"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so, oxy_phos_genes, "group_sglt2i", "T2D(-)", "OB(-)", "PT","_oxphos_t2dneg_obneg")
kable(m_oxphos_t2dneg_obneg, digits = 3)
```

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_group_t2ob, oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2dob")
kable(m_oxphos_alb_t2dob, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_group_t2ob, oxy_phos_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_ever_t2dob")
kable(m_oxphos_sglt2i_ever_t2dob, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_group_t2ob, oxy_phos_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_timpoint_t2dob")
kable(m_oxphos_sglt2i_timpoint_t2dob, digits = 3)
```

#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_t2d, oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2d")
kable(m_oxphos_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so, group_sglt2i == "T2D(-)"), oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2dneg")
kable(m_oxphos_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so, group_sglt2i == "T2D(+)"), oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2dpos")
kable(m_oxphos_alb_t2dpos, digits = 3)
```


##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_t2d, oxy_phos_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_ever_t2d")
kable(m_oxphos_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_t2d, oxy_phos_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_timpoint_t2d")
kable(m_oxphos_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots

##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_t2d, celltype_harmony == "PT-1"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_t2d, celltype_harmony == "PT-2"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_t2d, celltype_harmony == "PT-3"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_t2d, celltype_harmony == "PT-4"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_t2d, celltype_harmony == "PT-5"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-1"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-2"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-3"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-4"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-5"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_oxphos_t2dsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_t2d, celltype_harmony %in%  c("PT-4", "PT-5")), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_t2d,  celltype_harmony %in% c("PT-4", "PT-5")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (oxy_phos_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.123))
match_45 <- (oxy_phos_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.45))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_oxphos_t2dsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so, celltype_harmony == "PT-1"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so, celltype_harmony == "PT-2"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so, celltype_harmony == "PT-3"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so, celltype_harmony == "PT-4"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so, celltype_harmony == "PT-5"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-1"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-2"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-3"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-4"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-5"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_oxphos_t2dlc.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so, celltype_harmony %in%  c("PT-4", "PT-5")), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") & celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &  celltype_harmony %in% c("PT-4", "PT-5")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (oxy_phos_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.123))
match_45 <- (oxy_phos_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.45))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_oxphos_t2dlcsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```


### Key transcripts of lipid synthesis
#### Combined (T2D + OB + LC)
##### By T2D status (T2D vs. OB + LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
lipid_genes <- c("FAS", "ACACB", "ACACA")
```

```{r echo = F}
plot_de_markers(so, lipid_genes, "group_t2d", "T2D", "Non-T2D", "PT","_lipidsyn_t2d")
kable(m_lipidsyn_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB + LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_sub_not2d_sglt2i, lipid_genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_lipidsyn_t2dneg")
kable(m_lipidsyn_t2dneg, digits = 3)
```

##### By T2D status (T2D + OB vs. LC)
Group 1 = "T2D/OB"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D/OB group compared to LC group.

```{r echo = F}
plot_de_markers(so, lipid_genes, "group_t2ob", id1 = "T2D/OB", id2 = "LC", "PT","_lipidsyn_t2ob")
kable(m_lipidsyn_t2ob, digits = 3)
```


##### By T2D & SGLT2i ever status (T2D(-) + OB(-) vs. LC)

Group 1 = "T2D(-)/OB(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_sub_not2d_sglt2i, lipid_genes, "group_t2dobsglt2i", "T2D(-)/OB(-)", "LC", "PT","_lipidsyn_t2dobneg")
kable(m_lipidsyn_t2dobneg, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. LC)

Group 1 = "T2D(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_sub_not2d_sglt2i, lipid_genes, "group_sglt2i", "T2D(-)", "LC", "PT","_lipidsyn_t2dlcneg")
kable(m_lipidsyn_t2dlcneg, digits = 3)
```

#### T2D & OB only (T2D + OB)
##### By T2D status (T2D vs. OB)

Group 1 = "T2D"

Group 2 = "Obese Control"

**Negative values** indicate that the transcript has a lower expression T2D group compared to Obese group.

```{r echo = F}
plot_de_markers(so_group_t2ob, lipid_genes, "group", id1 = "Type 2 Diabetes", id2 = "Obese Control", "PT","_lipidsyn_t2d_t2dob")
kable(m_lipidsyn_t2d_t2dob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB(-))

Group 1 = "T2D(-)"

Group 2 = "OB(-)"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so, lipid_genes, "group_sglt2i", "T2D(-)", "OB(-)", "PT","_lipidsyn_t2dneg_obneg")
kable(m_lipidsyn_t2dneg_obneg, digits = 3)
```

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_group_t2ob, lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2dob")
kable(m_lipidsyn_alb_t2dob, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_group_t2ob, lipid_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_ever_t2dob")
kable(m_lipidsyn_sglt2i_ever_t2dob, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_group_t2ob, lipid_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_timpoint_t2dob")
kable(m_lipidsyn_sglt2i_timpoint_t2dob, digits = 3)
```
#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_t2d, lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2d")
kable(m_lipidsyn_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so, group_sglt2i == "T2D(-)"), lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2dneg")
kable(m_lipidsyn_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so, group_sglt2i == "T2D(+)"), lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2dpos")
kable(m_lipidsyn_alb_t2dpos, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_t2d, lipid_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_ever_t2d")
kable(m_lipidsyn_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_t2d, lipid_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_timpoint_t2d")
kable(m_lipidsyn_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots

##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_t2d, celltype_harmony == "PT-1"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_t2d, celltype_harmony == "PT-2"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_t2d, celltype_harmony == "PT-3"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_t2d, celltype_harmony == "PT-4"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_t2d, celltype_harmony == "PT-5"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-1"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-2"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-3"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-4"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_t2d, celltype_harmony == "PT-5"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (lipid_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.1))
genes_subset.2 <- ""
match_2 <- (lipid_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.2))
match_3 <- (lipid_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.3))
match_4 <- (lipid_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.4))
match_5 <- (lipid_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.5))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_lipidsyn_t2dsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_t2d, celltype_harmony %in%  c("PT-4", "PT-5")), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_t2d,  celltype_harmony %in% c("PT-4", "PT-5")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (lipid_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.123))
match_45 <- (lipid_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.45))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_lipidsyn_t2dsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so, celltype_harmony == "PT-1"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so, celltype_harmony == "PT-2"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so, celltype_harmony == "PT-3"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so, celltype_harmony == "PT-4"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so, celltype_harmony == "PT-5"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-1"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-2"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-3"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-4"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-5"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (lipid_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.1))
genes_subset.2 <- ""
match_2 <- (lipid_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.2))
match_3 <- (lipid_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.3))
match_4 <- (lipid_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.4))
match_5 <- (lipid_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.5))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_lipidsyn_t2dlc.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so, celltype_harmony %in%  c("PT-4", "PT-5")), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") & celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so, group_sglt2i %in% c("T2D(-)", "LC") &  celltype_harmony %in% c("PT-4", "PT-5")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (lipid_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.123))
match_45 <- (lipid_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.45))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_lipidsyn_t2dlcsglt2i.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```


### Key transcripts of Glycolysis

```{r echo = F}
so$t2d_sglt2i_neg <- ifelse(so$group == "Type 2 Diabetes" & so$epic_ever_sglt2i_1 == "No", "T2Di(-)", so$group)
so$t2d_sglt2i <- ifelse(so$group == "Type 2 Diabetes" & so$epic_ever_sglt2i_1 == "Yes", "T2Di(+)", so$t2d_sglt2i_neg)

glycolysis_genes <- c("PKLR", "PFKFB3", "PFKL", "ALDOC", "HK2", "ENO2", "PGK1", "PGAM1", "TPI1", "GAPDH")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so, glycolysis_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glyc_t2di_hc")
kable(m_glyc_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so, glycolysis_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glyc_t2di")
kable(m_glyc_t2di, digits = 3)
```

### Key transcripts of Gluconeogensesis

```{r echo = F}
gluconeogenesis_genes <- c("SLC25A10", "GOT2", "GOT1", "FBP1", "SLC25A11", "PCK1", "MDH1")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so, gluconeogenesis_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glucogen_t2di_hc")
kable(m_glucogen_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so, gluconeogenesis_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glucogen_t2di")
kable(m_glucogen_t2di, digits = 3)
```

### Key transcripts of Pyruvate metabolism and TCA cycle

```{r echo = F}
pyruvate_tca <- c("SDHB", "SUCLG1", "PDK2", "ACO2", "IDH3G", "SUCLA2", "HAGH", "PDHB", "LDHA")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so, pyruvate_tca, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_pyruvate_tca_t2di_hc")
kable(m_pyruvate_tca_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so, pyruvate_tca, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_pyruvate_tca_t2di")
kable(m_pyruvate_tca_t2di, digits = 3)
```

### Key transcripts of Glutathione conjugation

```{r echo = F}
glut_conj <- c("CNDP2", "GSTM4", "GSTT2B", "GSTO1", "GGCT", "GSTM3", "AKR1A1")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so, glut_conj, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glut_conj_t2di_hc")
kable(m_glut_conj_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so, glut_conj, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glut_conj_t2di")
kable(m_glut_conj_t2di, digits = 3)
```
### Key transcripts of Metallothioneins bind metals

```{r echo = F}
metal_genes <- c("MT1G", "MT1X", "MT1H", "MT2A")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so, metal_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_metal_t2di_hc")
kable(m_metal_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so, metal_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_metal_t2di")
kable(m_metal_t2di, digits = 3)
```

# Data limited to PET and scRNA
## Table of descriptives
```{r echo = F, results='asis'}
so_pet <- subset(so, cells = rownames(so@meta.data[!is.na(so@meta.data$group) & 
                                                  !is.na(so@meta.data$avg_c_k1), ]))

so_pet_meta_sub <- so_pet@meta.data %>%
  distinct(record_id, .keep_all = T)
summary(arsenal::tableby(group_sglt2i ~ age + sex + diabetes_duration + 
                           kwt(acr_u, "Nmiss", "medianq1q3", "range") + eGFR_CKD_epi,
                 data = so_pet_meta_sub, test = F, total = F))
so_pet_meta_sub$record_id
```

```{r echo = F, message = F, include = F}
options(future.globals.maxSize = 3000 * 1024^3)
## UMAP of single cell RNA sequencing (RH/RH2, CRC)
so_pet <- NormalizeData(so_pet)
so_pet <- ScaleData(so_pet)
ElbowPlot(so_pet)
so_pet <- RunPCA(so_pet, ncomponents = 10, features = VariableFeatures(object = so_pet))
so_pet <- FindNeighbors(so_pet)
so_pet <- FindClusters(so_pet)
so_pet <- RunUMAP(so_pet, dims = 1:30, reduction.key = "UMAP_")
## so_pet <- RunTSNE(so_pet, dimred = "UMAP")
```

```{r echo = F, message = F}
DimPlot(object = so_pet, reduction = "umap", group.by = "celltype_rpca", raster = F)
DimPlot(object = so_pet, reduction = "umap", group.by = "celltype_harmony", raster = F)
DimPlot(object = so_pet, reduction = "umap", group.by = "group", raster = F)
```

```{r echo = F}
## Bar plot with key transcripts of ox phos and TCA cycle stratified by T2D status, albuminuria and SGLT2i (RH/RH2, CRC)
so_pet$celltype_pt <- ifelse(grepl("PT-", so_pet$celltype_harmony),
                         "PT",
                         as.character(so_pet$celltype_harmony))
Idents(so_pet) <- so_pet$celltype_pt
so_pet_group_t2ob <- subset(so_pet, group_t2ob == "T2D/OB")

source("/home/yejichoi2/Documents/CHCO-Code/Petter Bjornstad/CROCODILE/crocodile_functions.R")

plot_de_markers <- function(so_pet, genes, group_column, id1, id2, subset = NULL, suffix = "_plot") {
  ## Perform differential expression analysis
  de_results <- de.markers(so_pet, genes, group_column, id1 = id1, id2 = id2, subset, suffix)
  de_results_name <- paste0("m", suffix)
  de_results <- get(de_results_name)
  
  ## Add direction column to the results
  de_results <- add_direction(de_results)
  
  ## Plot the results
  de_plot <- de_results %>%
    ggplot(aes(x = rownames(.), y = avg_log2FC, fill = direction)) + 
    geom_col(color = "white") +
    theme_bw() + 
    theme(panel.grid = element_blank(),
          text = element_text(size = 14),
          axis.text.x = element_text(angle = 70, hjust = 1)) +
    labs(x = "Transcripts", 
         y = "Avg Log2FC",
         fill = "Direction") +
    scale_fill_manual(values = c("NS" = "grey", "Upregulated" = "#f28482", "Downregulated" = "#457b9d"))
  
  return(de_plot)
}
```

## PT subtype proportions
### PT-1,-2,-3,-4,-5

```{r echo = F, warning  = F}
n_LC_pet <- nrow(so_pet@meta.data %>% filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality" & group == "Lean Control"))
n_OB_pet <- nrow(so_pet@meta.data %>% filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality" & group == "Obese Control"))
n_T2D_pet <- nrow(so_pet@meta.data %>% filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality" & group == "Type 2 Diabetes"))
n_OB_ni_pet <- nrow(so_pet@meta.data %>% filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality" & group_sglt2i == "OB(-)"))
n_T2D_ni_pet <- nrow(so_pet@meta.data %>% filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality" & group_sglt2i == "T2D(-)"))
n_OB_i_pet <- nrow(so_pet@meta.data %>% filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality" & group_sglt2i == "OB(+)"))
n_T2D_i_pet <- nrow(so_pet@meta.data %>% filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality" & group_sglt2i == "T2D(+)"))

so_pet@meta.data$celltype_harmony <- factor(so_pet@meta.data$celltype_harmony, levels = c("PT-1", "PT-2", "PT-3", "PT-4", "PT-5"))

## By PT subtypes (by celltype (S subtypes))
cellcount_bygrp <- so_pet@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  dplyr::group_by(group, celltype_harmony) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::mutate(n = case_when(group == "Lean Control" ~ n_LC_pet, 
                              group == "Obese Control" ~ n_OB_pet,
                              group == "Type 2 Diabetes" ~ n_T2D_pet),
         ratio = count / n) %>% ungroup() %>%
  arrange(as.numeric(sub("PT-", "", celltype_harmony))) %>%
  group_by(celltype_harmony) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  dplyr::select(proportion, group, celltype_harmony) %>%
  ggplot(aes(x= celltype_harmony, y= proportion, fill = group)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a"))


## By PT subtypes (by celltype (S subtypes))
cellcount_bysgltgrp <- so_pet@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  dplyr::group_by(group_sglt2i, celltype_harmony) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::mutate(n = case_when(group_sglt2i == "LC" ~ n_LC_pet, 
                              group_sglt2i == "OB(-)" ~ n_OB_ni_pet,
                              group_sglt2i == "OB(+)" ~ n_OB_i_pet,
                              group_sglt2i == "T2D(-)" ~ n_T2D_ni_pet,
                              group_sglt2i == "T2D(+)" ~ n_T2D_i_pet),
         ratio = count / n) %>% ungroup() %>%
  arrange(as.numeric(sub("PT-", "", celltype_harmony))) %>%
  group_by(celltype_harmony) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  dplyr::select(proportion, group_sglt2i, celltype_harmony) %>%
  ggplot(aes(x= celltype_harmony, y= proportion, fill = group_sglt2i)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261"))

cellcount_bysubtype <- so_pet@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  ggplot(aes(group, fill = celltype_harmony)) + 
  geom_bar(stat = "count", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Cell type") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))

cellcount_bysubtype_sglt <- so_pet@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  ggplot(aes(group_sglt2i, fill = celltype_harmony)) + 
  geom_bar(stat = "count", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Cell type") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))

cellcount_bygrp
cellcount_bysgltgrp
cellcount_bysubtype
cellcount_bysubtype_sglt
```

## DEG in PT
### Key transcripts of TCA cycle
#### Combined (T2D + OB + LC)
##### By T2D status (T2D vs. OB + LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_pet, genes, "group_t2d", "T2D", "Non-T2D", "PT","_tca_t2d")
kable(m_tca_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB + LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
so_pet_sub_not2d_sglt2i <- subset(so_pet, group_sglt2i != "T2D(+)")
so_pet_sub_not2d_sglt2i$group_t2dsglt2i <- ifelse(so_pet_sub_not2d_sglt2i$group_sglt2i != "T2D(-)", "Non-T2D", "T2D(-)")
plot_de_markers(so_pet_sub_not2d_sglt2i, genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_tca_t2dneg")
kable(m_tca_t2dneg, digits = 3)
```

##### By T2D status (T2D + OB vs. LC)
Group 1 = "T2D/OB"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D/OB group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet, genes, "group_t2ob", id1 = "T2D/OB", id2 = "LC", "PT","_tca_t2ob")
kable(m_tca_t2ob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) + OB(-) vs. LC)

Group 1 = "T2D(-)/OB(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
so_pet_sub_not2d_sglt2i$group_t2dobsglt2i <- ifelse(so_pet_sub_not2d_sglt2i$group_sglt2i == "LC", "LC", "T2D(-)/OB(-)")
plot_de_markers(so_pet_sub_not2d_sglt2i, genes, "group_t2dobsglt2i", "T2D(-)/OB(-)", "LC", "PT","_tca_t2dobneg")
kable(m_tca_t2dobneg, digits = 3)
```


##### By T2D & SGLT2i ever status (T2D(-) vs. LC)

Group 1 = "T2D(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet_sub_not2d_sglt2i, genes, "group_sglt2i", "T2D(-)", "LC", "PT","_tca_t2dlcneg")
kable(m_tca_t2dlcneg, digits = 3)
```

#### T2D & OB only (T2D + OB)
##### By T2D status (T2D vs. OB)

Group 1 = "T2D"

Group 2 = "Obese Control"

**Negative values** indicate that the transcript has a lower expression T2D group compared to Obese group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, genes, "group", id1 = "Type 2 Diabetes", id2 = "Obese Control", "PT","_tca_t2d_t2dob")
kable(m_tca_t2d_t2dob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB(-))

Group 1 = "T2D(-)"

Group 2 = "OB(-)"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet, genes, "group_sglt2i", "T2D(-)", "OB(-)", "PT","_tca_t2dneg_obneg")
kable(m_tca_t2dneg_obneg, digits = 3)
```

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2dob")
kable(m_tca_alb_t2dob, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_ever_t2dob")
kable(m_tca_sglt2i_ever_t2dob, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_timpoint_t2dob")
kable(m_tca_sglt2i_timpoint_t2dob, digits = 3)
```

#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
so_pet_t2d <- subset(so_pet, group == "Type 2 Diabetes")
plot_de_markers(so_pet_t2d, genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2d")
kable(m_tca_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_pet, group_sglt2i == "T2D(-)"), genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2dneg")
kable(m_tca_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_pet, group_sglt2i == "T2D(+)"), genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2dpos")
kable(m_tca_alb_t2dpos, digits = 3)
```


##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_t2d, genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_ever_t2d")
kable(m_tca_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_t2d, genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_timpoint_t2d")
kable(m_tca_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots

##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-1"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-2"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-3"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-4"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-5"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-1"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-2"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-3"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-4"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-5"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_tca_t2dsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_pet_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_pet_t2d, celltype_harmony %in%  c("PT-4", "PT-5")), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_pet_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_pet_t2d,  celltype_harmony %in% c("PT-4", "PT-5")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(genes = rownames(m.123))
match_45 <- (genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(genes = rownames(m.45))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_tca_t2dsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so_pet, celltype_harmony == "PT-1"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so_pet, celltype_harmony == "PT-2"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so_pet, celltype_harmony == "PT-3"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so_pet, celltype_harmony == "PT-4"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so_pet, celltype_harmony == "PT-5"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-1"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-2"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-3"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-4"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-5"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_tca_t2dlc_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_pet, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so_pet, celltype_harmony %in%  c("PT-4", "PT-5")), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") & celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &  celltype_harmony %in% c("PT-4", "PT-5")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(genes = rownames(m.123))
match_45 <- (genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(genes = rownames(m.45))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_tca_t2dlcsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```


### Key transcripts of Oxidative Phosphorylation
#### Combined (T2D + OB + LC)
##### By T2D status (T2D vs. OB + LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_pet, oxy_phos_genes, "group_t2d", "T2D", "Non-T2D", "PT","_oxphos_t2d")
kable(m_oxphos_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB + LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_pet_sub_not2d_sglt2i, oxy_phos_genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_oxphos_t2dneg")
kable(m_oxphos_t2dneg, digits = 3)
```

##### By T2D status (T2D + OB vs. LC)
Group 1 = "T2D/OB"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D/OB group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet, oxy_phos_genes, "group_t2ob", id1 = "T2D/OB", id2 = "LC", "PT","_oxphos_t2ob")
kable(m_oxphos_t2ob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) + OB(-) vs. LC)

Group 1 = "T2D(-)/OB(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet_sub_not2d_sglt2i, oxy_phos_genes, "group_t2dobsglt2i", "T2D(-)/OB(-)", "LC", "PT","_oxphos_t2dobneg")
kable(m_oxphos_t2dobneg, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. LC)

Group 1 = "T2D(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet_sub_not2d_sglt2i, oxy_phos_genes, "group_sglt2i", "T2D(-)", "LC", "PT","_oxphos_t2dlcneg")
kable(m_oxphos_t2dlcneg, digits = 3)
```

#### T2D & OB only (T2D + OB)
##### By T2D status (T2D vs. OB)

Group 1 = "T2D"

Group 2 = "Obese Control"

**Negative values** indicate that the transcript has a lower expression T2D group compared to Obese group.

```{r echo = F}
so_pet_group_t2ob <- subset(so_pet, group_t2ob == "T2D/OB")
plot_de_markers(so_pet_group_t2ob, oxy_phos_genes, "group", id1 = "Type 2 Diabetes", id2 = "Obese Control", "PT","_oxphos_t2d_t2dob")
kable(m_oxphos_t2d_t2dob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB(-))

Group 1 = "T2D(-)"

Group 2 = "OB(-)"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet, oxy_phos_genes, "group_sglt2i", "T2D(-)", "OB(-)", "PT","_oxphos_t2dneg_obneg")
kable(m_oxphos_t2dneg_obneg, digits = 3)
```

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2dob")
kable(m_oxphos_alb_t2dob, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, oxy_phos_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_ever_t2dob")
kable(m_oxphos_sglt2i_ever_t2dob, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, oxy_phos_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_timpoint_t2dob")
kable(m_oxphos_sglt2i_timpoint_t2dob, digits = 3)
```

#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_pet_t2d, oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2d")
kable(m_oxphos_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_pet, group_sglt2i == "T2D(-)"), oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2dneg")
kable(m_oxphos_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_pet, group_sglt2i == "T2D(+)"), oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2dpos")
kable(m_oxphos_alb_t2dpos, digits = 3)
```


##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_t2d, oxy_phos_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_ever_t2d")
kable(m_oxphos_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_t2d, oxy_phos_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_timpoint_t2d")
kable(m_oxphos_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots

##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-1"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-2"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-3"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-4"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-5"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-1"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-2"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-3"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-4"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-5"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_oxphos_t2dsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_pet_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_pet_t2d, celltype_harmony %in%  c("PT-4", "PT-5")), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_pet_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_pet_t2d,  celltype_harmony %in% c("PT-4", "PT-5")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (oxy_phos_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.123))
match_45 <- (oxy_phos_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.45))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_oxphos_t2dsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so_pet, celltype_harmony == "PT-1"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so_pet, celltype_harmony == "PT-2"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so_pet, celltype_harmony == "PT-3"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so_pet, celltype_harmony == "PT-4"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so_pet, celltype_harmony == "PT-5"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-1"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-2"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-3"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-4"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-5"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_oxphos_t2dlc_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_pet, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so_pet, celltype_harmony %in%  c("PT-4", "PT-5")), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") & celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &  celltype_harmony %in% c("PT-4", "PT-5")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (oxy_phos_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.123))
match_45 <- (oxy_phos_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.45))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_oxphos_t2dlcsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

### Key transcripts of lipid synthesis
#### Combined (T2D + OB + LC)
##### By T2D status (T2D vs. OB + LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
lipid_genes <- c("FAS", "ACACB", "ACACA")
```

```{r echo = F}
plot_de_markers(so_pet, lipid_genes, "group_t2d", "T2D", "Non-T2D", "PT","_lipidsyn_t2d")
kable(m_lipidsyn_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB + LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_pet_sub_not2d_sglt2i, lipid_genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_lipidsyn_t2dneg")
kable(m_lipidsyn_t2dneg, digits = 3)
```

##### By T2D status (T2D + OB vs. LC)
Group 1 = "T2D/OB"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D/OB group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet, lipid_genes, "group_t2ob", id1 = "T2D/OB", id2 = "LC", "PT","_lipidsyn_t2ob")
kable(m_lipidsyn_t2ob, digits = 3)
```


##### By T2D & SGLT2i ever status (T2D(-) + OB(-) vs. LC)

Group 1 = "T2D(-)/OB(-)"

Group 2 = "LC"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet_sub_not2d_sglt2i, lipid_genes, "group_t2dobsglt2i", "T2D(-)/OB(-)", "LC", "PT","_lipidsyn_t2dobneg")
kable(m_lipidsyn_t2dobneg, digits = 3)
```

#### T2D & OB only (T2D + OB)
##### By T2D status (T2D vs. OB)

Group 1 = "T2D"

Group 2 = "Obese Control"

**Negative values** indicate that the transcript has a lower expression T2D group compared to Obese group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, lipid_genes, "group", id1 = "Type 2 Diabetes", id2 = "Obese Control", "PT","_lipidsyn_t2d_t2dob")
kable(m_lipidsyn_t2d_t2dob, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. OB(-))

Group 1 = "T2D(-)"

Group 2 = "OB(-)"

**Negative values** indicate that the transcript has a lower expression T2D(-)/OB(-) group compared to LC group.

```{r echo = F}
plot_de_markers(so_pet, lipid_genes, "group_sglt2i", "T2D(-)", "OB(-)", "PT","_lipidsyn_t2dneg_obneg")
kable(m_lipidsyn_t2dneg_obneg, digits = 3)
```

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2dob")
kable(m_lipidsyn_alb_t2dob, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, lipid_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_ever_t2dob")
kable(m_lipidsyn_sglt2i_ever_t2dob, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i"

Group 2 = "Non-SGLT2i"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_group_t2ob, lipid_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_timpoint_t2dob")
kable(m_lipidsyn_sglt2i_timpoint_t2dob, digits = 3)
```
#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_pet_t2d, lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2d")
kable(m_lipidsyn_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_pet, group_sglt2i == "T2D(-)"), lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2dneg")
kable(m_lipidsyn_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_pet, group_sglt2i == "T2D(+)"), lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2dpos")
kable(m_lipidsyn_alb_t2dpos, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_t2d, lipid_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_ever_t2d")
kable(m_lipidsyn_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_pet_t2d, lipid_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_timpoint_t2d")
kable(m_lipidsyn_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots

##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-1"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-2"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-3"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-4"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_pet_t2d, celltype_harmony == "PT-5"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-1"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-2"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-3"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-4"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_pet_t2d, celltype_harmony == "PT-5"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (lipid_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.1))
match_2 <- (lipid_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.2))
match_3 <- (lipid_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.3))
match_4 <- (lipid_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.4))
match_5 <- (lipid_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.5))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_lipidsyn_t2dsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_pet_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_pet_t2d, celltype_harmony %in%  c("PT-4", "PT-5")), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_pet_t2d, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_pet_t2d,  celltype_harmony %in% c("PT-4", "PT-5")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (lipid_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.123))
match_45 <- (lipid_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.45))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
pt.plot.subset

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_lipidsyn_t2dsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so_pet, celltype_harmony == "PT-1"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so_pet, celltype_harmony == "PT-2"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so_pet, celltype_harmony == "PT-3"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so_pet, celltype_harmony == "PT-4"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so_pet, celltype_harmony == "PT-5"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-1"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-2"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-3"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-4"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype_harmony == "PT-5"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (lipid_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.1))
match_2 <- (lipid_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.2))
match_3 <- (lipid_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.3))
match_4 <- (lipid_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.4))
match_5 <- (lipid_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.5))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_lipidsyn_t2dlc_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_pet, celltype_harmony %in% c("PT-1", "PT-2", "PT-3")), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so_pet, celltype_harmony %in%  c("PT-4", "PT-5")), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") & celltype_harmony %in% c("PT-1", "PT-2", "PT-3")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_pet, group_sglt2i %in% c("T2D(-)", "LC") &  celltype_harmony %in% c("PT-4", "PT-5")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (lipid_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.123))
match_45 <- (lipid_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.45))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_lipidsyn_t2dlcsglt2i_pet.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

### Key transcripts of Glycolysis

```{r echo = F}
so_pet$t2d_sglt2i_neg <- ifelse(so_pet$group == "Type 2 Diabetes" & so_pet$epic_ever_sglt2i_1 == "No", "T2Di(-)", so_pet$group)
so_pet$t2d_sglt2i <- ifelse(so_pet$group == "Type 2 Diabetes" & so_pet$epic_ever_sglt2i_1 == "Yes", "T2Di(+)", so_pet$t2d_sglt2i_neg)

glycolysis_genes <- c("PKLR", "PFKFB3", "PFKL", "ALDOC", "HK2", "ENO2", "PGK1", "PGAM1", "TPI1", "GAPDH")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_pet, glycolysis_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glyc_t2di_hc")
kable(m_glyc_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_pet, glycolysis_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glyc_t2di")
kable(m_glyc_t2di, digits = 3)
```

### Key transcripts of Gluconeogensesis

```{r echo = F}
gluconeogenesis_genes <- c("SLC25A10", "GOT2", "GOT1", "FBP1", "SLC25A11", "PCK1", "MDH1")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_pet, gluconeogenesis_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glucogen_t2di_hc")
kable(m_glucogen_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_pet, gluconeogenesis_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glucogen_t2di")
kable(m_glucogen_t2di, digits = 3)
```

### Key transcripts of Pyruvate metabolism and TCA cycle

```{r echo = F}
pyruvate_tca <- c("SDHB", "SUCLG1", "PDK2", "ACO2", "IDH3G", "SUCLA2", "HAGH", "PDHB", "LDHA")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_pet, pyruvate_tca, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_pyruvate_tca_t2di_hc")
kable(m_pyruvate_tca_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_pet, pyruvate_tca, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_pyruvate_tca_t2di")
kable(m_pyruvate_tca_t2di, digits = 3)
```

### Key transcripts of Glutathione conjugation

```{r echo = F}
glut_conj <- c("CNDP2", "GSTM4", "GSTT2B", "GSTO1", "GGCT", "GSTM3", "AKR1A1")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_pet, glut_conj, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glut_conj_t2di_hc")
kable(m_glut_conj_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_pet, glut_conj, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glut_conj_t2di")
kable(m_glut_conj_t2di, digits = 3)
```
### Key transcripts of Metallothioneins bind metals

```{r echo = F}
metal_genes <- c("MT1G", "MT1X", "MT1H", "MT2A")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_pet, metal_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_metal_t2di_hc")
kable(m_metal_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_pet, metal_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_metal_t2di")
kable(m_metal_t2di, digits = 3)
```

# Data subset to JCI IDs from old dataset PB68
scRNA data file: "seurat_data_no_computations.RDS"

```{r echo = F}
so_old <- readRDS("/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/scRNA/data_clean/seurat_data_no_computations.RDS")
jci_ids <- read.csv("/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/T2D scRNA SGLT2i/Data raw/clinical_from_RDS.csv") %>%
  mutate(orig.ident = gsub("-PB","", orig.ident))
dat <- read.csv("/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/Data Harmonization/Data Clean/harmonized_dataset.csv") %>%
  dplyr::mutate(across(where(is.character), ~ na_if(., ""))) %>%
  group_by(record_id, visit) %>%
  fill(kit_id, .direction = "updown") %>% ungroup() %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = c(kit_id)) %>% filter(!is.na(kit_id)) %>%
  dplyr::mutate(record_id = paste0(record_id, visit),
                group_t2ob = case_when(group == "Lean Control" ~ "LC",
                                       group == "Type 2 Diabetes" | group == "Obese Control" ~ "T2D/OB"),
                group_sglt2i = case_when(group == "Type 2 Diabetes" & epic_ever_sglt2i_1 == "Yes" ~ "T2D(+)",
                                         group == "Type 2 Diabetes" & epic_ever_sglt2i_1 == "No" ~ "T2D(-)",
                                         T ~ "LC"),
                group_t2ob_sglt2i = case_when(epic_ever_sglt2i_1 == "Yes" ~ "T2D/OB(+)",
                                              group != "Lean Control" & epic_ever_sglt2i_1 == "No" ~ "T2D/OB(-)",
                                              T~ "LC"),
                group_t2d = case_when(group == "Type 2 Diabetes" ~ "T2D", T ~ "Non-T2D")) %>%
  dplyr::select(c(record_id, group, acr_u, eGFR_CKD_epi, kit_id,
                  elevated_albuminuria, epic_ever_sglt2i_1,epic_sglti2_1,
                  group_t2ob,group_sglt2i,group_t2ob_sglt2i,group_t2d))

so_old_meta <- so_old@meta.data %>%
  dplyr::select(1:13) %>%
  plyr::rename(c("KL.ID..kit.number.contains.path.sc.sample." = "kit_id")) 

so_old_meta <- left_join(so_old_meta, jci_ids) %>%
  left_join(dat)
rownames(so_old_meta) <- rownames(so_old@meta.data)
so_old <- AddMetaData(so_old, so_old_meta)

## IDs included in JCI
so_oldid_subset <- subset(so_old, Age != "NA")
unique(so_oldid_subset$michigan_id)

Idents(so_oldid_subset) <- so_oldid_subset$LR_clusters
```

## Table of descriptives
```{r echo = F, results='asis'}
# the JCI cohort only
so_old_meta_sub <- so_oldid_subset@meta.data %>%
  distinct(michigan_id, .keep_all = T) %>%
  mutate(Age = as.numeric(Age),
         diabetes_duration = as.numeric(diabetes_duration_months)/12,
         sex = factor(sex, labels = c("Female", "Male")))
summary(arsenal::tableby(group_sglt2i ~ Age + sex + diabetes_duration + eGFR_CKD_epi + kwt(acr_u, "medianq1q3", "range"),
                 data = so_old_meta_sub, test = F, total = F))
```

```{r echo = F, results = 'asis'}
# comparison of the datasets
so_nojci_meta <- so@meta.data %>% 
  mutate(record_id = paste0(record_id, visit)) %>%
  filter(record_id %nin% so_oldid_subset$record_id) %>%
  dplyr::mutate(across(where(is.character), ~ na_if(., ""))) %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = record_id) %>%
  mutate(dataset = "No JCI (PB90)", 
         dataset_grp = paste0(group_sglt2i," (No JCI PB90)")) %>% 
  dplyr::select(record_id, group_sglt2i, dataset, dataset_grp,
                age, sex, diabetes_duration, eGFR_CKD_epi, acr_u)

so_full_meta <- so@meta.data %>% 
  mutate(record_id = paste0(record_id, visit)) %>%
  dplyr::mutate(across(where(is.character), ~ na_if(., ""))) %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = record_id) %>%
  mutate(dataset = "Full (PB90)", 
         dataset_grp = paste0(group_sglt2i," (Full PB90)")) %>% 
  dplyr::select(record_id, group_sglt2i, dataset, dataset_grp,
                age, sex, diabetes_duration, eGFR_CKD_epi, acr_u)

so_new_jci_meta <- so@meta.data %>% 
  mutate(record_id = paste0(record_id, visit)) %>%
  filter(record_id %in% so_oldid_subset$record_id) %>%
  dplyr::mutate(across(where(is.character), ~ na_if(., ""))) %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = record_id) %>%
  mutate(dataset = "JCI (PB90)", 
         dataset_grp = paste0(group_sglt2i," (JCI PB90)")) %>% 
  dplyr::select(record_id, group_sglt2i, dataset, dataset_grp,
                age, sex, diabetes_duration, eGFR_CKD_epi, acr_u)

so_oldid_subset_meta <- so_oldid_subset@meta.data %>% 
  mutate(dataset = "JCI (PB68)",
         dataset_grp = paste0(group_sglt2i," (JCI PB68)"),
         diabetes_duration = diabetes_duration_months/12) %>% 
  dplyr::mutate(across(where(is.character), ~ na_if(., ""))) %>%
  dplyr::summarise(across(where(negate(is.numeric)), ~ ifelse(all(is.na(.x)), NA_character_, last(na.omit(.x)))),
                   across(where(is.numeric), ~ ifelse(all(is.na(.x)), NA_real_, mean(.x, na.rm = TRUE))),
                   .by = record_id) %>%
  dplyr::select(record_id, group_sglt2i, dataset, dataset_grp,
                age, sex, diabetes_duration, eGFR_CKD_epi, acr_u)
so_oldid_subset_meta$sex <- factor(so_oldid_subset_meta$sex, label = c("Female", "Male"))

so_meta_joined <- rbind(so_nojci_meta, so_oldid_subset_meta, so_new_jci_meta, so_full_meta)

summary(arsenal::tableby(dataset_grp ~ age + sex + diabetes_duration + eGFR_CKD_epi + kwt(acr_u, "medianq1q3", "range"),
                 data = so_meta_joined, test = F, total = F))

```

## JCI vs. old T2D comparison proportions
```{r echo = F, warning  = F}
n_LC_jci <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group == "Lean Control"))
n_OB_jci <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group == "Obese Control"))
n_T2D_jci <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group == "Type 2 Diabetes"))
n_OB_ni_jci <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group_sglt2i == "OB(-)"))
n_T2D_ni_jci <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group_sglt2i == "T2D(-)"))
n_OB_i_jci <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group_sglt2i == "OB(+)"))
n_T2D_i_jci <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group_sglt2i == "T2D(+)"))

so_90jci_meta <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  mutate(record_id = paste0(record_id, visit)) %>%
  filter(record_id %in% so_oldid_subset$record_id)
n_LC_90jci <- nrow(so_90jci_meta %>% filter(group == "Lean Control"))
n_OB_90jci <- nrow(so_90jci_meta %>% filter(group == "Obese Control"))
n_T2D_90jci <- nrow(so_90jci_meta %>% filter(group == "Type 2 Diabetes"))
n_OB_ni_90jci <- nrow(so_90jci_meta %>% filter(group_sglt2i == "OB(-)"))
n_T2D_ni_90jci <- nrow(so_90jci_meta %>% filter(group_sglt2i == "T2D(-)"))
n_OB_i_90jci <- nrow(so_90jci_meta %>% filter(group_sglt2i == "OB(+)"))
n_T2D_i_90jci <- nrow(so_90jci_meta %>% filter(group_sglt2i == "T2D(+)"))

so_90nojci_meta <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  mutate(record_id = paste0(record_id, visit)) %>%
  filter(record_id %nin% so_oldid_subset$record_id)
n_LC_90nojci <- nrow(so_90nojci_meta %>% filter(group == "Lean Control"))
n_OB_90nojci <- nrow(so_90nojci_meta %>% filter(group == "Obese Control"))
n_T2D_90nojci <- nrow(so_90nojci_meta %>% filter(group == "Type 2 Diabetes"))
n_OB_ni_90nojci <- nrow(so_90nojci_meta %>% filter(group_sglt2i == "OB(-)"))
n_T2D_ni_90nojci <- nrow(so_90nojci_meta %>% filter(group_sglt2i == "T2D(-)"))
n_OB_i_90nojci <- nrow(so_90nojci_meta %>% filter(group_sglt2i == "OB(+)"))
n_T2D_i_90nojci <- nrow(so_90nojci_meta %>% filter(group_sglt2i == "T2D(+)"))


so_new_meta <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  mutate(record_id = paste0(record_id, visit)) %>%
  filter(record_id %nin% so_oldid_subset$record_id) %>%
  mutate(dataset = "No JCI (PB90)", 
         celltype = celltype_harmony,
         dataset_grp = paste0(group_sglt2i," (No JCI PB90)")) %>% 
  dplyr::group_by(group_sglt2i, celltype, dataset, dataset_grp) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::select(group_sglt2i, celltype, dataset, count, dataset_grp)

so_full_meta <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  mutate(record_id = paste0(record_id, visit)) %>%
  mutate(dataset = "Full (PB90)", 
         celltype = celltype_harmony,
         dataset_grp = paste0(group_sglt2i," (Full PB90)")) %>% 
  dplyr::group_by(group_sglt2i, celltype, dataset, dataset_grp) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::select(group_sglt2i, celltype, dataset, count, dataset_grp)

so_new_jci_meta <- so@meta.data %>% 
  filter(celltype_pt == "PT" & celltype_harmony != "PT_lowQuality") %>%
  mutate(record_id = paste0(record_id, visit)) %>%
  filter(record_id %in% so_oldid_subset$record_id) %>%
  mutate(dataset = "JCI (PB90)", 
         celltype = celltype_harmony,
         dataset_grp = paste0(group_sglt2i," (JCI PB90)")) %>% 
  dplyr::group_by(group_sglt2i, celltype, dataset, dataset_grp) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::select(group_sglt2i, celltype, dataset, count, dataset_grp)

so_oldid_subset_meta <- so_oldid_subset@meta.data %>% 
  filter(LR_clusters == "PT" & celltype != "PT_lowQuality") %>%
  mutate(dataset = "JCI (PB68)",
         dataset_grp = paste0(group_sglt2i," (JCI PB68)")) %>% 
  dplyr::group_by(group_sglt2i, celltype, dataset, dataset_grp) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::select(group_sglt2i, celltype, dataset, count,dataset_grp)

so_meta_joined <- rbind(so_new_meta, so_oldid_subset_meta, so_new_jci_meta, so_full_meta)
so_meta_joined$celltype <- factor(so_meta_joined$celltype, levels = c("PT-1", "PT-2", "PT-3", "PT-4", "PT-5"))
so_meta_joined$dataset_grp <- factor(so_meta_joined$dataset_grp, 
                                     levels = c("LC (JCI PB68)", "LC (JCI PB90)", "LC (Full PB90)",  "LC (No JCI PB90)", 
                                                "OB(-) (No JCI PB90)"," OB(-) (Full PB90)", "OB(-) (Full PB90)",
                                                "T2D(-) (JCI PB68)", "T2D(-) (JCI PB90)", "T2D(-) (Full PB90)", "T2D(-) (No JCI PB90)",
                                                "T2D(+) (JCI PB68)", "T2D(+) (JCI PB90)","T2D(+) (Full PB90)", "T2D(+) (No JCI PB90)"))
so_meta_joined %>% ungroup() %>% 
  dplyr::mutate(n = case_when(group_sglt2i == "LC" & dataset == "JCI (PB68)" ~ n_LC_jci, 
                              group_sglt2i == "OB(-)" & dataset == "JCI (PB68)" ~ n_OB_ni_jci,
                              group_sglt2i == "OB(+)" & dataset == "JCI (PB68)" ~ n_OB_i_jci,
                              group_sglt2i == "T2D(-)" & dataset == "JCI (PB68)" ~ n_T2D_ni_jci,
                              group_sglt2i == "T2D(+)" & dataset == "JCI (PB68)" ~ n_T2D_i_jci,
                              group_sglt2i == "LC" & dataset == "Full (PB90)" ~ n_LC, 
                              group_sglt2i == "OB(-)" & dataset == "Full (PB90)" ~ n_OB_ni,
                              group_sglt2i == "OB(+)" & dataset == "Full (PB90)" ~ n_OB_i,
                              group_sglt2i == "T2D(-)" & dataset == "Full (PB90)" ~ n_T2D_ni,
                              group_sglt2i == "T2D(+)" & dataset == "Full (PB90)" ~ n_T2D_i,
                              group_sglt2i == "LC" & dataset == "JCI (PB90)" ~ n_LC_90jci, 
                              group_sglt2i == "OB(-)" & dataset == "JCI (PB90)" ~ n_OB_ni_90jci,
                              group_sglt2i == "OB(+)" & dataset == "JCI (PB90)" ~ n_OB_i_90jci,
                              group_sglt2i == "T2D(-)" & dataset == "JCI (PB90)" ~ n_T2D_ni_90jci,
                              group_sglt2i == "T2D(+)" & dataset == "JCI (PB90)" ~ n_T2D_i_90jci,
                              group_sglt2i == "LC" & dataset == "No JCI (PB90)" ~ n_LC_90nojci, 
                              group_sglt2i == "OB(-)" & dataset == "No JCI (PB90)" ~ n_OB_ni_90nojci,
                              group_sglt2i == "OB(+)" & dataset == "No JCI (PB90)" ~ n_OB_i_90nojci,
                              group_sglt2i == "T2D(-)" & dataset == "No JCI (PB90)" ~ n_T2D_ni_90nojci,
                              group_sglt2i == "T2D(+)" & dataset == "No JCI (PB90)" ~ n_T2D_i_90nojci),
                ratio = count / n) %>%
  group_by(celltype) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  ggplot(aes(x= dataset_grp, y= proportion, fill = celltype)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))
  
```

```{r echo = F}
so_oldid_subset@meta.data %>% 
  filter(LR_clusters == "PT" & celltype != "PT_lowQuality") %>%
  dplyr::group_by(group_sglt2i, celltype) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::mutate(n = case_when(group_sglt2i == "LC" ~ n_LC_jci, 
                              group_sglt2i == "OB(-)" ~ n_OB_ni_jci,
                              group_sglt2i == "OB(+)" ~ n_OB_i_jci,
                              group_sglt2i == "T2D(-)" ~ n_T2D_ni_jci,
                              group_sglt2i == "T2D(+)" ~ n_T2D_i_jci),
         ratio = count / n) %>% ungroup() %>%
  arrange(as.numeric(sub("PT-", "", celltype))) %>%
  group_by(celltype) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  dplyr::select(proportion, group_sglt2i, celltype) %>%
  ggplot(aes(x= celltype, y= proportion, fill = group_sglt2i)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))

```

## PT subtype proportions
### PT-1,-2,-3,-4,-5

```{r echo = F, warning  = F}
n_LC <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group == "Lean Control"))
n_OB <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group == "Obese Control"))
n_T2D <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group == "Type 2 Diabetes"))
n_OB_ni <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group_sglt2i == "OB(-)"))
n_T2D_ni <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group_sglt2i == "T2D(-)"))
n_OB_i <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group_sglt2i == "OB(+)"))
n_T2D_i <- nrow(so_oldid_subset@meta.data %>% filter(LR_clusters == "PT" & celltype != "PT_lowQuality" & group_sglt2i == "T2D(+)"))

so_oldid_subset@meta.data$celltype <- factor(so_oldid_subset@meta.data$celltype, levels = c("PT-1", "PT-2", "PT-3", "PT-4", "PT-5"))

## By PT subtypes (by celltype (S subtypes))
cellcount_bygrp <- so_oldid_subset@meta.data %>% 
  filter(LR_clusters == "PT" & celltype != "PT_lowQuality") %>%
  dplyr::group_by(group, celltype) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::mutate(n = case_when(group == "Lean Control" ~ n_LC, 
                              group == "Obese Control" ~ n_OB,
                              group == "Type 2 Diabetes" ~ n_T2D),
         ratio = count / n) %>% ungroup() %>%
  arrange(as.numeric(sub("PT-", "", celltype))) %>%
  group_by(celltype) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  dplyr::select(proportion, group, celltype) %>%
  ggplot(aes(x= celltype, y= proportion, fill = group)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a"))


## By PT subtypes (by celltype (S subtypes))
cellcount_bysgltgrp <- so_oldid_subset@meta.data %>% 
  filter(LR_clusters == "PT" & celltype != "PT_lowQuality") %>%
  dplyr::group_by(group_sglt2i, celltype) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::mutate(n = case_when(group_sglt2i == "LC" ~ n_LC, 
                              group_sglt2i == "OB(-)" ~ n_OB_ni,
                              group_sglt2i == "OB(+)" ~ n_OB_i,
                              group_sglt2i == "T2D(-)" ~ n_T2D_ni,
                              group_sglt2i == "T2D(+)" ~ n_T2D_i),
         ratio = count / n) %>% ungroup() %>%
  arrange(as.numeric(sub("PT-", "", celltype))) %>%
  group_by(celltype) %>%
  dplyr::mutate(proportion = ratio/sum(ratio)) %>%
  dplyr::select(proportion, group_sglt2i, celltype) %>%
  ggplot(aes(x= celltype, y= proportion, fill = group_sglt2i)) + 
  geom_bar(stat = "identity", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261"))

cellcount_bysubtype <- so_oldid_subset@meta.data %>% 
  filter(LR_clusters == "PT" & celltype != "PT_lowQuality") %>%
  ggplot(aes(group, fill = celltype)) + 
  geom_bar(stat = "count", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Cell type") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))

cellcount_bysubtype_sglt <- so_oldid_subset@meta.data %>% 
  filter(LR_clusters == "PT" & celltype != "PT_lowQuality") %>%
  ggplot(aes(group_sglt2i, fill = celltype)) + 
  geom_bar(stat = "count", position = "fill") +
  theme_classic() +
  labs(x = NULL,
       y = "Proportion",
       fill = "Cell type") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(plot.title = element_text(hjust=0.5, face="bold"),
        text = element_text(size = 20)) +
  ggtitle("Proportion of cells") +
  scale_fill_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#e76f51"))

cellcount_bygrp
cellcount_bysgltgrp
cellcount_bysubtype
cellcount_bysubtype_sglt
```

## DEG in PT

### Key transcripts of TCA cycle
#### Combined (T2D + LC)
##### By T2D status (T2D vs. LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_oldid_subset, genes, "group_t2d", "T2D", "Non-T2D", "PT","_tca_t2d")
kable(m_tca_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
so_oldid_subset_sub_not2d_sglt2i <- subset(so_oldid_subset, group_sglt2i != "T2D(+)")
so_oldid_subset_sub_not2d_sglt2i$group_t2dsglt2i <- ifelse(so_oldid_subset_sub_not2d_sglt2i$group_sglt2i != "T2D(-)", "Non-T2D", "T2D(-)")
plot_de_markers(so_oldid_subset_sub_not2d_sglt2i, genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_tca_t2dneg")
kable(m_tca_t2dneg, digits = 3)
```


#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
so_oldid_subset_t2d <- subset(so_oldid_subset, group == "Type 2 Diabetes")
plot_de_markers(so_oldid_subset_t2d, genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2d")
kable(m_tca_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_oldid_subset, group_sglt2i == "T2D(-)"), genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2dneg")
kable(m_tca_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_oldid_subset, group_sglt2i == "T2D(+)"), genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_tca_alb_t2dpos")
kable(m_tca_alb_t2dpos, digits = 3)
```


##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_oldid_subset_t2d, genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_ever_t2d")
kable(m_tca_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_oldid_subset_t2d, genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_tca_sglt2i_timpoint_t2d")
kable(m_tca_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots

##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-1"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-2"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-3"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-4"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-5"), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-1"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-2"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-3"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-4"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-5"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_tca_t2dsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset_t2d, celltype %in% c("PT-1", "PT-2", "PT-3")), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_oldid_subset_t2d, celltype %in%  c("PT-4", "PT-5")), genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_oldid_subset_t2d, celltype %in% c("PT-1", "PT-2", "PT-3")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_oldid_subset_t2d,  celltype %in% c("PT-4", "PT-5")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(genes = rownames(m.123))
match_45 <- (genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(genes = rownames(m.45))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_tca_t2dsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so_oldid_subset, celltype == "PT-1"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so_oldid_subset, celltype == "PT-2"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so_oldid_subset, celltype == "PT-3"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so_oldid_subset, celltype == "PT-4"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so_oldid_subset, celltype == "PT-5"), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-1"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-2"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-3"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-4"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-5"),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes = rownames(m.1))
match_2 <- (genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes = rownames(m.2))
match_3 <- (genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes = rownames(m.3))
match_4 <- (genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes = rownames(m.4))
match_5 <- (genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes = rownames(m.5))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_tca_t2dlc_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset, celltype %in% c("PT-1", "PT-2", "PT-3")), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so_oldid_subset, celltype %in%  c("PT-4", "PT-5")), genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") & celltype %in% c("PT-1", "PT-2", "PT-3")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &  celltype %in% c("PT-4", "PT-5")),
  features = genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(genes = rownames(m.123))
match_45 <- (genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(genes = rownames(m.45))

genes_subset_df <- as.data.frame(genes) %>%
  dplyr::mutate(x = seq_along(genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_tca_t2dlcsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

### Key transcripts of Oxidative Phosphorylation
#### Combined (T2D  + LC)
##### By T2D status (T2D vs.  LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_oldid_subset, oxy_phos_genes, "group_t2d", "T2D", "Non-T2D", "PT","_oxphos_t2d")
kable(m_oxphos_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_oldid_subset_sub_not2d_sglt2i, oxy_phos_genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_oxphos_t2dneg")
kable(m_oxphos_t2dneg, digits = 3)
```

#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_oldid_subset_t2d, oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2d")
kable(m_oxphos_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_oldid_subset, group_sglt2i == "T2D(-)"), oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2dneg")
kable(m_oxphos_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_oldid_subset, group_sglt2i == "T2D(+)"), oxy_phos_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_oxphos_alb_t2dpos")
kable(m_oxphos_alb_t2dpos, digits = 3)
```


##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_oldid_subset_t2d, oxy_phos_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_ever_t2d")
kable(m_oxphos_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_oldid_subset_t2d, oxy_phos_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_oxphos_sglt2i_timpoint_t2d")
kable(m_oxphos_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots
##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-1"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-2"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-3"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-4"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-5"), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-1"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-2"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-3"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-4"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-5"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_oxphos_t2dsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset_t2d, celltype %in% c("PT-1", "PT-2", "PT-3")), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_oldid_subset_t2d, celltype %in%  c("PT-4", "PT-5")), oxy_phos_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_oldid_subset_t2d, celltype %in% c("PT-1", "PT-2", "PT-3")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_oldid_subset_t2d,  celltype %in% c("PT-4", "PT-5")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (oxy_phos_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.123))
match_45 <- (oxy_phos_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.45))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_oxphos_t2dsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so_oldid_subset, celltype == "PT-1"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so_oldid_subset, celltype == "PT-2"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so_oldid_subset, celltype == "PT-3"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so_oldid_subset, celltype == "PT-4"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so_oldid_subset, celltype == "PT-5"), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-1"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-2"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-3"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-4"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-5"),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (oxy_phos_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.1))
match_2 <- (oxy_phos_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.2))
match_3 <- (oxy_phos_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.3))
match_4 <- (oxy_phos_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.4))
match_5 <- (oxy_phos_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.5))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_oxphos_t2dlc_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset, celltype %in% c("PT-1", "PT-2", "PT-3")), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so_oldid_subset, celltype %in%  c("PT-4", "PT-5")), oxy_phos_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") & celltype %in% c("PT-1", "PT-2", "PT-3")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &  celltype %in% c("PT-4", "PT-5")),
  features = oxy_phos_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (oxy_phos_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.123))
match_45 <- (oxy_phos_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(oxy_phos_genes = rownames(m.45))

genes_subset_df <- as.data.frame(oxy_phos_genes) %>%
  dplyr::mutate(x = seq_along(oxy_phos_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$oxy_phos_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_oxphos_t2dlcsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

### Key transcripts of lipid synthesis
#### Combined (T2D + LC)
##### By T2D status (T2D vs. LC)

Group 1 = "T2D"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_oldid_subset, lipid_genes, "group_t2d", "T2D", "Non-T2D", "PT","_lipidsyn_t2d")
kable(m_lipidsyn_t2d, digits = 3)
```

##### By T2D & SGLT2i ever status (T2D(-) vs. LC)

Group 1 = "T2D(-)"

Group 2 = "Non-T2D"

**Negative values** indicate that the transcript has a lower expression T2D(-) group compared to non-T2D group.

```{r echo = F}
plot_de_markers(so_oldid_subset_sub_not2d_sglt2i, lipid_genes, "group_t2dsglt2i", "T2D(-)", "Non-T2D", "PT","_lipidsyn_t2dneg")
kable(m_lipidsyn_t2dneg, digits = 3)
```

#### T2D only

##### By Albuminuria

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(so_oldid_subset_t2d, lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2d")
kable(m_lipidsyn_alb_t2d, digits = 3)
```

##### By Albuminuria (T2D(-) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_oldid_subset, group_sglt2i == "T2D(-)"), lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2dneg")
kable(m_lipidsyn_alb_t2dneg, digits = 3)
```

##### By Albuminuria (T2D(+) ONLY)

Group 1 = "Albuminuria"

Group 2 = "Non-Albuminuria"

**Negative values** indicate that the transcript has a lower expression Albuminuria group compared to Non-Albuminuria group.

```{r echo = F}
plot_de_markers(subset(so_oldid_subset, group_sglt2i == "T2D(+)"), lipid_genes, "elevated_albuminuria", id1 = "Yes", id2 = "No", "PT","_lipidsyn_alb_t2dpos")
kable(m_lipidsyn_alb_t2dpos, digits = 3)
```

##### By SGLT2i (ever)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_oldid_subset_t2d, lipid_genes, "epic_ever_sglt2i_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_ever_t2d")
kable(m_lipidsyn_sglt2i_ever_t2d, digits = 3)
```

##### By SGLT2i (timepoint)

Group 1 = "SGLT2i (T2D+)"

Group 2 = "Non-SGLT2i (T2D-)"

**Negative values** indicate that the transcript has a lower expression SGLT2i group compared to Non-SGLT2i group.

```{r echo = F}
plot_de_markers(so_oldid_subset_t2d, lipid_genes, "epic_sglti2_1", id1 = "Yes", id2 = "No", "PT","_lipidsyn_sglt2i_timpoint_t2d")
kable(m_lipidsyn_sglt2i_timpoint_t2d, digits = 3)
```

#### Dot Plots

##### PT subtypes in T2D only (PT-1,-2,-3,-4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-1"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".1")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-2"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".2")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-3"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".3")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-4"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".4")
de.markers(subset(so_oldid_subset_t2d, celltype == "PT-5"), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".5")

pt.1 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-1"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-2"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-3"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-4"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_oldid_subset_t2d, celltype == "PT-5"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (lipid_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.1))
match_2 <- (lipid_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.2))
match_3 <- (lipid_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.3))
match_4 <- (lipid_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.4))
match_5 <- (lipid_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.5))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_lipidsyn_t2dsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D only (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset_t2d, celltype %in% c("PT-1", "PT-2", "PT-3")), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".123")
de.markers(subset(so_oldid_subset_t2d, celltype %in%  c("PT-4", "PT-5")), lipid_genes, "group_sglt2i", 
           id2 = "T2D(-)", id1 = "T2D(+)", "PT", ".45")

pt.123 <- DotPlot(subset(so_oldid_subset_t2d, celltype %in% c("PT-1", "PT-2", "PT-3")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_oldid_subset_t2d,  celltype %in% c("PT-4", "PT-5")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (lipid_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.123))
match_45 <- (lipid_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.45))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(+)", "T2D(-)", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
pt.plot.subset

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_lipidsyn_t2dsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3,-4,-5)
```{r echo = F, warning = F}
de.markers(subset(so_oldid_subset, celltype == "PT-1"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".1")
de.markers(subset(so_oldid_subset, celltype == "PT-2"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".2")
de.markers(subset(so_oldid_subset, celltype == "PT-3"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".3")
de.markers(subset(so_oldid_subset, celltype == "PT-4"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".4")
de.markers(subset(so_oldid_subset, celltype == "PT-5"), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".5")

pt.1 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-1"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-2"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-3"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-4"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &
                                                 celltype == "PT-5"),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (lipid_genes %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.1))
match_2 <- (lipid_genes %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.2))
match_3 <- (lipid_genes %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.3))
match_4 <- (lipid_genes %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.4))
match_5 <- (lipid_genes %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.5))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)","LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_lipidsyn_t2dlc_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1300, height = 1450,units = "px")
```

##### PT subtypes in T2D(-) vs. LC (PT-1,-2,-3 vs. -4,-5)
```{r echo = F}
de.markers(subset(so_oldid_subset, celltype %in% c("PT-1", "PT-2", "PT-3")), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".123")
de.markers(subset(so_oldid_subset, celltype %in%  c("PT-4", "PT-5")), lipid_genes, "group_sglt2i", 
           id1 = "T2D(-)", id2 = "LC", "PT", ".45")

pt.123 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") & celltype %in% c("PT-1", "PT-2", "PT-3")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-123:",id))
pt.45 <- DotPlot(subset(so_oldid_subset, group_sglt2i %in% c("T2D(-)", "LC") &  celltype %in% c("PT-4", "PT-5")),
  features = lipid_genes,idents = "PT", group.by = "group_sglt2i",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-45:",id))

pt_dot <-rbind(pt.123, pt.45)
match_123 <- (lipid_genes %in% genes_subset.123) * 3.5
m123.label <- m.123 %>% dplyr::mutate(m123.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m123.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.123))
match_45 <- (lipid_genes %in% genes_subset.45) * 1.5
m45.label <- m.45 %>% dplyr::mutate(m45.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m45.label) %>%
  dplyr::mutate(lipid_genes = rownames(m.45))

genes_subset_df <- as.data.frame(lipid_genes) %>%
  dplyr::mutate(x = seq_along(lipid_genes)) %>% 
  cbind(match_123, match_45)  %>%
  left_join(m123.label) %>% left_join(m45.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 17)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_123, label = m123.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_45, label = m45.label), color = "#006d77", size = 6,
            angle = 90, vjust = 0.35) +
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()
  
for (i in c("123","45")) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$lipid_genes) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  p_val_adj = p_format(p_val_adj), 
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val, p_val_adj) 
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T2D(-)", "LC", "Log2FC", "p-value", "q-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[["123"]], NULL, 
                         table_list[["45"]], ncol = 1,
                         heights = c(1,0,1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/run/user/1023/gvfs/smb-share:server=ucdenver.pvt,share=som/PEDS/RI Biostatistics Core/Shared/Shared Projects/Laura/Peds Endo/Petter Bjornstad/RH_ROCKIES/Figures/Dot_PT_subcells_adapt_lipidsyn_t2dlcsglt2i_jci.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1400, height = 950, units = "px")
```


### Key transcripts of Glycolysis

```{r echo = F}
so_oldid_subset$t2d_sglt2i_neg <- ifelse(so_oldid_subset$group == "Type 2 Diabetes" & so_oldid_subset$epic_ever_sglt2i_1 == "No", "T2Di(-)", so_oldid_subset$group)
so_oldid_subset$t2d_sglt2i <- ifelse(so_oldid_subset$group == "Type 2 Diabetes" & so_oldid_subset$epic_ever_sglt2i_1 == "Yes", "T2Di(+)", so_oldid_subset$t2d_sglt2i_neg)
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_oldid_subset, glycolysis_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glyc_t2di_hc")
kable(m_glyc_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_oldid_subset, glycolysis_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glyc_t2di")
kable(m_glyc_t2di, digits = 3)
```

### Key transcripts of Gluconeogensesis

```{r echo = F}
gluconeogenesis_genes <- c("SLC25A10", "GOT2", "GOT1", "FBP1", "SLC25A11", "PCK1", "MDH1")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_oldid_subset, gluconeogenesis_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glucogen_t2di_hc")
kable(m_glucogen_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_oldid_subset, gluconeogenesis_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glucogen_t2di")
kable(m_glucogen_t2di, digits = 3)
```

### Key transcripts of Pyruvate metabolism and TCA cycle

```{r echo = F}
pyruvate_tca <- c("SDHB", "SUCLG1", "PDK2", "ACO2", "IDH3G", "SUCLA2", "HAGH", "PDHB", "LDHA")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_oldid_subset, pyruvate_tca, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_pyruvate_tca_t2di_hc")
kable(m_pyruvate_tca_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_oldid_subset, pyruvate_tca, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_pyruvate_tca_t2di")
kable(m_pyruvate_tca_t2di, digits = 3)
```

### Key transcripts of Glutathione conjugation

```{r echo = F}
glut_conj <- c("CNDP2", "GSTM4", "GSTT2B", "GSTO1", "GGCT", "GSTM3", "AKR1A1")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_oldid_subset, glut_conj, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_glut_conj_t2di_hc")
kable(m_glut_conj_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_oldid_subset, glut_conj, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_glut_conj_t2di")
kable(m_glut_conj_t2di, digits = 3)
```

### Key transcripts of Metallothioneins bind metals

```{r echo = F}
metal_genes <- c("MT1G", "MT1X", "MT1H", "MT2A")
```

#### JCI (T2Di(-) vs. HC)
##### By T2D status (T2Di(-) vs HC)

Group 1 = "T2Di(-)"

Group 2 = "HC"

**Negative values** indicate that the transcript has a lower expression T2Di(-) group compared to HC group.

```{r echo = F}
plot_de_markers(so_oldid_subset, metal_genes, "t2d_sglt2i_neg", id1 = "T2Di(-)", id2 = "Lean Control", "PT","_metal_t2di_hc")
kable(m_metal_t2di_hc, digits = 3)
```

#### JCI (T2Di(+) vs. T2Di(-))
##### By T2D status (T2Di(+) vs T2Di(-))

Group 1 = "T2Di(+)"

Group 2 = "T2Di(-)"

**Negative values** indicate that the transcript has a lower expression T2Di(+) group compared to T2Di(-) group.

```{r echo = F}
plot_de_markers(so_oldid_subset, metal_genes, "t2d_sglt2i", id1 = "T2Di(+)", id2 = "T2Di(-)", "PT","_metal_t2di")
kable(m_metal_t2di, digits = 3)
```

```{r echo = F, include = F}
## str_sort(unique(so$record_id))
## str_sort(unique(so_oldid_subset$record_id))
unique(so$record_id)[unique(so$record_id) %nin% unique(so_oldid_subset$record_id)]

unique(so_old$michigan_id)
unique(so_oldid_subset$record_id)

nrow(so_oldid_subset)

```


# Correlations

```{r echo = F}
## Correlation / heat map showing association between PET data and transcripts (and consider estimates of insulin sensitivity) (RH/RH2, CRC)
## Extract individual level expression of scRNA
## meta_features <- so[["RNA"]]@meta.features
## a <- rownames(meta_features)
## var_list <- c("sample", "ident", "michigan_id", genes_subset)
## pt_md <- FetchData(so, vars = var_list) %>%
## filter(ident == "PT")
```

### Combined (T2D + OB + LC)

```{r echo = F}

```

### T2D & OB only (T2D + OB)


```{r echo = F}
## Pseudotime trajectories according to T2D status, albuminuria and SGLT2i as well as proportion of PT subpopulations across these groups (RH/RH2, CRC)

```

