---
title: "CROCODILE scRNAseq"
author: "Laura Pyle, Tim Vigers & Ye Ji Choi"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
    fig-width: 8
    fig-height: 8
editor: source
---

```{r libraries}
#| include: false
library(Seurat)
```

```{r scRNA data setup}
#| message: false
# Import
so <- readRDS("/Users/timvigers/Library/CloudStorage/Dropbox/Work/Petter Bjornstad/scRNA/Data_Clean/seurat_data_no_computations.RDS")
# CROCODILE only
so <- so[, grepl("CRC", so$michigan_id)]
# Exclude control with IgA
so <- subset(so, T2D_HC_Phil != "HC_igA")
so$Group <- so$T2D_HC_Phil
# Normalize and scale
so <- NormalizeData(so)
so <- ScaleData(so)
# PCA
so <- RunPCA(so, features = VariableFeatures(object = so))
# Cluster cells
so <- FindNeighbors(so)
so <- FindClusters(so)
# Perform UMAP
so <- RunUMAP(so, dims = 1:20)
# General cell types as identifiers
so$generaltype <- sub("_.*", "", so$LR_clusters)
Idents(so) <- so$LR_clusters
# Get genes of interest (TCA cycle)
genes <- c(
  "ACO1", "ACO2", "IDH1", "IDH2", "IDH3A", "IDH3B", "IDH3G", "OGDH", "OGDHL",
  "SUCLA2", "SUCLG1", "SUCLG2", "SDHA", "SDHB", "SDHC", "SDHD", "FH", "MDH1",
  "MDH2"
)
genes_subset <- c("ACO1", "IDH1", "SUCLG1")
```

# UMAP

## By group

```{r}
DimPlot(so, reduction = "umap", group.by = "Group")
```

## By LR_cluster

```{r}
DimPlot(so,
  reduction = "umap",
  order = sort(as.character(unique(Idents(so))), decreasing = T)
)
```

## By group and feature

```{r}
FeaturePlot(so,
  features = genes_subset, split.by = "Group", order = T,
  cols = RColorBrewer::brewer.pal(3, "YlGnBu")
)
```

```{r results='asis'}
invisible(lapply(genes_subset, function(g) {
  cat("\n")
  cat("###", g)
  cat("\n")
  FeaturePlot(so,
    features = g, split.by = "Group", order = T,
    cols = RColorBrewer::brewer.pal(3, "YlGnBu")
  )
}))
```

# Violin plots

## In PT cells

```{r}
VlnPlot(so, features = genes_subset, group.by = "Group", idents = "PT")
```

# Ridge plots

## In PT cells

```{r}
#| message: false
RidgePlot(so, features = genes_subset, group.by = "Group", idents = "PT")
```

# Dot plot

```{r}
DotPlot(so,
  features = genes_subset, idents = "PT", split.by = "Group",
  cols = "RdGy", scale = F
)
```

# Differential expression

In the table below, HC are the reference group.

```{r}
m = FindMarkers(so,features = genes_subset,group.by = "Group",ident.1 = "HC", 
                subset.ident = "PT",verbose = F,logfc.threshold=0)
knitr::kable(m,digits = 3)
```
