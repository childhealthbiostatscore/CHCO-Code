---
title: "CROCODILE scRNA DEG"
author: "Ye Ji Choi & Laura Pyle"
date: "today"
date-format: long
execute: 
  echo: false
  warning: false
  messages: false
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---
```{r libraries}
#| include: false
library(Seurat)
library(future)
library(tidyverse)
library(colorspace)
library(patchwork)
library(ggdendro)
library(cowplot)
library(ggtree)
library(ggpubr)
library(rstatix)
library(table1)
library(GSVA)
library(Biobase)
library(ReactomeGSA)
library(GSEABase)
library(GSVAdata)
library(msigdbr)
library(kableExtra)
library(knitr)
```


```{r}
so <- readRDS("/home/yejichoi/Documents/seurat_data_CRC.RDS")
source("/home/yejichoi/Documents/CHCO-Code/Petter Bjornstad/CROCODILE/crocodile_functions.R")
```

# Differential expression

In the tables below, T1D are group 1 and HC are group 2. Negative values indicate that the gene is more highly expressed in the second group (HC).

## TCA cycle genes
```{r}
de.markers(so, genes, "Group", id2 = "HC", id1 = "T1D", "PT", "")
```
### PT subtypes
#### PT-1
```{r}
de.markers(subset(so, celltype == "PT-1"), genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".1")
```
#### PT-2
```{r}
de.markers(subset(so, celltype == "PT-2"), genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".2")
```
#### PT-3
```{r}
de.markers(subset(so, celltype == "PT-3"), genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".3")
```
#### PT-4
```{r}
de.markers(subset(so, celltype == "PT-4"), genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".4")
```
#### PT-5
```{r}
de.markers(subset(so, celltype == "PT-5"), genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".5")
```

#### PT-S1/S2
```{r}
de.markers(subset(so, KPMP_celltype == "PT-S1/S2"), genes, "Group", id2 = "HC", id1 = "T1D", NULL, ".S12")
```
#### PT-S3
```{r}
de.markers(subset(so, KPMP_celltype == "PT-S3"), genes, "Group", id2 = "HC", id1 = "T1D", NULL, ".S3")
```
#### dPT
```{r}
de.markers(subset(so, KPMP_celltype == "dPT"), genes, "Group", id2 = "HC", id1 = "T1D", NULL, ".dPT")
```
#### cycPT
```{r}
de.markers(subset(so, KPMP_celltype == "dPT/DTL"), genes, "Group", id2 = "HC", id1 = "T1D", NULL, ".dPTDTL")
```
#### aPT
```{r}
de.markers(subset(so, KPMP_celltype == "aPT"), genes, "Group", id2 = "HC", id1 = "T1D", NULL, ".aPT")
```

### Figures
#### PT only
```{r}
# split.vp(seurat_object = so, genes = genes_subset, filepath = "/home/yejichoi/Documents/lin_temp_folder/")
split.vp.combined(seurat_object = so, genes = genes_subset, filepath = "/home/yejichoi/Documents/lin_temp_folder/")

pt.plot_table <- dp.formatted(seurat_object = so, genes = genes_subset, group.by = "Group",
                   celltype = "PT", m = m)

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_cells_1920x1080.jpeg",
       plot = pt.plot_table, scale = 3,
       width = 1000,height = 500,units = "px")
pt.plot_table

pt.1 <- DotPlot(subset(so, celltype == "PT-1"),
  features = genes_subset,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so, celltype == "PT-2"),
  features = genes_subset,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so, celltype == "PT-3"),
  features = genes_subset,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so, celltype == "PT-4"),
  features = genes_subset,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so, celltype == "PT-5"),
  features = genes_subset,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes_subset %in% genes_subset.1) * 9.5
m1.label <- m.1 %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes_subset = rownames(m.1))
genes_subset.2 <- ""
match_2 <- (genes_subset %in% genes_subset.2) * 7.5
m2.label <- m.2 %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes_subset = rownames(m.2))
match_3 <- (genes_subset %in% genes_subset.3) * 5.5
m3.label <- m.3 %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes_subset = rownames(m.3))
match_4 <- (genes_subset %in% genes_subset.4) * 3.5
m4.label <- m.4 %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes_subset = rownames(m.4))
match_5 <- (genes_subset %in% genes_subset.5) * 1.5
m5.label <- m.5 %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes_subset = rownames(m.5))

genes_subset_df <- as.data.frame(genes_subset) %>%
  dplyr::mutate(x = seq_along(genes_subset)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_df[genes_subset_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 8),
        legend.title = element_text(size = 8, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal",
        axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 15)) +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()

for (i in 1:5) {
  m_i <- get(paste0("m.", i))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_df$genes_subset) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val)
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(
      pt.table,
      cols = c("T1D", "HC", "Log2FC", "p-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15) 
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,-0.3,
                                     1,-0.3,
                                     1,-0.3,
                                     1)
                         )
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table
ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_subcells_tca.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1200, height = 700,units = "px")
```

#### Bar plot
```{r}
m.1 <- add_direction(m.1)
m.2 <- add_direction(m.2)
m.3 <- add_direction(m.3)
m.4 <- add_direction(m.4)
m.5 <- add_direction(m.5)
m.1 <- rownames_to_column(m.1, var = "gene")
m.2 <- rownames_to_column(m.2, var = "gene")
m.3 <- rownames_to_column(m.3, var = "gene")
m.4 <- rownames_to_column(m.4, var = "gene")
m.5 <- rownames_to_column(m.5, var = "gene")
m.1$source <- "PT-1"
m.2$source <- "PT-2"
m.3$source <- "PT-3"
m.4$source <- "PT-4"
m.5$source <- "PT-5"
combined_m <- bind_rows(m.1, m.2, m.3, m.4, m.5) %>% filter(gene %in% genes_subset_df$genes_subset)

direction_colors <- c("Upregulated" = "#d90429", "Downregulated" = "#83c5be", "NS" = "#eaeaea")
combined_m$gene <- factor(combined_m$gene, levels = genes_subset)

pt.barplot.subset <- ggplot(combined_m, aes(x = gene, y = avg_log2FC, fill = direction)) +
  geom_col() +
  scale_fill_manual(values = direction_colors,
                    labels = c("Downregulated    ",
                               "Upregulated     ",
                               "NS")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 70, hjust = 1),
        text = element_text(size = 15),
        panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", color = "white"),
        panel.spacing = unit(-1, 'lines'),
        legend.position = "top",
        aspect.ratio = 0.5/1) +
  scale_y_continuous(position = "right", limits = c(-0.5, 0.5),
                     breaks = c(-0.25, 0, 0.25)) +
  labs(x = NULL, y = "Avg Log2FC", fill = "Log2FC Direction  ") +
  facet_wrap(~ source, ncol = 1,
             strip.position = "left") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 0.2) 

ptsub.barplot_table <- ggarrange(pt.barplot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1,0,1), common.legend = T)
ptsub.barplot_table

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Bar_PT_subcells_tca.jpeg",
       plot = ptsub.barplot_table, scale = 3.5,
       width = 800, height = 900,units = "px")
```

#### All cells
```{r}
dp = DotPlot(so,
  features = genes_subset, scale = T,scale.by= "size",dot.scale = 10)
dp
ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_All_1600x900.jpeg",
       plot = dp,scale = 3,
       width = 1600,height = 900,units = "px")
```

## Acetyl CoA genes
```{r}
de.markers(so, acetylcoa_genes, "Group", id2 = "HC", id1 = "T1D", "PT", "_acetylcoa")
```
### PT subtypes
#### PT-1
```{r}
de.markers(subset(so, celltype == "PT-1"), acetylcoa_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".1_acetylcoa")
```
#### PT-2
```{r}
de.markers(subset(so, celltype == "PT-2"), acetylcoa_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".2_acetylcoa")
```
#### PT-3
```{r}
de.markers(subset(so, celltype == "PT-3"), acetylcoa_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".3_acetylcoa")
```
#### PT-4
```{r}
de.markers(subset(so, celltype == "PT-4"), acetylcoa_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".4_acetylcoa")
```
#### PT-5
```{r}
de.markers(subset(so, celltype == "PT-5"), acetylcoa_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".5_acetylcoa")
```
### Figures
```{r}
# Violin plot
# split.vp(seurat_object = so, genes = genes_subset_acetylcoa, filepath = "/home/yejichoi/Documents/lin_temp_folder/")
split.vp.combined(seurat_object = so, genes = genes_subset_acetylcoa, filepath = "/home/yejichoi/Documents/lin_temp_folder/acetylcoa_")

# Dot plot
pt.plot_table_acetylcoa <- dp.formatted(seurat_object = so, genes = genes_subset_acetylcoa, group.by = "Group",
                   celltype = "PT", m = m_acetylcoa)

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_cells_acetylcoa.jpeg",
       plot = pt.plot_table_acetylcoa, scale = 3,
       width = 1000,height = 500,units = "px")
pt.plot_table_acetylcoa

# Dot plot with table
pt.1 <- DotPlot(subset(so, celltype == "PT-1"),
  features = genes_subset_acetylcoa,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so, celltype == "PT-2"),
  features = genes_subset_acetylcoa,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so, celltype == "PT-3"),
  features = genes_subset_acetylcoa,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so, celltype == "PT-4"),
  features = genes_subset_acetylcoa,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so, celltype == "PT-5"),
  features = genes_subset_acetylcoa,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes_subset_acetylcoa %in% genes_subset.1_acetylcoa) * 9.5
m1.label <- m.1_acetylcoa %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes_subset_acetylcoa = rownames(m.1_acetylcoa))
genes_subset_acetylcoa.2 <- ""
match_2 <- (genes_subset_acetylcoa %in% genes_subset.2_acetylcoa) * 7.5
m2.label <- m.2_acetylcoa %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes_subset_acetylcoa = rownames(m.2_acetylcoa))
match_3 <- (genes_subset_acetylcoa %in% genes_subset.3_acetylcoa) * 5.5
m3.label <- m.3_acetylcoa %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes_subset_acetylcoa = rownames(m.3_acetylcoa))
match_4 <- (genes_subset_acetylcoa %in% genes_subset.4_acetylcoa) * 3.5
m4.label <- m.4_acetylcoa %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes_subset_acetylcoa = rownames(m.4_acetylcoa))
genes_subset.5_acetylcoa <- ""
match_5 <- (genes_subset_acetylcoa %in% genes_subset.5_acetylcoa) * 1.5
m5.label <- m.5_acetylcoa %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes_subset_acetylcoa = rownames(m.5_acetylcoa))

genes_subset_acetylcoa_df <- as.data.frame(genes_subset_acetylcoa) %>%
  dplyr::mutate(x = seq_along(genes_subset_acetylcoa)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_acetylcoa_df[genes_subset_acetylcoa_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,80)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 8),
        legend.title = element_text(size = 8, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal") +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_acetylcoa_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_acetylcoa_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_acetylcoa_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_acetylcoa_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_acetylcoa_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()

for (i in 1:5) {
  m_i <- get(paste0("m.", i,"_acetylcoa"))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_acetylcoa_df$genes_subset_acetylcoa) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val)
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(pt.table,
      cols = c("T1D", "HC", "Log2FC", "p-value"),
      theme = ttheme("blank")
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""))
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL,
                         table_list[[2]], NULL, 
                         table_list[[4]], NULL, ncol = 1,
                         heights = c(1, -0.5,
                                     1,0.5,
                                     1, 1),
                         font.label = list(size = 10))
ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_subcells_acetylcoa.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1200,height = 700,units = "px")
```
#### Bar plot
```{r}
m.1_acetylcoa <- add_direction(m.1_acetylcoa)
m.2_acetylcoa <- add_direction(m.2_acetylcoa)
m.3_acetylcoa <- add_direction(m.3_acetylcoa)
m.4_acetylcoa <- add_direction(m.4_acetylcoa)
m.5_acetylcoa <- add_direction(m.5_acetylcoa)
m.1_acetylcoa <- rownames_to_column(m.1_acetylcoa, var = "gene")
m.2_acetylcoa <- rownames_to_column(m.2_acetylcoa, var = "gene")
m.3_acetylcoa <- rownames_to_column(m.3_acetylcoa, var = "gene")
m.4_acetylcoa <- rownames_to_column(m.4_acetylcoa, var = "gene")
m.5_acetylcoa <- rownames_to_column(m.5_acetylcoa, var = "gene")
m.1_acetylcoa$source <- "PT-1"
m.2_acetylcoa$source <- "PT-2"
m.3_acetylcoa$source <- "PT-3"
m.4_acetylcoa$source <- "PT-4"
m.5_acetylcoa$source <- "PT-5"
combined_m <- bind_rows(m.1_acetylcoa, m.2_acetylcoa, m.3_acetylcoa, m.4_acetylcoa, m.5_acetylcoa) %>% 
  filter(gene %in% genes_subset_acetylcoa_df$genes_subset_acetylcoa)

direction_colors <- c("Upregulated" = "#d90429", "Downregulated" = "#83c5be", "NS" = "#eaeaea")
combined_m$gene <- factor(combined_m$gene, levels = genes_subset_acetylcoa)

pt.barplot.subset <- ggplot(combined_m, aes(x = gene, y = avg_log2FC, fill = direction)) +
  geom_col() +
  scale_fill_manual(values = direction_colors,
                    labels = c("Downregulated    ",
                               "Upregulated     ",
                               "NS")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 70, hjust = 1),
        panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", color = "white"),
        panel.spacing = unit(-1, 'lines'),
        legend.position = "top",
        aspect.ratio = 0.5/1) +
  scale_y_continuous(position = "right", limits = c(-0.5, 0.5),
                     breaks = c(-0.25, 0, 0.25)) +
  labs(x = NULL, y = "Avg Log2FC", fill = "Log2FC Direction  ") +
  facet_wrap(~ source, ncol = 1,
             strip.position = "left") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 0.2) 

ptsub.barplot_table <- ggarrange(pt.barplot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.5,1), common.legend = T)
ptsub.barplot_table

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Bar_PT_subcells_acetylcoa.jpeg",
       plot = ptsub.barplot_table, scale = 3.5,
       width = 1100, height = 900,units = "px")

```


## Oxygen phosphorylation genes
```{r}
de.markers(so, oxy_phos_genes, "Group", id2 = "HC", id1 = "T1D", "PT", "_oxy_phos")
```
### PT subtypes
#### PT-1
```{r}
de.markers(subset(so, celltype == "PT-1"), oxy_phos_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".1_oxy_phos")
```
#### PT-2
```{r}
de.markers(subset(so, celltype == "PT-2"), oxy_phos_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".2_oxy_phos")
```
#### PT-3
```{r}
de.markers(subset(so, celltype == "PT-3"), oxy_phos_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".3_oxy_phos")
```
#### PT-4
```{r}
de.markers(subset(so, celltype == "PT-4"), oxy_phos_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".4_oxy_phos")
```
#### PT-5
```{r}
de.markers(subset(so, celltype == "PT-5"), oxy_phos_genes, "Group", id2 = "HC", id1 = "T1D", "PT", ".5_oxy_phos")
```
### Figures
```{r}
# violin plot
# split.vp(seurat_object = so, genes = genes_subset_oxy_phos, filepath = "/home/yejichoi/Documents/lin_temp_folder/")
split.vp.combined(seurat_object = so, genes = genes_subset_oxy_phos, filepath = "/home/yejichoi/Documents/lin_temp_folder/oxy_phos_")

# dot plot
pt.plot_table_oxy_phos <- dp.formatted(seurat_object = so, genes = genes_subset_oxy_phos, group.by = "Group",
                   celltype = "PT", m = m_oxy_phos)

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_cells_oxy_phos.jpeg",
       plot = pt.plot_table_oxy_phos, scale = 3,
       width = 1000,height = 500,units = "px")
pt.plot_table_oxy_phos

# dot plot with table
pt.1 <- DotPlot(subset(so, celltype == "PT-1"),
  features = genes_subset_oxy_phos,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1:",id))
pt.2 <- DotPlot(subset(so, celltype == "PT-2"),
  features = genes_subset_oxy_phos,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2:",id))
pt.3 <- DotPlot(subset(so, celltype == "PT-3"),
  features = genes_subset_oxy_phos,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3:",id))
pt.4 <- DotPlot(subset(so, celltype == "PT-4"),
  features = genes_subset_oxy_phos,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4:",id))
pt.5 <- DotPlot(subset(so, celltype == "PT-5"),
  features = genes_subset_oxy_phos,idents = "PT", group.by = "Group",
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5:",id))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)
match_1 <- (genes_subset_oxy_phos %in% genes_subset.1_oxy_phos) * 9.5
m1.label <- m.1_oxy_phos %>% dplyr::mutate(m1.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<"))%>%
  dplyr::select(m1.label) %>%
  dplyr::mutate(genes_subset_oxy_phos = rownames(m.1_oxy_phos))
genes_subset_oxy_phos.2 <- ""
match_2 <- (genes_subset_oxy_phos %in% genes_subset.2_oxy_phos) * 7.5
m2.label <- m.2_oxy_phos %>% dplyr::mutate(m2.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m2.label) %>%
  dplyr::mutate(genes_subset_oxy_phos = rownames(m.2_oxy_phos))
match_3 <- (genes_subset_oxy_phos %in% genes_subset.3_oxy_phos) * 5.5
m3.label <- m.3_oxy_phos %>% dplyr::mutate(m3.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m3.label) %>%
  dplyr::mutate(genes_subset_oxy_phos = rownames(m.3_oxy_phos))
match_4 <- (genes_subset_oxy_phos %in% genes_subset.4_oxy_phos) * 3.5
m4.label <- m.4_oxy_phos %>% dplyr::mutate(m4.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m4.label) %>%
  dplyr::mutate(genes_subset_oxy_phos = rownames(m.4_oxy_phos))
match_5 <- (genes_subset_oxy_phos %in% genes_subset.5_oxy_phos) * 1.5
m5.label <- m.5_oxy_phos %>% dplyr::mutate(m5.label = case_when(p_val <= 0.05 & pct.1 > pct.2 ~ ">",
                                                p_val <= 0.05 & pct.1 < pct.2 ~ "<")) %>%
  dplyr::select(m5.label) %>%
  dplyr::mutate(genes_subset_oxy_phos = rownames(m.5_oxy_phos))

genes_subset_oxy_phos_df <- as.data.frame(genes_subset_oxy_phos) %>%
  dplyr::mutate(x = seq_along(genes_subset_oxy_phos)) %>% 
  cbind(match_1, match_2, match_3, match_4, match_5)  %>%
  left_join(m1.label) %>% left_join(m2.label) %>% left_join(m3.label) %>%
  left_join(m4.label) %>% left_join(m5.label) 
genes_subset_oxy_phos_df[genes_subset_oxy_phos_df==0] <- NA

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 2,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,4)) +
  scale_size(range = c(0,15), limits = c(1,99)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 8),
        legend.title = element_text(size = 8, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal") +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression     ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  geom_hline(yintercept = 6.5, size = .3, color = "gray") +
  geom_hline(yintercept = 8.5, size = .3, color = "gray") +
  geom_text(data = genes_subset_oxy_phos_df, aes(x = x, y = match_1, label = m1.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_oxy_phos_df, aes(x = x, y = match_2, label = m2.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_oxy_phos_df, aes(x = x, y = match_3, label = m3.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_oxy_phos_df, aes(x = x, y = match_4, label = m4.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) +
  geom_text(data = genes_subset_oxy_phos_df, aes(x = x, y = match_5, label = m5.label), color = "#006d77", size = 4,
            angle = 90, vjust = 0.35) + 
    scale_y_discrete(limits=rev)

# Create an empty list to store the tables
table_list <- list()

for (i in 1:5) {
  m_i <- get(paste0("m.", i, "_oxy_phos"))  # Dynamically access m.i
  
  pt.table <- m_i %>%
    filter(p_val <= 0.05 & rownames(m_i) %in% genes_subset_oxy_phos_df$genes_subset_oxy_phos) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val)
  
  # Check if pt.table is empty, if not, proceed
  if (nrow(pt.table) > 0) {
    gg.pt.table <- ggtexttable(pt.table,
      cols = c("T1D", "HC", "Log2FC", "p-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("% Expressed in PT-", i, " Cells", sep = ""), size = 15)
    
    table_list[[i]] <- gg.pt.table  # Store the table in the list
  }
}

gg.pt.table <- ggarrange(table_list[[1]], NULL,
                         table_list[[2]], NULL, 
                         table_list[[3]], NULL, 
                         table_list[[4]], NULL, 
                         table_list[[5]], ncol = 1,
                         heights = c(1,0.1,
                                     1,0.1,
                                     1,0.1,
                                     1.5,0.1,
                                     1),
                         font.label = list(size = 10))

ptsub.plot_table <- ggarrange(pt.plot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,-0.1,1), common.legend = T)
ptsub.plot_table

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_subcells_oxphos.jpeg",
       plot = ptsub.plot_table, scale = 3.5,
       width = 1200,height = 700,units = "px")

```

#### Bar plot
```{r}
m.1_oxy_phos <- add_direction(m.1_oxy_phos)
m.2_oxy_phos <- add_direction(m.2_oxy_phos)
m.3_oxy_phos <- add_direction(m.3_oxy_phos)
m.4_oxy_phos <- add_direction(m.4_oxy_phos)
m.5_oxy_phos <- add_direction(m.5_oxy_phos)
m.1_oxy_phos <- rownames_to_column(m.1_oxy_phos, var = "gene")
m.2_oxy_phos <- rownames_to_column(m.2_oxy_phos, var = "gene")
m.3_oxy_phos <- rownames_to_column(m.3_oxy_phos, var = "gene")
m.4_oxy_phos <- rownames_to_column(m.4_oxy_phos, var = "gene")
m.5_oxy_phos <- rownames_to_column(m.5_oxy_phos, var = "gene")
m.1_oxy_phos$source <- "PT-1"
m.2_oxy_phos$source <- "PT-2"
m.3_oxy_phos$source <- "PT-3"
m.4_oxy_phos$source <- "PT-4"
m.5_oxy_phos$source <- "PT-5"
combined_m <- bind_rows(m.1_oxy_phos, m.2_oxy_phos, m.3_oxy_phos, m.4_oxy_phos, m.5_oxy_phos) %>% 
  filter(gene %in% genes_subset_oxy_phos_df$genes_subset_oxy_phos)

direction_colors <- c("Upregulated" = "#d90429", "Downregulated" = "#83c5be", "NS" = "#eaeaea")
combined_m$gene <- factor(combined_m$gene, levels = genes_subset_oxy_phos)

pt.barplot.subset <- ggplot(combined_m, aes(x = gene, y = avg_log2FC, fill = direction)) +
  geom_col() +
  scale_fill_manual(values = direction_colors,
                    labels = c("Downregulated    ",
                               "Upregulated     ",
                               "NS")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 70, hjust = 1),
        panel.grid = element_blank(),
        text = element_text(size = 15),
        strip.background = element_rect(fill = "white", color = "white"),
        panel.spacing = unit(-1, 'lines'),
        legend.position = "top",
        aspect.ratio = 0.5/1) +
  scale_y_continuous(position = "right", limits = c(-0.7, 0.7),
                     breaks = c(-0.5, -0.25, 0, 0.25, 0.5)) +
  labs(x = NULL, y = "Avg Log2FC", fill = "Log2FC Direction  ") +
  facet_wrap(~ source, ncol = 1,
             strip.position = "left") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 0.2) 

ptsub.barplot_table <- ggarrange(pt.barplot.subset, NULL, gg.pt.table,
          nrow = 1, widths = c(1.5,0,1), common.legend = T)
ptsub.barplot_table

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Bar_PT_subcells_oxyphos.jpeg",
       plot = ptsub.barplot_table, scale = 3.5,
       width = 900, height = 900,units = "px")

```
## CKD genes
```{r}
de.markers(so, ckd_genes, "Group", id2 = "HC", id1 = "T1D", "PT", "_ckd")
```
### Figures
```{r}
# violin plot
# split.vp(seurat_object = so, genes = genes_subset_ckd, filepath = "/home/yejichoi/Documents/lin_temp_folder/")
split.vp.combined(seurat_object = so, genes = genes_subset_ckd, filepath = "/home/yejichoi/Documents/lin_temp_folder/ckd_")

# dot plot
pt.plot_table_ckd <- dp.formatted(seurat_object = so, genes = genes_subset_ckd, group.by = "Group",
                   celltype = "PT", m = m_ckd)

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_cells_ckd.jpeg",
       plot = pt.plot_table_ckd, scale = 3,
       width = 1000,height = 500,units = "px")
pt.plot_table_ckd

```

## IR genes
```{r}
de.markers(so, ir_genes, "Group", id2 = "HC", id1 = "T1D", "PT", "_ir")
```
### Figures
```{r}
# Violin plot
# split.vp(seurat_object = so, genes = genes_subset_ir, filepath = "/home/yejichoi/Documents/lin_temp_folder/")
split.vp.combined(seurat_object = so, genes = genes_subset_ir, filepath = "/home/yejichoi/Documents/lin_temp_folder/ir_")

# Dot plot
pt.plot_table_ir <- dp.formatted(seurat_object = so, genes = genes_subset_ir, group.by = "Group",
                   celltype = "PT", m = m_ir)

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_cells_IR.jpeg",
       plot = pt.plot_table_ir, scale = 3,
       width = 1000,height = 500,units = "px")
pt.plot_table_ir

```

## SGLT2i genes
```{r}
de.markers(so, sglt2_genes, "Group", id2 = "HC", id1 = "T1D", "PT", "_sglt2")
```

### Figures
```{r}
# violin plot
# split.vp(seurat_object = so, genes = genes_subset_sglt2, filepath = "/home/yejichoi/Documents/lin_temp_folder/")
split.vp.combined(seurat_object = so, genes = genes_subset_sglt2, filepath = "/home/yejichoi/Documents/lin_temp_folder/sglt2_")

# dot plot
pt.plot_table_sglt2 <- dp.formatted(seurat_object = so, genes = genes_subset_sglt2, group.by = "Group",
                   celltype = "PT", m = m_sglt2)

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_cells_sglt2.jpeg",
       plot = pt.plot_table_sglt2, scale = 3,
       width = 1000,height = 500,units = "px")

pt.plot_table_sglt2

```


## Leptin & adiponectin genes
### Cell types
#### EC-AEA
```{r}
de.markers(subset(so, celltype == "EC-AEA"), leptin_adipo_genes, "Group", id2 = "HC", id1 = "T1D", "EC", "_leptin_adipo_ECAEA")
```
#### EC-GC
```{r}
de.markers(subset(so, celltype == "EC-GC"), leptin_adipo_genes, "Group", id2 = "HC", id1 = "T1D", "EC", "_leptin_adipo_ECGC")
```
#### POD
```{r}
de.markers(subset(so, celltype == "POD"), leptin_adipo_genes, "Group", id2 = "HC", id1 = "T1D", "POD", "_leptin_adipo_POD")
```
#### PT
```{r}
de.markers(so, leptin_adipo_genes, "Group", id2 = "HC", id1 = "T1D", "PT", "_leptin_adipo")
```
### Figures
```{r}
# violin plot
# split.vp(seurat_object = so, genes = genes_subset_leptin_adipo, filepath = "/home/yejichoi/Documents/lin_temp_folder/")
split.vp.combined(seurat_object = so, genes = genes_subset_leptin_adipo, filepath = "/home/yejichoi/Documents/lin_temp_folder/leptin_adipo_")

# dot plot
pt.plot_table_leptin_adipo <- dp.formatted(seurat_object = so, genes = genes_subset_leptin_adipo, group.by = "Group",
                   celltype = "PT", m = m_leptin_adipo)

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_cells_leptin_adipo.jpeg",
       plot = pt.plot_table_leptin_adipo, scale = 3,
       width = 1000,height = 500,units = "px")
pt.plot_table_leptin_adipo

```

# Misc plot
#### Glycolytic markers
```{r}
glyco_genes <- c("PKM", "LDHA", "LDHB", "HIF1A", "HK2", "PFKP")
de.markers(so, glyco_genes, "Group", id2 = "HC", id1 = "T1D", "PT", "_glyco")
```

#### Dot plot of PT adaptive/maladaptive cell markers
```{r}
pt_ad_genes <- c("ITGB8", "CDH6", "DCDC2", "TPM1", "VCAM1", "DLGAP1", "ACSM3", "KIF26B", "HAVCR1")

# dot plot with table
pt.1 <- DotPlot(subset(so, celltype == "PT-1"),
  features = pt_ad_genes,idents = "PT", 
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-1"))
pt.2 <- DotPlot(subset(so, celltype == "PT-2"),
  features = pt_ad_genes,idents = "PT", 
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-2"))
pt.3 <- DotPlot(subset(so, celltype == "PT-3"),
  features = pt_ad_genes,idents = "PT", 
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-3"))
pt.4 <- DotPlot(subset(so, celltype == "PT-4"),
  features = pt_ad_genes,idents = "PT", 
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-4"))
pt.5 <- DotPlot(subset(so, celltype == "PT-5"),
  features = pt_ad_genes,idents = "PT", 
  scale = F, cols = "RdYlBu"
)$data %>% dplyr::mutate(pt.celltype = paste0("PT-5"))

pt_dot <-rbind(pt.1, pt.2, pt.3, pt.4, pt.5)

pt.plot.subset <- pt_dot %>% 
  ggplot(aes(x=features.plot, y = pt.celltype, color = avg.exp.scaled, size = pct.exp)) + 
  geom_point() +
  theme_bw() +
  scale_color_gradient2(low = "#83c5be", mid = "#f4f1bb", high = "#d90429", midpoint = 1.5,
                          guide = guide_colorbar(label.vjust = 0.8, ticks = F, draw.ulim = T, draw.llim = T),
                          limits = c(0,3)) +
  scale_size(range = c(0,15), limits = c(1,80)) +
  theme(panel.grid = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        legend.text = element_text(size = 8),
        legend.title = element_text(size = 8, vjust = 0.5),
        legend.spacing.x = unit(.1, "cm"),
        legend.direction = "horizontal") +
  guides(size = guide_legend(label.position = "bottom",
                             title.position = "top"),
         color = guide_colorbar(label.position = "bottom",
                              title.position = "top")) +
  labs(color = "Scaled average expression    ",
       size = "Expression (%) ") + 
  geom_hline(yintercept = 1.5, size = .3, color = "gray") +
  geom_hline(yintercept = 2.5, size = .3, color = "gray") +
  geom_hline(yintercept = 3.5, size = .3, color = "gray") +
  geom_hline(yintercept = 4.5, size = .3, color = "gray") +
  scale_y_discrete(limits=rev)

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Dot_PT_adaptive.jpeg",
       plot = pt.plot.subset, scale = 3.5,
       width = 700, height = 350,units = "px")
```

#### Bar plot of TCA & acetyl CoA
```{r}
direction_colors <- c("Upregulated" = "#d90429", "Downregulated" = "#83c5be", "NS" = "#eaeaea")
# TCA cycle
m <- add_direction(m)
m <- rownames_to_column(m, var = "gene")
m$gene <- factor(m$gene, levels = genes_subset)
m <- m %>% filter(!is.na(gene))

pt.barplot.tca <- ggplot(m, aes(x = gene, y = avg_log2FC, fill = direction)) +
  geom_col(show.legend = T) +
  ggtitle("TCA Cycle") +
  scale_fill_manual(values = direction_colors,
                    labels = c("Downregulated    ",
                               "Upregulated     ",
                               "NS")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 70, hjust = 1),
        panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", color = "white"),
        panel.spacing = unit(-1, 'lines'),
        legend.position = "top",
        aspect.ratio = 0.9/1,
        text = element_text(size = 15)) +
  scale_y_continuous(position = "right", limits = c(-0.5, 0.5),
                     breaks = c(-0.25, 0, 0.25)) +
  labs(x = NULL, y = "Avg Log2FC", fill = "Log2FC Direction  ") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 0.2) 
rownames(m) <- m$gene
pt.table.tca <- m %>%
    filter(p_val <= 0.05) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val)
pt.table.tca <- ggtexttable(pt.table.tca,
      cols = c("T1D", "HC", "Log2FC", "p-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("TCA cycle", sep = ""), size = 15)

# Oxidative phosphorylation
m_oxy_phos <- add_direction(m_oxy_phos)
m_oxy_phos <- rownames_to_column(m_oxy_phos, var = "gene")
m_oxy_phos$gene <- factor(m_oxy_phos$gene, levels = genes_subset_oxy_phos)
m_oxy_phos <- m_oxy_phos %>% filter(!is.na(gene))

pt.barplot.oxy_phos <- ggplot(m_oxy_phos, aes(x = gene, y = avg_log2FC, fill = direction)) +
  geom_col(show.legend = F, width = 0.7) +
  ggtitle("Oxidative Phosphorylation") +
  scale_fill_manual(values = direction_colors,
                    labels = c("Downregulated    ",
                               "Upregulated     ",
                               "NS")) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 70, hjust = 1),
        panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", color = "white"),
        panel.spacing = unit(-1, 'lines'),
        legend.position = "top",
        aspect.ratio = 0.9/1,
        text = element_text(size = 15)) +
  scale_y_continuous(position = "right", limits = c(-0.5, 0.5),
                     breaks = c(-0.25, 0, 0.25)) +
  labs(x = NULL, y = "Avg Log2FC", fill = "Log2FC Direction  ") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 0.2) 
rownames(m_oxy_phos) <- m_oxy_phos$gene
pt.table.oxy_phos <- m_oxy_phos %>%
    filter(p_val <= 0.05) %>%
    dplyr::mutate(p_val_rounded = round(p_val, 4),
                  p_val = p_format(p_val_rounded, trailing.zero = T, accuracy = 0.001, digits = 3),
                  pct.1 = sprintf("%.3f", pct.1),
                  pct.2 = sprintf("%.3f", pct.2),
                  avg_log2FC = sprintf("%.3f", avg_log2FC)) %>%
    dplyr::select(pct.1, pct.2, avg_log2FC, p_val)
pt.table.oxy_phos <- ggtexttable(pt.table.oxy_phos,
      cols = c("T1D", "HC", "Log2FC", "p-value"),
      theme = ttheme("blank", base_size = 13)
    ) %>%
      tab_add_hline(at.row = 1:2, row.side = "top", linewidth = 1) %>%
      tab_add_title(paste("Oxidative Phosphorylation", sep = ""), size = 15)

# Combined plot
barplot_combined <- ggarrange(pt.barplot.tca, pt.barplot.oxy_phos,
                              ncol = 1, common.legend = T)

# Combined table
barplot_table_combined <- ggarrange(pt.table.tca, pt.table.oxy_phos, ncol = 1,
                                    heights = c(1,1), font.label = list(size = 10))

combined.plot_table <- ggarrange(barplot_combined, NULL, barplot_table_combined,
                                 nrow = 1, widths = c(1.5,0,1), common.legend = F)
combined.plot_table

ggsave(filename = "/home/yejichoi/Documents/lin_temp_folder/Bar_PT_combined.jpeg",
       plot = combined.plot_table, scale = 3.5,
       width = 900, height = 900,units = "px")
```

#### TCA in EC-GC
```{r}
de.markers(subset(so, celltype == "EC-GC"), genes, "Group", id2 = "HC", id1 = "T1D", "EC" , "_ECGC")
```
#### TCA in EC
```{r}
de.markers(so, genes, "Group", id2 = "HC", id1 = "T1D", "EC" , "_EC")
```
#### Ox phos in EC-GC
```{r}
de.markers(subset(so, celltype == "EC-GC"), oxy_phos_genes, "Group", id2 = "HC", id1 = "T1D", "EC" , "_ECGC")
```

#### Ox phos in EC
```{r}
de.markers(so, oxy_phos_genes, "Group", id2 = "HC", id1 = "T1D", "EC" , "_EC")
```
