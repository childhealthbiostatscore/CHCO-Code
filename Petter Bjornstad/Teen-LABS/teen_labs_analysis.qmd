---
title: "Teen-LABS Proteomics"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
    theme:
      light: flatly
      dark: darkly
bibliography: /Users/timvigers/Documents/Miscellaneous/zotero.bib
csl: /Users/timvigers/Documents/Miscellaneous/american-medical-association.csl
editor: source
---

```{r libraries}
#| include: false
library(tidyverse)
library(limma)
library(knitr)
library(STRINGdb)
```

```{r clean data}
# source("/Users/timvigers/GitHub/CHCO-Code/Petter Bjornstad/Teen-LABS/create_teen_labs_analysis_dataset.R")
load("/Users/timvigers/Library/CloudStorage/Dropbox/Work/Petter Bjornstad/Teen Labs/Data_Cleaned/analysis_dataset.RData")
```

```{r intercept only}
#| message: false
# Calculate difference from month 1 to year 1, make variable for diabetes status
# at baseline
df_diff <- df %>%
  arrange(ID, visit) %>%
  filter(visit %in% c("Month 1", "Year 1")) %>%
  group_by(ID) %>%
  reframe(across(contains("seq"), ~ diff(as.numeric(.x))))
# Limma setup
# Y needs "genes" in rows
y <- df_diff %>%
  dplyr::select(contains("seq")) %>%
  t()
# Design matrix
design_mat <- model.matrix(~1, data = df_diff)
# Fit
fit <- lmFit(y, design_mat)
fit <- eBayes(fit)
res <- topTable(fit, coef = 1, number = dim(y)[1], sort.by = "p")
res$Target <- analyte_info$Target[match(rownames(res), analyte_info$AptName)]
res$TargetFullName <- analyte_info$TargetFullName[match(rownames(res), analyte_info$AptName)]
res <- res[res$adj.P.Val <= 0.05, ]
# Table
kable(res[1:10, ], digits = 3, row.names = F)
```

```{r stringdb}
# Load STRING
string_db <- STRINGdb$new(
  version = "11.5", # Most recent
  species = 9606, # NCBI taxonomy ID for human
  score_threshold = 400 # Medium stringency, default value - any interaction below the threshold is not loaded
)
# Full results for analysis
res <- topTable(fit, coef = 1, number = dim(y)[1])
res$UniProt <- analyte_info$UniProt[match(rownames(res), analyte_info$AptName)]
res$UniProt = gsub("\\|.*","",res$UniProt)
mapped <- string_db$map(res, "UniProt", removeUnmappedRows = TRUE)
```

# Table

```{r}
#| label: tbl-planets
#| tbl-cap: Planets
```

# Figure

```{r}
#| label: fig-planets
#| fig-cap: Planets
```
