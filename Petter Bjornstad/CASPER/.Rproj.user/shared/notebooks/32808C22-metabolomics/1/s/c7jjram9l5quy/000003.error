{"frames":[{"func":"perf(plsda_res, progressBar = FALSE, auc = TRUE, validation = \"loo\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"perf.mixo_plsda(plsda_res, progressBar = FALSE, auc = TRUE, validation = \"loo\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"MCVfold.spls(X, Y, multilevel = multilevel, validation = validation, \n    folds = folds, nrepeat = nrepeat, ncomp = comp, choice.keepX = choice.keepX, \n    test.keepX = test.keepX, test.keepY = nlevels(Y), measure = measure, \n    dist = dist, scale = scale, near.zero.var = near.zero.var,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(seq_len(M), fonction.j.folds)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressWarnings(internal_wrapper.mint(X = X.train, Y = Y.train.mat, \n    study = factor(rep(1, nrow(X.train))), ncomp = ncomp, keepX = choice.keepX, \n    keepY = rep(ncol(Y.train.mat), ncomp - 1), test.keepX = test.keepX, \n    test.keepY = test.keepY, mode = \"regression\", scale = scale,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, warning = function(w) if (inherits(w, \n    classes)) tryInvokeRestart(\"muffleWarning\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"internal_wrapper.mint(X = X.train, Y = Y.train.mat, study = factor(rep(1, \n    nrow(X.train))), ncomp = ncomp, keepX = choice.keepX, keepY = rep(ncol(Y.train.mat), \n    ncomp - 1), test.keepX = test.keepX, test.keepY = test.keepY, \n    mode = \"regression\", scale = scale, near.zero.var = near.zero.var,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"internal_mint.block(A = list(X = X, Y = Y), indY = 2, mode = mode, \n    ncomp = c(ncomp, ncomp), tol = tol, max.iter = max.iter, \n    design = design, keepA = keepA, scale = scale, scheme = \"horst\", \n    init = \"svd\", study = study, misdata = misdata, is.na.A = is.na.A,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sparse.mint.block_iteration(R, design, study = study, loadings.A = loadings.A.init, \n    keepA = keepA.ijk, scheme = scheme, max.iter = max.iter, \n    tol = tol, penalty = penalty, misdata = misdata, is.na.A = is.na.A, \n    ind.NA = ind.NA, all.outputs = all.outputs)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"apply(temp, 2, crossprod)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in base::try(mergedColors, TRUE) : object 'mergedColors' not found\n"}