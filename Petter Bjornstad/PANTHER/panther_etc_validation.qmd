---
title: "panther_etc_validation"
author: "Ye Ji Choi"
format: html
---


# Validation (in RH/RH2/IMP)
```{r load-data-2, echo = F, include = F}
# Panther + RH + RH2 + IMPROVE data + SOMA scaled (cleanData_comb)
load("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Data_Cleaned/panther+rh+rh2+imp_data_soma_std.RData")
retained_vars_tkv <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/tkv_panther_proteomics.csv")
retained_vars_ht_adj_tkv <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/ht_adj_tkv_panther_proteomics.csv")
retained_vars_gfr <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/gfr_panther_proteomics.csv")
retained_vars_gfr_bsa <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/gfr_bsa_panther_proteomics.csv")
retained_vars_rpf <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/rpf_panther_proteomics.csv")
retained_vars_rpf_bsa <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/rpf_bsa_panther_proteomics.csv")
```

## Approach 1

Validate the multi-protein signatures identified in PANTHER to explain the variance in htTKV, TKV, GFR and RPF in pooled a RH/RH2/IT2D sample set.
If the multi-protein signatures identified in PANTHER do not explain the variance in htTKV, TKV, GFR and RPF in a mostly TS5 cohort (RH/RH2/IT2D), this might be ascribed to differences in pubertal status, which is interesting! However, if they perform well the proteins are likely not puberty related. 

### Total Kidney Volume
```{r tkv-validation, echo = F}
form_tkv = as.formula(paste0("combined_tkv ~ ",paste0(retained_vars_tkv$term,collapse = "+")))
mod_tkv_val = lm(formula = form_tkv, data = subset(cleanData_comb, !is.na(combined_tkv)))
mod_df_tkv_val = as.data.frame(tidy(mod_tkv_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_tkv) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_tkv_val,p.value), digits = 3)
ggplot(mod_df_tkv_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)

kable(glance(mod_tkv))
plot(mod_tkv)

# Adjusted R-squared 95% CI
rsq_tkv <- summary(mod_tkv)$adj.r.squared
k_tkv <- ncol(mod_tkv$model) - 1
n_tkv <- mod_tkv$df.residual + k_tkv + 1
rsq.se_tkv <- sqrt((4 * rsq_tkv * (1 - rsq_tkv)^2 * (n_tkv - k_tkv - 1)^2)/((n_tkv^2 - 1) * (3 + n_tkv)))
LL_tkv <- rsq_tkv - z*rsq.se_tkv
UL_tkv <- rsq_tkv + z*rsq.se_tkv
```



### Height adjusted TKV
```{r ht-adj-tkv-validation, echo = F}
form_ht_adj_tkv = as.formula(paste0("combined_ht_tkv ~ ",paste0(retained_vars_ht_adj_tkv$term,collapse = "+")))
mod_ht_adj_tkv_val = lm(formula = form_ht_adj_tkv, data = subset(cleanData_comb, !is.na(combined_ht_tkv)))
mod_df_ht_adj_tkv_val = as.data.frame(tidy(mod_ht_adj_tkv_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_ht_adj_tkv) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_ht_adj_tkv_val,p.value), digits = 3)
ggplot(mod_df_ht_adj_tkv_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)

kable(glance(mod_ht_adj_tkv))
plot(mod_ht_adj_tkv)

# Adjusted R-squared 95% CI
rsq_ht_adj_tkv <- summary(mod_ht_adj_tkv)$adj.r.squared
k_ht_adj_tkv <- ncol(mod_ht_adj_tkv$model) - 1
n_ht_adj_tkv <- mod_ht_adj_tkv$df.residual + k_ht_adj_tkv + 1
rsq.se_ht_adj_tkv <- sqrt((4 * rsq_ht_adj_tkv * (1 - rsq_ht_adj_tkv)^2 * (n_ht_adj_tkv - k_ht_adj_tkv - 1)^2)/((n_ht_adj_tkv^2 - 1) * (3 + n_ht_adj_tkv)))
LL_ht_adj_tkv <- rsq_ht_adj_tkv - z*rsq.se_ht_adj_tkv
UL_ht_adj_tkv <- rsq_ht_adj_tkv + z*rsq.se_ht_adj_tkv
```

### GFR (Raw plasma)
```{r gfr-validation, echo = F}
form_gfr = as.formula(paste0("gfr_raw_plasma ~ ",paste0(retained_vars_gfr$term,collapse = "+")))
mod_gfr_val = lm(formula = form_gfr, data = subset(cleanData_comb, !is.na(gfr_raw_plasma)))
mod_df_gfr_val = as.data.frame(tidy(mod_gfr_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_gfr) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_gfr_val,p.value), digits = 3)
ggplot(mod_df_gfr_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```
### GFR (BSA plasma)
```{r gfr-bsa-validation, echo = F}
form_gfr_bsa = as.formula(paste0("gfr_bsa_plasma ~ ",paste0(retained_vars_gfr_bsa$term,collapse = "+")))
mod_gfr_bsa_val = lm(formula = form_gfr_bsa, data = subset(cleanData_comb, !is.na(gfr_bsa_plasma)))
mod_df_gfr_bsa_val = as.data.frame(tidy(mod_gfr_bsa_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_gfr_bsa) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_gfr_bsa_val,p.value), digits = 3)
ggplot(mod_df_gfr_bsa_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```
### RPF (Raw plasma)
```{r rpf-validation, echo = F}
form_rpf = as.formula(paste0("erpf_raw_plasma ~ ",paste0(retained_vars_rpf$term,collapse = "+")))
mod_rpf_val = lm(formula = form_rpf, data = subset(cleanData_comb, !is.na(erpf_raw_plasma)))
mod_df_rpf_val = as.data.frame(tidy(mod_rpf_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_rpf) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_rpf_val,p.value), digits = 3)
ggplot(mod_df_rpf_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

### RPF (BSA plasma)
```{r rpf-bsa-validation, echo = F}
form_rpf_bsa = as.formula(paste0("erpf_bsa_plasma ~ ",paste0(retained_vars_rpf_bsa$term,collapse = "+")))
mod_rpf_bsa_val = lm(formula = form_rpf_bsa, data = subset(cleanData_comb, !is.na(erpf_bsa_plasma)))
mod_df_rpf_bsa_val = as.data.frame(tidy(mod_rpf_bsa_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_rpf_bsa) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_rpf_bsa_val,p.value), digits = 3)
ggplot(mod_df_rpf_bsa_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

## Approach 2

having a random subset of TS5 be discovery and another subset of TS5 be one of two validation sets, and another validation set of TS1-4.

```{r}

```