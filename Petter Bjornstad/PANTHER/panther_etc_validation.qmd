---
title: "panther_etc_validation"
author: "Ye Ji Choi"
date: "`r lubridate::today()`"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
editor: visual
---

# Validation (in RH/RH2/IMP)

```{r libraries, echo=F, include = F}
library(purrr)
library(tidyverse)
library(dplyr)
library(arsenal)
library(ggplot2)
library(tidyr)
library(DEqMS)
library(fgsea)
library(ggrepel)
library(labelled)
library(glmnet)
library(broom)
library(knitr)
library(ensr)
library(kableExtra)
library(gt)
library(psych)
library(growthcleanr)
library(behaviorchange)
library(ppcor)
library(correlation)
library(grid)
library(forestploter)
library(eulerr)
```


```{r load-data-2, echo = F, include = F}
# Panther + RH + RH2 + IMPROVE data + SOMA scaled (cleanData_comb)
load("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Data_Cleaned/panther+rh+rh2+imp_data_soma_std.RData")
retained_vars_tkv <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/tkv_panther_proteomics.csv")
retained_vars_ht_adj_tkv <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/ht_adj_tkv_panther_proteomics.csv")
retained_vars_gfr <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/gfr_panther_proteomics.csv")
retained_vars_gfr_bsa <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/gfr_bsa_panther_proteomics.csv")
retained_vars_rpf <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/rpf_panther_proteomics.csv")
retained_vars_rpf_bsa <- read.csv("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Results/Proteomics/rpf_bsa_panther_proteomics.csv")
# Load elastic net function
source("/Users/choiyej/GitHub/CHCO-Code/Petter Bjornstad/TODAY proteomics metabolomics/Proteomics analyses/easy_elasticnet.R")
# Load SOMAScan analytes data (analytes)
load("/Volumes/Peds Endo/Petter Bjornstad/PANTHER/Data_Cleaned/panther_analytes.RData")
```

## Approach 1

Validate the multi-protein signatures identified in PANTHER to explain the variance in htTKV, TKV, GFR and RPF in pooled a RH/RH2/IT2D sample set.
If the multi-protein signatures identified in PANTHER do not explain the variance in htTKV, TKV, GFR and RPF in a mostly TS5 cohort (RH/RH2/IT2D), this might be ascribed to differences in pubertal status, which is interesting! However, if they perform well the proteins are likely not puberty related. 

### Total Kidney Volume
```{r tkv-validation, echo = F}
form_tkv = as.formula(paste0("combined_tkv ~ ",paste0(retained_vars_tkv$term,collapse = "+")))
mod_tkv_val = lm(formula = form_tkv, data = subset(cleanData_comb, !is.na(combined_tkv)))
mod_df_tkv_val = as.data.frame(tidy(mod_tkv_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_tkv) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_tkv_val,p.value), digits = 3)
ggplot(mod_df_tkv_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)

kable(glance(mod_tkv_val))
plot(mod_tkv_val)

# Adjusted R-squared 95% CI
z = qnorm(0.975)
rsq_tkv_val <- summary(mod_tkv_val)$adj.r.squared
k_tkv_val <- ncol(mod_tkv_val$model) - 1
n_tkv_val <- mod_tkv_val$df.residual + k_tkv_val + 1
rsq.se_tkv_val <- sqrt((4 * rsq_tkv_val * (1 - rsq_tkv_val)^2 * (n_tkv_val - k_tkv_val - 1)^2)/((n_tkv_val^2 - 1) * (3 + n_tkv_val)))
LL_tkv_val <- rsq_tkv_val - z*rsq.se_tkv_val
UL_tkv_val <- rsq_tkv_val + z*rsq.se_tkv_val
```

### Height adjusted TKV
```{r ht-adj-tkv-validation, echo = F}
form_ht_adj_tkv = as.formula(paste0("combined_ht_tkv ~ ",paste0(retained_vars_ht_adj_tkv$term,collapse = "+")))
mod_ht_adj_tkv_val = lm(formula = form_ht_adj_tkv, data = subset(cleanData_comb, !is.na(combined_ht_tkv)))
mod_df_ht_adj_tkv_val = as.data.frame(tidy(mod_ht_adj_tkv_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_ht_adj_tkv) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_ht_adj_tkv_val,p.value), digits = 3)
ggplot(mod_df_ht_adj_tkv_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)

kable(glance(mod_ht_adj_tkv_val))
plot(mod_ht_adj_tkv_val)

# Adjusted R-squared 95% CI
rsq_ht_adj_tkv_val <- summary(mod_ht_adj_tkv_val)$adj.r.squared
k_ht_adj_tkv_val <- ncol(mod_ht_adj_tkv_val$model) - 1
n_ht_adj_tkv_val <- mod_ht_adj_tkv_val$df.residual + k_ht_adj_tkv_val + 1
rsq.se_ht_adj_tkv_val <- sqrt((4 * rsq_ht_adj_tkv_val * (1 - rsq_ht_adj_tkv_val)^2 * (n_ht_adj_tkv_val - k_ht_adj_tkv_val - 1)^2)/((n_ht_adj_tkv_val^2 - 1) * (3 + n_ht_adj_tkv_val)))
LL_ht_adj_tkv_val <- rsq_ht_adj_tkv_val - z*rsq.se_ht_adj_tkv_val
UL_ht_adj_tkv_val <- rsq_ht_adj_tkv_val + z*rsq.se_ht_adj_tkv_val
```

### GFR (Raw plasma)
```{r gfr-validation, echo = F}
form_gfr = as.formula(paste0("gfr_raw_plasma ~ ",paste0(retained_vars_gfr$term,collapse = "+")))
mod_gfr_val = lm(formula = form_gfr, data = subset(cleanData_comb, !is.na(gfr_raw_plasma)))
mod_df_gfr_val = as.data.frame(tidy(mod_gfr_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_gfr) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_gfr_val,p.value), digits = 3)
ggplot(mod_df_gfr_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)

kable(glance(mod_gfr_val))
plot(mod_gfr_val)

# Adjusted R-squared 95% CI
rsq_gfr_val <- summary(mod_gfr_val)$adj.r.squared
k_gfr_val <- ncol(mod_gfr_val$model) - 1
n_gfr_val <- mod_gfr_val$df.residual + k_gfr_val + 1
rsq.se_gfr_val <- sqrt((4 * rsq_gfr_val * (1 - rsq_gfr_val)^2 * (n_gfr_val - k_gfr_val - 1)^2)/((n_gfr_val^2 - 1) * (3 + n_gfr_val)))
LL_gfr_val <- rsq_gfr_val - z*rsq.se_gfr_val
UL_gfr_val <- rsq_gfr_val + z*rsq.se_gfr_val
```
### GFR (BSA plasma)
```{r gfr-bsa-validation, echo = F}
form_gfr_bsa = as.formula(paste0("gfr_bsa_plasma ~ ",paste0(retained_vars_gfr_bsa$term,collapse = "+")))
mod_gfr_bsa_val = lm(formula = form_gfr_bsa, data = subset(cleanData_comb, !is.na(gfr_bsa_plasma)))
mod_df_gfr_bsa_val = as.data.frame(tidy(mod_gfr_bsa_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_gfr_bsa) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_gfr_bsa_val,p.value), digits = 3)
ggplot(mod_df_gfr_bsa_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)

kable(glance(mod_gfr_bsa_val))
plot(mod_gfr_bsa_val)

# Adjusted R-squared 95% CI
rsq_gfr_bsa_val <- summary(mod_gfr_bsa_val)$adj.r.squared
k_gfr_bsa_val <- ncol(mod_gfr_bsa_val$model) - 1
n_gfr_bsa_val <- mod_gfr_bsa_val$df.residual + k_gfr_bsa_val + 1
rsq.se_gfr_bsa_val <- sqrt((4 * rsq_gfr_bsa_val * (1 - rsq_gfr_bsa_val)^2 * (n_gfr_bsa_val - k_gfr_bsa_val - 1)^2)/((n_gfr_bsa_val^2 - 1) * (3 + n_gfr_bsa_val)))
LL_gfr_bsa_val <- rsq_gfr_bsa_val - z*rsq.se_gfr_bsa_val
UL_gfr_bsa_val <- rsq_gfr_bsa_val + z*rsq.se_gfr_bsa_val
```
### RPF (Raw plasma)
```{r rpf-validation, echo = F}
form_rpf = as.formula(paste0("erpf_raw_plasma ~ ",paste0(retained_vars_rpf$term,collapse = "+")))
mod_rpf_val = lm(formula = form_rpf, data = subset(cleanData_comb, !is.na(erpf_raw_plasma)))
mod_df_rpf_val = as.data.frame(tidy(mod_rpf_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_rpf) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_rpf_val,p.value), digits = 3)
ggplot(mod_df_rpf_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)

kable(glance(mod_rpf_val))
plot(mod_rpf_val)

# Adjusted R-squared 95% CI
rsq_rpf_val <- summary(mod_rpf_val)$adj.r.squared
k_rpf_val <- ncol(mod_rpf_val$model) - 1
n_rpf_val <- mod_rpf_val$df.residual + k_rpf_val + 1
rsq.se_rpf_val <- sqrt((4 * rsq_rpf_val * (1 - rsq_rpf_val)^2 * (n_rpf_val - k_rpf_val - 1)^2)/((n_rpf_val^2 - 1) * (3 + n_rpf_val)))
LL_rpf_val <- rsq_rpf_val - z*rsq.se_rpf_val
UL_rpf_val <- rsq_rpf_val + z*rsq.se_rpf_val
```

### RPF (BSA plasma)
```{r rpf-bsa-validation, echo = F}
form_rpf_bsa = as.formula(paste0("erpf_bsa_plasma ~ ",paste0(retained_vars_rpf_bsa$term,collapse = "+")))
mod_rpf_bsa_val = lm(formula = form_rpf_bsa, data = subset(cleanData_comb, !is.na(erpf_bsa_plasma)))
mod_df_rpf_bsa_val = as.data.frame(tidy(mod_rpf_bsa_val, exponentiate = F, conf.int = T), digits = 3) %>% 
  left_join(retained_vars_rpf_bsa) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
                TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_rpf_bsa_val,p.value), digits = 3)
ggplot(mod_df_rpf_bsa_val[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)

kable(glance(mod_rpf_bsa_val))
plot(mod_rpf_bsa_val)

# Adjusted R-squared 95% CI
rsq_rpf_bsa_val <- summary(mod_rpf_bsa_val)$adj.r.squared
k_rpf_bsa_val <- ncol(mod_rpf_bsa_val$model) - 1
n_rpf_bsa_val <- mod_rpf_bsa_val$df.residual + k_rpf_bsa_val + 1
rsq.se_rpf_bsa_val <- sqrt((4 * rsq_rpf_bsa_val * (1 - rsq_rpf_bsa_val)^2 * (n_rpf_bsa_val - k_rpf_bsa_val - 1)^2)/((n_rpf_bsa_val^2 - 1) * (3 + n_rpf_bsa_val)))
LL_rpf_bsa_val <- rsq_rpf_bsa_val - z*rsq.se_rpf_bsa_val
UL_rpf_bsa_val <- rsq_rpf_bsa_val + z*rsq.se_rpf_bsa_val
```

## Model comparison
```{r models-combined2, echo=F}
validation_combined <- data.frame(r2 = c(rsq_tkv_val, rsq_ht_adj_tkv_val, rsq_gfr_val, rsq_gfr_bsa_val, rsq_rpf_val, rsq_rpf_bsa_val),
                                  lower = c(LL_tkv_val, LL_ht_adj_tkv_val, LL_gfr_val, LL_gfr_bsa_val, LL_rpf_val, LL_rpf_bsa_val),
                                  upper = c(UL_tkv_val, UL_ht_adj_tkv_val, UL_gfr_val, UL_gfr_bsa_val, UL_rpf_val, UL_rpf_bsa_val),
                                  Model = c("TKV", "Ht-adj TKV", "GFR-Raw", "GFR-BSA", "RPF-Raw", "RPF-BSA"),
                                  No.proteins = c(nrow(retained_vars_tkv), 
                                                  nrow(retained_vars_ht_adj_tkv), 
                                                  nrow(retained_vars_gfr), 
                                                  nrow(retained_vars_gfr_bsa), 
                                                  nrow(retained_vars_rpf), 
                                                  nrow(retained_vars_rpf_bsa)))
validation_combined$` ` <- paste(rep(" ", 20), collapse = " ")

# Create confidence interval column to display
validation_combined$`Adjusted R-squared (95% CI)` <- ifelse(is.na(validation_combined$r2), "",
                             sprintf("%.2f (%.2f to %.2f)",
                                     validation_combined$r2, validation_combined$lower, validation_combined$upper))
validation_combined
forest(data = validation_combined[,c(4:7)], 
       est = validation_combined$r2,
       lower = validation_combined$lower,
       upper = validation_combined$upper, ci_column = 3)
```
# Elastic net for RH/RH2/IMPROVE
```{r echo = F}
cleanData_others <- cleanData_comb %>% filter(study != "PANTHER")
```
### Total Kidney Volume
```{r elastic-net-tkv-others, echo = F, warning = F, message=F}
hist(cleanData_others$combined_tkv)
# Limit to records with non-missing tkv
others_combined_tkv <- cleanData_others %>% 
  filter(!is.na(combined_tkv)) %>% 
  dplyr::select(combined_tkv, starts_with("seq"))

# Top 100 associations to tkv
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(others_combined_tkv))
predictors <- colnames(others_combined_tkv[seq])

result_tkv_others <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("combined_tkv ~ ",predictors[i])
  mod <- lm(data = others_combined_tkv, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_tkv_others <- rbind(result_tkv_others,tidymod)
}

result_tkv_others$adj.p.value <- p.adjust(result_tkv_others$p.value, "fdr")
result_tkv_others$AptName <- result_tkv_others$term
result_tkv_others$term <- NULL
result_tkv_others <- merge(result_tkv_others,analytes,by="AptName",all.x = T, all.y = F)
result_tkv_others <- result_tkv_others[order(result_tkv_others$p.value),] 
result_tkv_others_100 <- head(result_tkv_others, 100)$AptName
predictors_tkv_others <- as.matrix(subset(others_combined_tkv, select = result_tkv_others_100))
# Elastic net regression
en_tkv_others <- easy_elasticnet(data = others_combined_tkv, 
                        outcome = "combined_tkv", out = "min.error",
                        predictors = predictors_tkv_others,
                        cv_method="kfold", folds = 10)

retained_vars_tkv_others = analytes[analytes$AptName %in% en_tkv_others, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_tkv_others = as.formula(paste0("combined_tkv ~ ",paste0(en_tkv_others,collapse = "+")))
mod_tkv_others = lm(formula = form_tkv_others, data = others_combined_tkv)
mod_df_tkv_others = as.data.frame(tidy(mod_tkv_others, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_tkv_others) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_tkv_others,p.value), digits = 3)
ggplot(mod_df_tkv_others[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_tkv_others_100)` proteins included in analysis. No. of proteins identified: `r length(en_tkv_others)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_tkv_others))
plot(mod_tkv_others)

# Adjusted R-squared 95% CI
rsq_tkv_others <- summary(mod_tkv_others)$adj.r.squared
k_tkv_others <- ncol(mod_tkv_others$model) - 1
n_tkv_others <- mod_tkv_others$df.residual + k_tkv_others + 1
rsq.se_tkv_others <- sqrt((4 * rsq_tkv_others * (1 - rsq_tkv_others)^2 * (n_tkv_others - k_tkv_others - 1)^2)/((n_tkv_others^2 - 1) * (3 + n_tkv_others)))
LL_tkv_others <- rsq_tkv_others - z*rsq.se_tkv_others
UL_tkv_others <- rsq_tkv_others + z*rsq.se_tkv_others
```

### Height adjusted TKV

```{r elastic-net-httkv-others, echo = F, warning = F, message=F}
hist(cleanData_others$combined_ht_tkv)
# Limit to records with non-missing combined_ht_tkv
ht_adj_tkv_others <- cleanData_others %>% 
  filter(!is.na(combined_ht_tkv)) %>% 
  dplyr::select(combined_ht_tkv, starts_with("seq")) 

# Top 100 associations to ht_adj_tkv
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(ht_adj_tkv_others))
predictors <- colnames(ht_adj_tkv_others[seq])

result_ht_adj_tkv_others <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("combined_ht_tkv ~ ",predictors[i])
  mod <- lm(data = ht_adj_tkv_others, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_ht_adj_tkv_others <- rbind(result_ht_adj_tkv_others,tidymod)
}

result_ht_adj_tkv_others$adj.p.value <- p.adjust(result_ht_adj_tkv_others$p.value, "fdr")
result_ht_adj_tkv_others$AptName <- result_ht_adj_tkv_others$term
result_ht_adj_tkv_others$term <- NULL
result_ht_adj_tkv_others <- merge(result_ht_adj_tkv_others,analytes,by="AptName",all.x = T, all.y = F)
result_ht_adj_tkv_others <- result_ht_adj_tkv_others[order(result_ht_adj_tkv_others$p.value),] 
result_ht_adj_tkv_100 <- head(result_ht_adj_tkv_others, 80)$AptName
predictors_ht_adj_tkv_others <- as.matrix(subset(ht_adj_tkv_others, select = result_ht_adj_tkv_100))
# Elastic net regression
en_ht_adj_tkv_others <- easy_elasticnet(data = ht_adj_tkv_others, 
                        outcome = "combined_ht_tkv", out = "min.error",
                        predictors = predictors_ht_adj_tkv_others,
                        cv_method="kfold", folds = 10)

retained_vars_ht_adj_tkv_others = analytes[analytes$AptName %in% en_ht_adj_tkv_others, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_ht_adj_tkv_others = as.formula(paste0("combined_ht_tkv ~ ",paste0(en_ht_adj_tkv_others,collapse = "+")))
mod_ht_adj_tkv_others = lm(formula = form_ht_adj_tkv_others, data = ht_adj_tkv_others)
mod_df_ht_adj_tkv_others = as.data.frame(tidy(mod_ht_adj_tkv_others, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_ht_adj_tkv_others) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_ht_adj_tkv_others,p.value), digits = 3)

ggplot(mod_df_ht_adj_tkv_others[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_ht_adj_tkv_100)` proteins included in analysis. No. of proteins identified: `r length(en_ht_adj_tkv_others)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_ht_adj_tkv_others))
plot(mod_ht_adj_tkv_others)

# Adjusted R-squared 95% CI
rsq_ht_adj_tkv_others <- summary(mod_ht_adj_tkv_others)$adj.r.squared
k_ht_adj_tkv_others <- ncol(mod_ht_adj_tkv_others$model) - 1
n_ht_adj_tkv_others <- mod_ht_adj_tkv_others$df.residual + k_ht_adj_tkv_others + 1
rsq.se_ht_adj_tkv_others <- sqrt((4 * rsq_ht_adj_tkv_others * (1 - rsq_ht_adj_tkv_others)^2 * (n_ht_adj_tkv_others - k_ht_adj_tkv_others - 1)^2)/((n_ht_adj_tkv_others^2 - 1) * (3 + n_ht_adj_tkv_others)))
LL_ht_adj_tkv_others <- rsq_ht_adj_tkv_others - z*rsq.se_ht_adj_tkv_others
UL_ht_adj_tkv_others <- rsq_ht_adj_tkv_others + z*rsq.se_ht_adj_tkv_others
```

### GFR (Raw plasma)

```{r elastic-net-gfr-others, echo = F, warning = F, message=F}
# Limit to records with non-missing gfr
others_gfr_raw_plasma <- cleanData_others %>% 
  filter(!is.na(gfr_raw_plasma) & gfr_raw_plasma > 0) %>% 
  dplyr::select(gfr_raw_plasma, starts_with("seq")) 

# Top 100 associations to gfr
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(others_gfr_raw_plasma))
predictors <- colnames(others_gfr_raw_plasma[seq])

result_gfr_others <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("log(gfr_raw_plasma) ~ ",predictors[i])
  mod <- lm(data = others_gfr_raw_plasma, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_gfr_others <- rbind(result_gfr_others,tidymod)
}

result_gfr_others$adj.p.value <- p.adjust(result_gfr_others$p.value, "fdr")
result_gfr_others$AptName <- result_gfr_others$term
result_gfr_others$term <- NULL
result_gfr_others <- merge(result_gfr_others,analytes,by="AptName",all.x = T, all.y = F)
result_gfr_others <- result_gfr_others[order(result_gfr_others$p.value),] 
result_gfr_others_100 <- head(result_gfr_others, 75)$AptName
predictors_gfr_others <- as.matrix(subset(others_gfr_raw_plasma, select = result_gfr_others_100))
# Elastic net regression
en_gfr_others <- easy_elasticnet(data = others_gfr_raw_plasma, 
                        outcome = "gfr_raw_plasma", out = "min.error",
                        predictors = predictors_gfr_others,
                        cv_method="kfold", folds = 10)

retained_vars_gfr_others = analytes[analytes$AptName %in% en_gfr_others, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_gfr_others = as.formula(paste0("log(gfr_raw_plasma) ~ ",paste0(en_gfr_others,collapse = "+")))
mod_gfr_others = lm(formula = form_gfr, data = others_gfr_raw_plasma)
mod_df_gfr_others = as.data.frame(tidy(mod_gfr_others, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_gfr) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_gfr_others,p.value), digits = 3)
ggplot(mod_df_gfr_others[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_gfr_others_100)` proteins included in analysis. No. of proteins identified: `r length(en_gfr_others)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_gfr_others))
plot(mod_gfr_others)

# Adjusted R-squared 95% CI
rsq_gfr_others <- summary(mod_gfr_others)$adj.r.squared
k_gfr_others <- ncol(mod_gfr_others$model) - 1
n_gfr_others <- mod_gfr_others$df.residual + k_gfr_others + 1
rsq.se_gfr_others <- sqrt((4 * rsq_gfr_others * (1 - rsq_gfr_others)^2 * (n_gfr_others - k_gfr_others - 1)^2)/((n_gfr_others^2 - 1) * (3 + n_gfr_others)))
LL_gfr_others <- rsq_gfr_others - z*rsq.se_gfr_others
UL_gfr_others <- rsq_gfr_others + z*rsq.se_gfr_others
```

### GFR (BSA plasma)

```{r elastic-net-gfr-bsa-others, echo = F, warning = F, message=F}
# Limit to records with non-missing gfr
others_gfr_bsa_plasma <- cleanData_others %>% 
  filter(!is.na(gfr_bsa_plasma) & gfr_bsa_plasma > 0) %>% 
  dplyr::select(gfr_bsa_plasma, starts_with("seq")) 

# Top 100 associations to gfr
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(others_gfr_bsa_plasma))
predictors <- colnames(others_gfr_bsa_plasma[seq])

result_gfr_bsa_others <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("log(gfr_bsa_plasma) ~ ",predictors[i])
  mod <- lm(data = others_gfr_bsa_plasma, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_gfr_bsa_others <- rbind(result_gfr_bsa_others,tidymod)
}

result_gfr_bsa_others$adj.p.value <- p.adjust(result_gfr_bsa_others$p.value, "fdr")
result_gfr_bsa_others$AptName <- result_gfr_bsa_others$term
result_gfr_bsa_others$term <- NULL
result_gfr_bsa_others <- merge(result_gfr_bsa_others,analytes,by="AptName",all.x = T, all.y = F)
result_gfr_bsa_others <- result_gfr_bsa_others[order(result_gfr_bsa_others$p.value),] 
result_gfr_bsa_others_100 <- head(result_gfr_bsa_others, 100)$AptName
predictors_gfr_bsa_others <- as.matrix(subset(others_gfr_bsa_plasma, select = result_gfr_bsa_others_100))
# Elastic net regression
en_gfr_bsa_others <- easy_elasticnet(data = others_gfr_bsa_plasma, 
                        outcome = "gfr_bsa_plasma", out = "min.error",
                        predictors = predictors_gfr_bsa_others,
                        cv_method="kfold", folds = 10)

retained_vars_gfr_bsa_others = analytes[analytes$AptName %in% en_gfr_bsa_others, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_gfr_bsa_others = as.formula(paste0("log(gfr_bsa_plasma) ~ ",paste0(en_gfr_bsa_others,collapse = "+")))
mod_gfr_bsa_others = lm(formula = form_gfr_bsa_others, data = others_gfr_bsa_plasma)
mod_df_gfr_bsa_others = as.data.frame(tidy(mod_gfr_bsa_others, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_gfr_bsa_others) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_gfr_bsa_others,p.value), digits = 3)
ggplot(mod_df_gfr_bsa_others[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_gfr_others_100)` proteins included in analysis. No. of proteins identified: `r length(en_gfr_bsa_others)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_gfr_bsa_others))
plot(mod_gfr_bsa_others)

# Adjusted R-squared 95% CI
rsq_gfr_bsa_others <- summary(mod_gfr_bsa_others)$adj.r.squared
k_gfr_bsa_others <- ncol(mod_gfr_bsa_others$model) - 1
n_gfr_bsa_others <- mod_gfr_bsa_others$df.residual + k_gfr_bsa_others + 1
rsq.se_gfr_bsa_others <- sqrt((4 * rsq_gfr_bsa_others * (1 - rsq_gfr_bsa_others)^2 * (n_gfr_bsa_others - k_gfr_bsa_others - 1)^2)/((n_gfr_bsa_others^2 - 1) * (3 + n_gfr_bsa_others)))
LL_gfr_bsa_others <- rsq_gfr_bsa_others - z*rsq.se_gfr_bsa_others
UL_gfr_bsa_others <- rsq_gfr_bsa_others + z*rsq.se_gfr_bsa_others
```

### RPF (Raw plasma)

```{r elastic-net-rpf-others, echo = F, warning = F, message=F}
# Limit to records with non-missing rpf
others_erpf_raw_plasma <- cleanData_others %>% 
  filter(!is.na(erpf_raw_plasma) & erpf_raw_plasma > 0) %>% 
  dplyr::select(erpf_raw_plasma, starts_with("seq")) 

# Top 100 associations to rpf
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(others_erpf_raw_plasma))
predictors <- colnames(others_erpf_raw_plasma[seq])

result_rpf_others <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("log(erpf_raw_plasma) ~ ",predictors[i])
  mod <- lm(data = others_erpf_raw_plasma, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_rpf_others <- rbind(result_rpf_others,tidymod)
}

result_rpf_others$adj.p.value <- p.adjust(result_rpf_others$p.value, "fdr")
result_rpf_others$AptName <- result_rpf_others$term
result_rpf_others$term <- NULL
result_rpf_others <- merge(result_rpf_others,analytes,by="AptName",all.x = T, all.y = F)
result_rpf_others <- result_rpf_others[order(result_rpf_others$p.value),] 
result_rpf_others_100 <- head(result_rpf_others, 70)$AptName
predictors_rpf_others <- as.matrix(subset(others_erpf_raw_plasma, select = result_rpf_others_100))
# Elastic net regression
en_rpf_others <- easy_elasticnet(data = others_erpf_raw_plasma, 
                        outcome = "erpf_raw_plasma", out = "min.error",
                        predictors = predictors_rpf_others,
                        cv_method="kfold", folds = 10)

retained_vars_rpf_others = analytes[analytes$AptName %in% en_rpf_others, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_rpf_others = as.formula(paste0("log(erpf_raw_plasma) ~ ",paste0(en_rpf_others,collapse = "+")))
mod_rpf_others = lm(formula = form_rpf_others, data = others_erpf_raw_plasma)
mod_df_rpf_others = as.data.frame(tidy(mod_rpf_others, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_rpf_others) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_rpf_others,p.value), digits = 3)
ggplot(mod_df_rpf_others[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_rpf_others_100)` proteins included in analysis. No. of proteins identified: `r length(en_rpf_others)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_rpf_others))
plot(mod_rpf_others)

# Adjusted R-squared 95% CI
rsq_rpf_others <- summary(mod_rpf_others)$adj.r.squared
k_rpf_others <- ncol(mod_rpf_others$model) - 1
n_rpf_others <- mod_rpf_others$df.residual + k_rpf_others + 1
rsq.se_rpf_others <- sqrt((4 * rsq_rpf_others * (1 - rsq_rpf_others)^2 * (n_rpf_others - k_rpf_others - 1)^2)/((n_rpf_others^2 - 1) * (3 + n_rpf_others)))
LL_rpf_others <- rsq_rpf_others - z*rsq.se_rpf_others
UL_rpf_others <- rsq_rpf_others + z*rsq.se_rpf_others
```

### RPF (BSA plasma)

```{r elastic-net-rpf-bsa-others, echo = F, warning = F, message=F}
# Limit to records with non-missing rpf
others_erpf_bsa_plasma <- cleanData_others %>% 
  filter(!is.na(erpf_bsa_plasma) & erpf_bsa_plasma > 0) %>% 
  dplyr::select(erpf_bsa_plasma, starts_with("seq")) 

# Top 100 associations to rpf
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(others_erpf_bsa_plasma))
predictors <- colnames(others_erpf_bsa_plasma[seq])

result_rpf_bsa_others <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("log(erpf_bsa_plasma) ~ ",predictors[i])
  mod <- lm(data = others_erpf_bsa_plasma, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_rpf_bsa_others <- rbind(result_rpf_bsa_others,tidymod)
}

result_rpf_bsa_others$adj.p.value <- p.adjust(result_rpf_bsa_others$p.value, "fdr")
result_rpf_bsa_others$AptName <- result_rpf_bsa_others$term
result_rpf_bsa_others$term <- NULL
result_rpf_bsa_others <- merge(result_rpf_bsa_others,analytes,by="AptName",all.x = T, all.y = F)
result_rpf_bsa_others <- result_rpf_bsa_others[order(result_rpf_bsa_others$p.value),] 
result_rpf_bsa_others_100 <- head(result_rpf_bsa_others, 100)$AptName
predictors_rpf_bsa_others <- as.matrix(subset(others_erpf_bsa_plasma, select = result_rpf_bsa_others_100))
# Elastic net regression
en_rpf_bsa_others <- easy_elasticnet(data = others_erpf_bsa_plasma, 
                        outcome = "erpf_bsa_plasma", out = "min.error",
                        predictors = predictors_rpf_bsa_others,
                        cv_method="kfold", folds = 10)

retained_vars_rpf_bsa_others = analytes[analytes$AptName %in% en_rpf_bsa_others, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_rpf_bsa_others = as.formula(paste0("log(erpf_bsa_plasma) ~ ",paste0(en_rpf_bsa_others,collapse = "+")))
mod_rpf_bsa_others = lm(formula = form_rpf_bsa_others, data = others_erpf_bsa_plasma)
mod_df_rpf_bsa_others = as.data.frame(tidy(mod_rpf_bsa_others, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_rpf_bsa_others) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_rpf_bsa_others,p.value), digits = 3)
ggplot(mod_df_rpf_bsa_others[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_rpf_bsa_others_100)` proteins included in analysis. No. of proteins identified: `r length(en_rpf_bsa_others)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_rpf_bsa_others))
plot(mod_rpf_bsa_others)

# Adjusted R-squared 95% CI
rsq_rpf_bsa_others <- summary(mod_rpf_bsa_others)$adj.r.squared
k_rpf_bsa_others <- ncol(mod_rpf_bsa_others$model) - 1
n_rpf_bsa_others <- mod_rpf_bsa_others$df.residual + k_rpf_bsa_others + 1
rsq.se_rpf_bsa_others <- sqrt((4 * rsq_rpf_bsa_others * (1 - rsq_rpf_bsa_others)^2 * (n_rpf_bsa_others - k_rpf_bsa_others - 1)^2)/((n_rpf_bsa_others^2 - 1) * (3 + n_rpf_bsa_others)))
LL_rpf_bsa_others <- rsq_rpf_bsa_others - z*rsq.se_rpf_bsa_others
UL_rpf_bsa_others <- rsq_rpf_bsa_others + z*rsq.se_rpf_bsa_others
```

## Model comparison
```{r models-others2, echo=F}
others <- data.frame(r2 = c(rsq_tkv_others, rsq_ht_adj_tkv_others, rsq_gfr_others, rsq_gfr_bsa_others, rsq_rpf_others, rsq_rpf_bsa_others),
                       lower = c(LL_tkv_others, LL_ht_adj_tkv_others, LL_gfr_others, LL_gfr_bsa_others, LL_rpf_others, LL_rpf_bsa_others),
                       upper = c(UL_tkv_others, UL_ht_adj_tkv_others, UL_gfr_others, UL_gfr_bsa_others, UL_rpf_others, UL_rpf_bsa_others),
                       Model = c("TKV", "Ht-adj TKV", "GFR-Raw", "GFR-BSA", "RPF-Raw", "RPF-BSA"),
                       No.proteins = c(length(en_tkv_others), 
                                       length(en_ht_adj_tkv_others), 
                                       length(en_gfr_others), 
                                       length(en_gfr_bsa_others), 
                                       length(en_rpf_others), 
                                       length(en_rpf_bsa_others)))
others$` ` <- paste(rep(" ", 20), collapse = " ")

# Create confidence interval column to display
others$`Adjusted R-squared (95% CI)` <- 
  ifelse(is.na(others$r2), "",
         sprintf("%.2f (%.2f to %.2f)",
                 others$r2, others$lower, others$upper))
others
forest(data = others[,c(4:7)], 
       est = others$r2,
       lower = others$lower,
       upper = others$upper, ci_column = 3)
```

# Elastic net for PANTHER + RH/RH2/IMPROVE
### Total Kidney Volume

```{r elastic-net-tkv-comb, echo = F, warning = F, message=F}
hist(cleanData_comb$combined_tkv)
# Limit to records with non-missing tkv
comb_combined_tkv <- cleanData_comb %>% 
  filter(!is.na(combined_tkv)) %>% 
  dplyr::select(combined_tkv, starts_with("seq"))

# Top 100 associations to tkv
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(comb_combined_tkv))
predictors <- colnames(comb_combined_tkv[seq])

result_tkv_comb <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("combined_tkv ~ ",predictors[i])
  mod <- lm(data = comb_combined_tkv, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_tkv_comb <- rbind(result_tkv_comb,tidymod)
}

result_tkv_comb$adj.p.value <- p.adjust(result_tkv_comb$p.value, "fdr")
result_tkv_comb$AptName <- result_tkv_comb$term
result_tkv_comb$term <- NULL
result_tkv_comb <- merge(result_tkv_comb,analytes,by="AptName",all.x = T, all.y = F)
result_tkv_comb <- result_tkv_comb[order(result_tkv_comb$p.value),] 
result_tkv_comb_100 <- head(result_tkv_comb, 100)$AptName
predictors_tkv_comb <- as.matrix(subset(comb_combined_tkv, select = result_tkv_comb_100))
# Elastic net regression
en_tkv_comb <- easy_elasticnet(data = comb_combined_tkv, 
                        outcome = "combined_tkv", out = "min.error",
                        predictors = predictors_tkv_comb,
                        cv_method="kfold", folds = 10)

retained_vars_tkv_comb = analytes[analytes$AptName %in% en_tkv_comb, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_tkv_comb = as.formula(paste0("combined_tkv ~ ",paste0(en_tkv_comb,collapse = "+")))
mod_tkv_comb = lm(formula = form_tkv_comb, data = comb_combined_tkv)
mod_df_tkv_comb = as.data.frame(tidy(mod_tkv_comb, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_tkv_comb) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_tkv_comb,p.value), digits = 3)
ggplot(mod_df_tkv_comb[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_tkv_comb_100)` proteins included in analysis. No. of proteins identified: `r length(en_tkv_comb)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_tkv_comb))
plot(mod_tkv_comb)

# Adjusted R-squared 95% CI
rsq_tkv_comb <- summary(mod_tkv_comb)$adj.r.squared
k_tkv_comb <- ncol(mod_tkv_comb$model) - 1
n_tkv_comb <- mod_tkv_comb$df.residual + k_tkv_comb + 1
rsq.se_tkv_comb <- sqrt((4 * rsq_tkv_comb * (1 - rsq_tkv_comb)^2 * (n_tkv_comb - k_tkv_comb - 1)^2)/((n_tkv_comb^2 - 1) * (3 + n_tkv_comb)))
LL_tkv_comb <- rsq_tkv_comb - z*rsq.se_tkv_comb
UL_tkv_comb <- rsq_tkv_comb + z*rsq.se_tkv_comb
```

### Height adjusted TKV

```{r elastic-net-httkv, echo = F, warning = F, message=F}
hist(cleanData_comb$combined_ht_tkv)
# Limit to records with non-missing ht_adj_tkv
ht_adj_tkv_comb <- cleanData_comb %>% 
  filter(!is.na(combined_ht_tkv)) %>% 
  dplyr::select(combined_ht_tkv, starts_with("seq")) 

# Top 100 associations to ht_adj_tkv
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(ht_adj_tkv_comb))
predictors <- colnames(ht_adj_tkv_comb[seq])

result_ht_adj_tkv_comb <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("combined_ht_tkv ~ ",predictors[i])
  mod <- lm(data = ht_adj_tkv_comb, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_ht_adj_tkv_comb <- rbind(result_ht_adj_tkv_comb,tidymod)
}

result_ht_adj_tkv_comb$adj.p.value <- p.adjust(result_ht_adj_tkv_comb$p.value, "fdr")
result_ht_adj_tkv_comb$AptName <- result_ht_adj_tkv_comb$term
result_ht_adj_tkv_comb$term <- NULL
result_ht_adj_tkv_comb <- merge(result_ht_adj_tkv_comb,analytes,by="AptName",all.x = T, all.y = F)
result_ht_adj_tkv_comb <- result_ht_adj_tkv_comb[order(result_ht_adj_tkv_comb$p.value),] 
result_ht_adj_tkv_100 <- head(result_ht_adj_tkv_comb, 100)$AptName
predictors_ht_adj_tkv_comb <- as.matrix(subset(ht_adj_tkv_comb, select = result_ht_adj_tkv_100))
# Elastic net regression
en_ht_adj_tkv_comb <- easy_elasticnet(data = ht_adj_tkv_comb, 
                        outcome = "combined_ht_tkv", out = "min.error",
                        predictors = predictors_ht_adj_tkv_comb,
                        cv_method="kfold", folds = 10)

retained_vars_ht_adj_tkv_comb = analytes[analytes$AptName %in% en_ht_adj_tkv_comb, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_ht_adj_tkv_comb = as.formula(paste0("combined_ht_tkv ~ ",paste0(en_ht_adj_tkv_comb,collapse = "+")))
mod_ht_adj_tkv_comb = lm(formula = form_ht_adj_tkv_comb, data = ht_adj_tkv_comb)
mod_df_ht_adj_tkv_comb = as.data.frame(tidy(mod_ht_adj_tkv_comb, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_ht_adj_tkv_comb) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_ht_adj_tkv_comb,p.value), digits = 3)

ggplot(mod_df_ht_adj_tkv_comb[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_ht_adj_tkv_100)` proteins included in analysis. No. of proteins identified: `r length(en_ht_adj_tkv_comb)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_ht_adj_tkv_comb))
plot(mod_ht_adj_tkv_comb)

# Adjusted R-squared 95% CI
rsq_ht_adj_tkv_comb <- summary(mod_ht_adj_tkv_comb)$adj.r.squared
k_ht_adj_tkv_comb <- ncol(mod_ht_adj_tkv_comb$model) - 1
n_ht_adj_tkv_comb <- mod_ht_adj_tkv_comb$df.residual + k_ht_adj_tkv_comb + 1
rsq.se_ht_adj_tkv_comb <- sqrt((4 * rsq_ht_adj_tkv_comb * (1 - rsq_ht_adj_tkv_comb)^2 * (n_ht_adj_tkv_comb - k_ht_adj_tkv_comb - 1)^2)/((n_ht_adj_tkv_comb^2 - 1) * (3 + n_ht_adj_tkv_comb)))
LL_ht_adj_tkv_comb <- rsq_ht_adj_tkv_comb - z*rsq.se_ht_adj_tkv_comb
UL_ht_adj_tkv_comb <- rsq_ht_adj_tkv_comb + z*rsq.se_ht_adj_tkv_comb
```

### GFR (Raw plasma)

```{r elastic-net-gfr, echo = F, warning = F, message=F}
# Limit to records with non-missing gfr
comb_gfr_raw_plasma <- cleanData_comb %>% 
  filter(!is.na(gfr_raw_plasma) & gfr_raw_plasma > 0) %>% 
  dplyr::select(gfr_raw_plasma, starts_with("seq")) 

# Top 100 associations to gfr
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(comb_gfr_raw_plasma))
predictors <- colnames(comb_gfr_raw_plasma[seq])

result_gfr_comb <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("log(gfr_raw_plasma) ~ ",predictors[i])
  mod <- lm(data = comb_gfr_raw_plasma, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_gfr_comb <- rbind(result_gfr_comb,tidymod)
}

result_gfr_comb$adj.p.value <- p.adjust(result_gfr_comb$p.value, "fdr")
result_gfr_comb$AptName <- result_gfr_comb$term
result_gfr_comb$term <- NULL
result_gfr_comb <- merge(result_gfr_comb,analytes,by="AptName",all.x = T, all.y = F)
result_gfr_comb <- result_gfr_comb[order(result_gfr_comb$p.value),] 
result_gfr_comb_100 <- head(result_gfr_comb, 75)$AptName
predictors_gfr_comb <- as.matrix(subset(comb_gfr_raw_plasma, select = result_gfr_comb_100))
# Elastic net regression
en_gfr_comb <- easy_elasticnet(data = comb_gfr_raw_plasma, 
                        outcome = "gfr_raw_plasma", out = "min.error",
                        predictors = predictors_gfr_comb,
                        cv_method="kfold", folds = 10)

retained_vars_gfr_comb = analytes[analytes$AptName %in% en_gfr_comb, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_gfr_comb = as.formula(paste0("log(gfr_raw_plasma) ~ ",paste0(en_gfr_comb,collapse = "+")))
mod_gfr_comb = lm(formula = form_gfr_comb, data = comb_gfr_raw_plasma)
mod_df_gfr_comb = as.data.frame(tidy(mod_gfr_comb, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_gfr_comb) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_gfr_comb,p.value), digits = 3)
ggplot(mod_df_gfr_comb[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_gfr_comb_100)` proteins included in analysis. No. of proteins identified: `r length(en_gfr_comb)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_gfr_comb))
plot(mod_gfr_comb)

# Adjusted R-squared 95% CI
rsq_gfr_comb <- summary(mod_gfr_comb)$adj.r.squared
k_gfr_comb <- ncol(mod_gfr_comb$model) - 1
n_gfr_comb <- mod_gfr_comb$df.residual + k_gfr_comb + 1
rsq.se_gfr_comb <- sqrt((4 * rsq_gfr_comb * (1 - rsq_gfr_comb)^2 * (n_gfr_comb - k_gfr_comb - 1)^2)/((n_gfr_comb^2 - 1) * (3 + n_gfr_comb)))
LL_gfr_comb <- rsq_gfr_comb - z*rsq.se_gfr_comb
UL_gfr_comb <- rsq_gfr_comb + z*rsq.se_gfr_comb
```

### GFR (BSA plasma)

```{r elastic-net-gfr-bsa, echo = F, warning = F, message=F}
# Limit to records with non-missing gfr
comb_gfr_bsa_plasma <- cleanData_comb %>% 
  filter(!is.na(gfr_bsa_plasma) & gfr_bsa_plasma > 0) %>% 
  dplyr::select(gfr_bsa_plasma, starts_with("seq")) 

# Top 100 associations to gfr
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(comb_gfr_bsa_plasma))
predictors <- colnames(comb_gfr_bsa_plasma[seq])

result_gfr_bsa_comb <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("log(gfr_bsa_plasma) ~ ",predictors[i])
  mod <- lm(data = comb_gfr_bsa_plasma, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_gfr_bsa_comb <- rbind(result_gfr_bsa_comb,tidymod)
}

result_gfr_bsa_comb$adj.p.value <- p.adjust(result_gfr_bsa_comb$p.value, "fdr")
result_gfr_bsa_comb$AptName <- result_gfr_bsa_comb$term
result_gfr_bsa_comb$term <- NULL
result_gfr_bsa_comb <- merge(result_gfr_bsa_comb,analytes,by="AptName",all.x = T, all.y = F)
result_gfr_bsa_comb <- result_gfr_bsa_comb[order(result_gfr_bsa_comb$p.value),] 
result_gfr_bsa_comb_100 <- head(result_gfr_bsa_comb, 100)$AptName
predictors_gfr_bsa_comb <- as.matrix(subset(comb_gfr_bsa_plasma, select = result_gfr_bsa_comb_100))
# Elastic net regression
en_gfr_bsa_comb <- easy_elasticnet(data = comb_gfr_bsa_plasma, 
                        outcome = "gfr_bsa_plasma", out = "min.error",
                        predictors = predictors_gfr_bsa_comb,
                        cv_method="kfold", folds = 10)

retained_vars_gfr_bsa_comb = analytes[analytes$AptName %in% en_gfr_bsa_comb, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_gfr_bsa_comb = as.formula(paste0("log(gfr_bsa_plasma) ~ ",paste0(en_gfr_bsa_comb,collapse = "+")))
mod_gfr_bsa_comb = lm(formula = form_gfr_bsa_comb, data = comb_gfr_bsa_plasma)
mod_df_gfr_bsa_comb = as.data.frame(tidy(mod_gfr_bsa_comb, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_gfr_bsa_comb) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_gfr_bsa_comb,p.value), digits = 3)
ggplot(mod_df_gfr_bsa_comb[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_gfr_bsa_comb_100)` proteins included in analysis. No. of proteins identified: `r length(en_gfr_bsa_comb)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_gfr_bsa_comb))
plot(mod_gfr_bsa_comb)

# Adjusted R-squared 95% CI
rsq_gfr_bsa_comb <- summary(mod_gfr_bsa_comb)$adj.r.squared
k_gfr_bsa_comb <- ncol(mod_gfr_bsa_comb$model) - 1
n_gfr_bsa_comb <- mod_gfr_bsa_comb$df.residual + k_gfr_bsa_comb + 1
rsq.se_gfr_bsa_comb <- sqrt((4 * rsq_gfr_bsa_comb * (1 - rsq_gfr_bsa_comb)^2 * (n_gfr_bsa_comb - k_gfr_bsa_comb - 1)^2)/((n_gfr_bsa_comb^2 - 1) * (3 + n_gfr_bsa_comb)))
LL_gfr_bsa_comb <- rsq_gfr_bsa_comb - z*rsq.se_gfr_bsa_comb
UL_gfr_bsa_comb <- rsq_gfr_bsa_comb + z*rsq.se_gfr_bsa_comb
```

### RPF (Raw plasma)

```{r elastic-net-rpf, echo = F, warning = F, message=F}
# Limit to records with non-missing rpf
comb_erpf_raw_plasma <- cleanData_comb %>% 
  filter(!is.na(erpf_raw_plasma) & erpf_raw_plasma > 0) %>% 
  dplyr::select(erpf_raw_plasma, starts_with("seq")) 

# Top 100 associations to rpf
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(comb_erpf_raw_plasma))
predictors <- colnames(comb_erpf_raw_plasma[seq])

result_rpf_comb <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("log(erpf_raw_plasma) ~ ",predictors[i])
  mod <- lm(data = comb_erpf_raw_plasma, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_rpf_comb <- rbind(result_rpf_comb,tidymod)
}

result_rpf_comb$adj.p.value <- p.adjust(result_rpf_comb$p.value, "fdr")
result_rpf_comb$AptName <- result_rpf_comb$term
result_rpf_comb$term <- NULL
result_rpf_comb <- merge(result_rpf_comb,analytes,by="AptName",all.x = T, all.y = F)
result_rpf_comb <- result_rpf_comb[order(result_rpf_comb$p.value),] 
result_rpf_comb_100 <- head(result_rpf_comb, 100)$AptName
predictors_rpf_comb <- as.matrix(subset(comb_erpf_raw_plasma, select = result_rpf_comb_100))
# Elastic net regression
en_rpf_comb <- easy_elasticnet(data = comb_erpf_raw_plasma, 
                        outcome = "erpf_raw_plasma", out = "min.error",
                        predictors = predictors_rpf_comb,
                        cv_method="kfold", folds = 10)

retained_vars_rpf_comb = analytes[analytes$AptName %in% en_rpf_comb, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_rpf_comb = as.formula(paste0("log(erpf_raw_plasma) ~ ",paste0(en_rpf_comb,collapse = "+")))
mod_rpf_comb = lm(formula = form_rpf_comb, data = comb_erpf_raw_plasma)
mod_df_rpf_comb = as.data.frame(tidy(mod_rpf_comb, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_rpf_comb) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_rpf_comb,p.value), digits = 3)
ggplot(mod_df_rpf_comb[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_rpf_comb_100)` proteins included in analysis. No. of proteins identified: `r length(en_rpf_comb)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_rpf_comb))
plot(mod_rpf_comb)

# Adjusted R-squared 95% CI
rsq_rpf_comb <- summary(mod_rpf_comb)$adj.r.squared
k_rpf_comb <- ncol(mod_rpf_comb$model) - 1
n_rpf_comb <- mod_rpf_comb$df.residual + k_rpf_comb + 1
rsq.se_rpf_comb <- sqrt((4 * rsq_rpf_comb * (1 - rsq_rpf_comb)^2 * (n_rpf_comb - k_rpf_comb - 1)^2)/((n_rpf_comb^2 - 1) * (3 + n_rpf_comb)))
LL_rpf_comb <- rsq_rpf_comb - z*rsq.se_rpf_comb
UL_rpf_comb <- rsq_rpf_comb + z*rsq.se_rpf_comb
```

### RPF (BSA plasma)

```{r elastic-net-rpf-bsa, echo = F, warning = F, message=F}
# Limit to records with non-missing rpf
comb_erpf_bsa_plasma <- cleanData_comb %>% 
  filter(!is.na(erpf_bsa_plasma) & erpf_bsa_plasma > 0) %>% 
  dplyr::select(erpf_bsa_plasma, starts_with("seq")) 

# Top 100 associations to rpf
is_seq <- function(.x) grepl("seq", .x)
seq <- is_seq(names(comb_erpf_bsa_plasma))
predictors <- colnames(comb_erpf_bsa_plasma[seq])

result_rpf_bsa_comb <- NULL
for (i in 1:length(predictors)) {
  form <- paste0("log(erpf_bsa_plasma) ~ ",predictors[i])
  mod <- lm(data = comb_erpf_bsa_plasma, formula = as.formula(form))
  tidymod <- tidy(mod, exponentiate=F, conf.int = TRUE)
  tidymod <- tidymod[2,]
  result_rpf_bsa_comb <- rbind(result_rpf_bsa_comb,tidymod)
}

result_rpf_bsa_comb$adj.p.value <- p.adjust(result_rpf_bsa_comb$p.value, "fdr")
result_rpf_bsa_comb$AptName <- result_rpf_bsa_comb$term
result_rpf_bsa_comb$term <- NULL
result_rpf_bsa_comb <- merge(result_rpf_bsa_comb,analytes,by="AptName",all.x = T, all.y = F)
result_rpf_bsa_comb <- result_rpf_bsa_comb[order(result_rpf_bsa_comb$p.value),] 
result_rpf_bsa_comb_100 <- head(result_rpf_bsa_comb, 100)$AptName
predictors_rpf_bsa_comb <- as.matrix(subset(comb_erpf_bsa_plasma, select = result_rpf_bsa_comb_100))
# Elastic net regression
en_rpf_bsa_comb <- easy_elasticnet(data = comb_erpf_bsa_plasma, 
                        outcome = "erpf_bsa_plasma", out = "min.error",
                        predictors = predictors_rpf_bsa_comb,
                        cv_method="kfold", folds = 10)

retained_vars_rpf_bsa_comb = analytes[analytes$AptName %in% en_rpf_bsa_comb, c("AptName","Target_nodup","TargetFullName")] %>%
  dplyr::rename("term" = AptName)

form_rpf_bsa_comb = as.formula(paste0("log(erpf_bsa_plasma) ~ ",paste0(en_rpf_bsa_comb,collapse = "+")))
mod_rpf_bsa_comb = lm(formula = form_rpf_bsa_comb, data = comb_erpf_bsa_plasma)
mod_df_rpf_bsa_comb = as.data.frame(tidy(mod_rpf_bsa_comb, exponentiate = F, conf.int = T), digits = 3) %>% left_join(retained_vars_rpf_bsa_comb) %>%
  dplyr::mutate(Target_nodup = case_when(is.na(Target_nodup) ~ "Intercept", T ~ Target_nodup),
         TargetFullName = case_when(is.na(TargetFullName) ~ "Intercept", T ~ TargetFullName)) %>%
  dplyr::select(Target_nodup, TargetFullName, estimate, std.error, statistic, p.value, conf.low, conf.high)

kable(arrange(mod_df_rpf_bsa_comb,p.value), digits = 3)
ggplot(mod_df_rpf_bsa_comb[-1,], 
       aes(estimate, 
           reorder(Target_nodup,dplyr::desc(p.value)), 
           xmin = conf.low, 
           xmax = conf.high, 
           height = 0)) +
  geom_point() +
  geom_vline(xintercept = 0, lty = 4) +
  geom_errorbarh() +
  labs(y = NULL)
```

Top `r length(result_rpf_bsa_comb_100)` proteins included in analysis. No. of proteins identified: `r length(en_rpf_bsa_comb)`.

```{r echo = F, warning = F, message=F}
kable(glance(mod_rpf_bsa_comb))
plot(mod_rpf_bsa_comb)

# Adjusted R-squared 95% CI
rsq_rpf_bsa_comb <- summary(mod_rpf_bsa_comb)$adj.r.squared
k_rpf_bsa_comb <- ncol(mod_rpf_bsa_comb$model) - 1
n_rpf_bsa_comb <- mod_rpf_bsa_comb$df.residual + k_rpf_bsa_comb + 1
rsq.se_rpf_bsa_comb <- sqrt((4 * rsq_rpf_bsa_comb * (1 - rsq_rpf_bsa_comb)^2 * (n_rpf_bsa_comb - k_rpf_bsa_comb - 1)^2)/((n_rpf_bsa_comb^2 - 1) * (3 + n_rpf_bsa_comb)))
LL_rpf_bsa_comb <- rsq_rpf_bsa_comb - z*rsq.se_rpf_bsa_comb
UL_rpf_bsa_comb <- rsq_rpf_bsa_comb + z*rsq.se_rpf_bsa_comb
```

## Model comparison
```{r models-combined3, echo=F}
combined <- data.frame(r2 = c(rsq_tkv_comb, rsq_ht_adj_tkv_comb, rsq_gfr_comb, rsq_gfr_bsa_comb, rsq_rpf_comb, rsq_rpf_bsa_comb),
                       lower = c(LL_tkv_comb, LL_ht_adj_tkv_comb, LL_gfr_comb, LL_gfr_bsa_comb, LL_rpf_comb, LL_rpf_bsa_comb),
                       upper = c(UL_tkv_comb, UL_ht_adj_tkv_comb, UL_gfr_comb, UL_gfr_bsa_comb, UL_rpf_comb, UL_rpf_bsa_comb),
                       Model = c("TKV", "Ht-adj TKV", "GFR-Raw", "GFR-BSA", "RPF-Raw", "RPF-BSA"),
                       No.proteins = c(length(en_tkv_comb), 
                                       length(en_ht_adj_tkv_comb), 
                                       length(en_gfr_comb), 
                                       length(en_gfr_bsa_comb), 
                                       length(en_rpf_comb), 
                                       length(en_rpf_bsa_comb)))
combined$` ` <- paste(rep(" ", 20), collapse = " ")

# Create confidence interval column to display
combined$`Adjusted R-squared (95% CI)` <- 
  ifelse(is.na(combined$r2), "",
         sprintf("%.2f (%.2f to %.2f)",
                 combined$r2, combined$lower, combined$upper))
combined
forest(data = combined[,c(4:7)], 
       est = combined$r2,
       lower = combined$lower,
       upper = combined$upper, ci_column = 3)
```

# Overlap of proteins (PANTHER vs. RH/RH2/IMPROVE)

## Total Kidney Volume
```{r venn-diagram-tkv}
both_n_tkv = sum(en_tkv_others %in% retained_vars_tkv$term)
panther_n_tkv = nrow(retained_vars_tkv) - both_n_tkv
others_n_tkv = length(en_tkv_others) - both_n_tkv
  
plot(euler(c("PANTHER" = panther_n_tkv, 
        "RH/RH2/IMPROVE" = others_n_tkv,
        "PANTHER&RH/RH2/IMPROVE" = both_n_tkv)),
     quantities = list(cex = 1.1, col = c("#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#f25c54", "#013a63")))
```

## Height adjusted TKV
```{r venn-diagram-ht-adj-tkv}
both_n_ht_adj_tkv = sum(en_ht_adj_tkv_others %in% retained_vars_ht_adj_tkv$term)
panther_n_ht_adj_tkv = nrow(retained_vars_ht_adj_tkv) - both_n_ht_adj_tkv
others_n_ht_adj_tkv = length(en_ht_adj_tkv_others) - both_n_ht_adj_tkv
  
plot(euler(c("PANTHER" = panther_n_ht_adj_tkv, 
        "RH/RH2/IMPROVE" = others_n_ht_adj_tkv,
        "PANTHER&RH/RH2/IMPROVE" = both_n_ht_adj_tkv)),
     quantities = list(cex = 1.1, col = c("#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#f25c54", "#013a63")))
```

## GFR (Raw plasma)
```{r venn-diagram-gfr}
both_n_gfr = sum(en_gfr_others %in% retained_vars_gfr$term)
panther_n_gfr = nrow(retained_vars_gfr) - both_n_gfr
others_n_gfr = length(en_gfr_others) - both_n_gfr
  
plot(euler(c("PANTHER" = panther_n_gfr, 
        "RH/RH2/IMPROVE" = others_n_gfr,
        "PANTHER&RH/RH2/IMPROVE" = both_n_gfr)),
     quantities = list(cex = 1.1, col = c("#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#f25c54", "#013a63")))
```

## GFR (BSA plasma)
```{r venn-diagram-gfr_bsa}
both_n_gfr_bsa = sum(en_gfr_bsa_others %in% retained_vars_gfr_bsa$term)
panther_n_gfr_bsa = nrow(retained_vars_gfr_bsa) - both_n_gfr_bsa
others_n_gfr_bsa = length(en_gfr_bsa_others) - both_n_gfr_bsa
  
plot(euler(c("PANTHER" = panther_n_gfr_bsa, 
        "RH/RH2/IMPROVE" = others_n_gfr_bsa,
        "PANTHER&RH/RH2/IMPROVE" = both_n_gfr_bsa)),
     quantities = list(cex = 1.1, col = c("#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#f25c54", "#013a63")))
```

## RPF (Raw plasma)
```{r venn-diagram-rpf}
both_n_rpf = sum(en_rpf_others %in% retained_vars_rpf$term)
panther_n_rpf = nrow(retained_vars_rpf) - both_n_rpf
others_n_rpf = length(en_rpf_others) - both_n_rpf
  
plot(euler(c("PANTHER" = panther_n_rpf, 
        "RH/RH2/IMPROVE" = others_n_rpf,
        "PANTHER&RH/RH2/IMPROVE" = both_n_rpf)),
     quantities = list(cex = 1.1, col = c("#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#f25c54", "#013a63")))
```

## RPF (BSA plasma)
```{r venn-diagram-rpf_bsa}
both_n_rpf_bsa = sum(en_rpf_bsa_others %in% retained_vars_rpf_bsa$term)
panther_n_rpf_bsa = nrow(retained_vars_rpf_bsa) - both_n_rpf_bsa
others_n_rpf_bsa = length(en_rpf_bsa_others) - both_n_rpf_bsa
  
plot(euler(c("PANTHER" = panther_n_rpf_bsa, 
        "RH/RH2/IMPROVE" = others_n_rpf_bsa,
        "PANTHER&RH/RH2/IMPROVE" = both_n_rpf_bsa)),
     quantities = list(cex = 1.1, col = c("#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#f25c54", "#013a63")))
```

# Overlap of proteins (IMPROVE vs. RH/RH2/IMPROVE vs. ALL)

## Total Kidney Volume
```{r venn-diagram-tkv-2}
comb_n_tkv = length(en_tkv_comb)
panther_n_tkv = nrow(retained_vars_tkv)
others_n_tkv = length(en_tkv_others)
comb_n_tkv + panther_n_tkv + others_n_tkv

comb_panther_n_tkv = sum(en_tkv_comb %in% retained_vars_tkv$term)
comb_others_n_tkv = sum(en_tkv_comb %in% en_tkv_others)
panther_others_n_tkv = sum(en_tkv_others %in% retained_vars_tkv$term)

all_n_tkv = sum((en_tkv_comb %in% retained_vars_tkv$term) &
                       (en_tkv_comb %in% en_tkv_others))

plot(euler(c("ALL" = comb_n_tkv - comb_panther_n_tkv - comb_others_n_tkv - all_n_tkv,
             "PANTHER" = panther_n_tkv - comb_panther_n_tkv - panther_others_n_tkv - all_n_tkv, 
             "RH/RH2/IMPROVE" = others_n_tkv - comb_others_n_tkv - panther_others_n_tkv - all_n_tkv,
             "PANTHER&RH/RH2/IMPROVE" = panther_others_n_tkv- all_n_tkv,
             "PANTHER&ALL" = comb_panther_n_tkv - all_n_tkv,
             "RH/RH2/IMPROVE&ALL" = comb_others_n_tkv - all_n_tkv,
             "PANTHER&RH/RH2/IMPROVE&ALL" = all_n_tkv)),
     quantities = list(cex = 1.1, col = c("#132a13", "#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#cce3de", "#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#132a13", "#f25c54", "#013a63")))
```

## Height adjusted TKV
```{r venn-diagram-ht-adj-tkv-2}
comb_n_ht_adj_tkv = length(en_ht_adj_tkv_comb)
panther_n_ht_adj_tkv = nrow(retained_vars_ht_adj_tkv)
others_n_ht_adj_tkv = length(en_ht_adj_tkv_others)
comb_n_ht_adj_tkv + panther_n_ht_adj_tkv + others_n_ht_adj_tkv

comb_panther_n_ht_adj_tkv = sum(en_ht_adj_tkv_comb %in% retained_vars_ht_adj_tkv$term)
comb_others_n_ht_adj_tkv = sum(en_ht_adj_tkv_comb %in% en_ht_adj_tkv_others)
panther_others_n_ht_adj_tkv = sum(en_ht_adj_tkv_others %in% retained_vars_ht_adj_tkv$term)

all_n_ht_adj_tkv = sum((en_ht_adj_tkv_comb %in% retained_vars_ht_adj_tkv$term) &
                       (en_ht_adj_tkv_comb %in% en_ht_adj_tkv_others))

plot(euler(c("ALL" = comb_n_ht_adj_tkv - comb_panther_n_ht_adj_tkv - comb_others_n_ht_adj_tkv - all_n_ht_adj_tkv,
             "PANTHER" = panther_n_ht_adj_tkv - comb_panther_n_ht_adj_tkv - panther_others_n_ht_adj_tkv - all_n_ht_adj_tkv, 
             "RH/RH2/IMPROVE" = others_n_ht_adj_tkv - comb_others_n_ht_adj_tkv - panther_others_n_ht_adj_tkv - all_n_ht_adj_tkv,
             "PANTHER&RH/RH2/IMPROVE" = panther_others_n_ht_adj_tkv - all_n_ht_adj_tkv,
             "PANTHER&ALL" = comb_panther_n_ht_adj_tkv - all_n_ht_adj_tkv,
             "RH/RH2/IMPROVE&ALL" = comb_others_n_ht_adj_tkv - all_n_ht_adj_tkv,
             "PANTHER&RH/RH2/IMPROVE&ALL" = all_n_ht_adj_tkv)),
     quantities = list(cex = 1.1, col = c("#132a13", "#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#cce3de", "#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#132a13", "#f25c54", "#013a63")))
```

## GFR (Raw plasma)
```{r venn-diagram-gfr-2}
comb_n_gfr = length(en_gfr_comb)
panther_n_gfr = nrow(retained_vars_gfr)
others_n_gfr = length(en_gfr_others)
comb_n_gfr + panther_n_gfr + others_n_gfr

comb_panther_n_gfr = sum(en_gfr_comb %in% retained_vars_gfr$term)
comb_others_n_gfr = sum(en_gfr_comb %in% en_gfr_others)
panther_others_n_gfr = sum(en_gfr_others %in% retained_vars_gfr$term)

all_n_gfr = sum((en_gfr_comb %in% retained_vars_gfr$term) &
                       (en_gfr_comb %in% en_gfr_others))

plot(euler(c("ALL" = comb_n_gfr - comb_panther_n_gfr - comb_others_n_gfr - all_n_gfr,
             "PANTHER" = panther_n_gfr - comb_panther_n_gfr - panther_others_n_gfr - all_n_gfr, 
             "RH/RH2/IMPROVE" = others_n_gfr - comb_others_n_gfr - panther_others_n_gfr - all_n_gfr,
             "PANTHER&RH/RH2/IMPROVE" = panther_others_n_gfr - all_n_gfr,
             "PANTHER&ALL" = comb_panther_n_gfr - all_n_gfr,
             "RH/RH2/IMPROVE&ALL" = comb_others_n_gfr - all_n_gfr,
             "PANTHER&RH/RH2/IMPROVE&ALL" = all_n_gfr)),
     quantities = list(cex = 1.1, col = c("#132a13", "#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#cce3de", "#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#132a13", "#f25c54", "#013a63")))
```

## GFR (BSA plasma)
```{r venn-diagram-gfr_bsa-2}
comb_n_gfr_bsa = length(en_gfr_bsa_comb)
panther_n_gfr_bsa = nrow(retained_vars_gfr_bsa)
others_n_gfr_bsa = length(en_gfr_bsa_others)
comb_n_gfr_bsa + panther_n_gfr_bsa + others_n_gfr_bsa

comb_panther_n_gfr_bsa = sum(en_gfr_bsa_comb %in% retained_vars_gfr_bsa$term)
comb_others_n_gfr_bsa = sum(en_gfr_bsa_comb %in% en_gfr_bsa_others)
panther_others_n_gfr_bsa = sum(en_gfr_bsa_others %in% retained_vars_gfr_bsa$term)

all_n_gfr_bsa = sum((en_gfr_bsa_comb %in% retained_vars_gfr_bsa$term) &
                       (en_gfr_bsa_comb %in% en_gfr_bsa_others))

plot(euler(c("ALL" = comb_n_gfr_bsa - comb_panther_n_gfr_bsa - comb_others_n_gfr_bsa - all_n_gfr_bsa,
             "PANTHER" = panther_n_gfr_bsa - comb_panther_n_gfr_bsa - panther_others_n_gfr_bsa - all_n_gfr_bsa, 
             "RH/RH2/IMPROVE" = others_n_gfr_bsa - comb_others_n_gfr_bsa - panther_others_n_gfr_bsa - all_n_gfr_bsa,
             "PANTHER&RH/RH2/IMPROVE" = panther_others_n_gfr_bsa - all_n_gfr_bsa,
             "PANTHER&ALL" = comb_panther_n_gfr_bsa - all_n_gfr_bsa,
             "RH/RH2/IMPROVE&ALL" = comb_others_n_gfr_bsa - all_n_gfr_bsa,
             "PANTHER&RH/RH2/IMPROVE&ALL" = all_n_gfr_bsa)),
     quantities = list(cex = 1.1, col = c("#132a13", "#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#cce3de", "#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#132a13", "#f25c54", "#013a63")))
```

## RPF (Raw plasma)
```{r venn-diagram-rpf-2}
comb_n_rpf = length(en_rpf_comb)
panther_n_rpf = nrow(retained_vars_rpf)
others_n_rpf = length(en_rpf_others)
comb_n_rpf + panther_n_rpf + others_n_rpf

comb_panther_n_rpf = sum(en_rpf_comb %in% retained_vars_rpf$term)
comb_others_n_rpf = sum(en_rpf_comb %in% en_rpf_others)
panther_others_n_rpf = sum(en_rpf_others %in% retained_vars_rpf$term)

all_n_rpf = sum((en_rpf_comb %in% retained_vars_rpf$term) &
                       (en_rpf_comb %in% en_rpf_others))

plot(euler(c("ALL" = comb_n_rpf - comb_panther_n_rpf - comb_others_n_rpf - all_n_rpf,
             "PANTHER" = panther_n_rpf - comb_panther_n_rpf - panther_others_n_rpf - all_n_rpf, 
             "RH/RH2/IMPROVE" = others_n_rpf - comb_others_n_rpf - panther_others_n_rpf - all_n_rpf,
             "PANTHER&RH/RH2/IMPROVE" = panther_others_n_rpf - all_n_rpf,
             "PANTHER&ALL" = comb_panther_n_rpf - all_n_rpf,
             "RH/RH2/IMPROVE&ALL" = comb_others_n_rpf - all_n_rpf,
             "PANTHER&RH/RH2/IMPROVE&ALL" = all_n_rpf)),
     quantities = list(cex = 1.1, col = c("#132a13", "#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#cce3de", "#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#132a13", "#f25c54", "#013a63")))
```

## RPF (BSA plasma)
```{r venn-diagram-rpf_bsa-2}
comb_n_rpf_bsa = length(en_rpf_bsa_comb)
panther_n_rpf_bsa = nrow(retained_vars_rpf_bsa)
others_n_rpf_bsa = length(en_rpf_bsa_others)
comb_n_rpf_bsa + panther_n_rpf_bsa + others_n_rpf_bsa

comb_panther_n_rpf_bsa = sum(en_rpf_bsa_comb %in% retained_vars_rpf_bsa$term)
comb_others_n_rpf_bsa = sum(en_rpf_bsa_comb %in% en_rpf_bsa_others)
panther_others_n_rpf_bsa = sum(en_rpf_bsa_others %in% retained_vars_rpf_bsa$term)

all_n_rpf_bsa = sum((en_rpf_bsa_comb %in% retained_vars_rpf_bsa$term) &
                       (en_rpf_bsa_comb %in% en_rpf_bsa_others))

plot(euler(c("ALL" = comb_n_rpf_bsa - comb_panther_n_rpf_bsa - comb_others_n_rpf_bsa - all_n_rpf_bsa,
             "PANTHER" = panther_n_rpf_bsa - comb_panther_n_rpf_bsa - panther_others_n_rpf_bsa - all_n_rpf_bsa, 
             "RH/RH2/IMPROVE" = others_n_rpf_bsa - comb_others_n_rpf_bsa - panther_others_n_rpf_bsa - all_n_rpf_bsa,
             "PANTHER&RH/RH2/IMPROVE" = panther_others_n_rpf_bsa - all_n_rpf_bsa,
             "PANTHER&ALL" = comb_panther_n_rpf_bsa - all_n_rpf_bsa,
             "RH/RH2/IMPROVE&ALL" = comb_others_n_rpf_bsa - all_n_rpf_bsa,
             "PANTHER&RH/RH2/IMPROVE&ALL" = all_n_rpf_bsa)),
     quantities = list(cex = 1.1, col = c("#132a13", "#f25c54", "#013a63", "#343a40", "#343a40", "#343a40","#343a40"),
                       font = 6),
     fills = c("#cce3de", "#fcd5ce", "#a9d6e5"),
     edges = c(lex = 0),
     labels = list(cex = 1.1, 
                   col = c("#132a13", "#f25c54", "#013a63")))
```